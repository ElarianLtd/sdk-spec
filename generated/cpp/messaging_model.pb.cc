// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging_model.proto

#include "messaging_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CustomerNumber_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DequeueCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DialCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmailMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnqueueCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LocationMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MediaMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_OutboundMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordSessionCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RedirectCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RejectCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SayCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TemplateMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_VoiceCallAction_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class MessagingChannelNumberDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessagingChannelNumber> _instance;
} _MessagingChannelNumber_default_instance_;
class MediaMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MediaMessageBody> _instance;
} _MediaMessageBody_default_instance_;
class LocationMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocationMessageBody> _instance;
} _LocationMessageBody_default_instance_;
class EmailMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmailMessageBody> _instance;
} _EmailMessageBody_default_instance_;
class TemplateMessageBody_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TemplateMessageBody_ParamsEntry_DoNotUse> _instance;
} _TemplateMessageBody_ParamsEntry_DoNotUse_default_instance_;
class TemplateMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TemplateMessageBody> _instance;
} _TemplateMessageBody_default_instance_;
class SayCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SayCallAction> _instance;
} _SayCallAction_default_instance_;
class PlayCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayCallAction> _instance;
} _PlayCallAction_default_instance_;
class GetDigitsCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDigitsCallAction> _instance;
} _GetDigitsCallAction_default_instance_;
class GetRecordingCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRecordingCallAction> _instance;
} _GetRecordingCallAction_default_instance_;
class RecordSessionCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecordSessionCallAction> _instance;
} _RecordSessionCallAction_default_instance_;
class DialCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DialCallAction> _instance;
} _DialCallAction_default_instance_;
class EnqueueCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnqueueCallAction> _instance;
} _EnqueueCallAction_default_instance_;
class DequeueCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DequeueCallAction> _instance;
} _DequeueCallAction_default_instance_;
class RejectCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RejectCallAction> _instance;
} _RejectCallAction_default_instance_;
class RedirectCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RedirectCallAction> _instance;
} _RedirectCallAction_default_instance_;
class VoiceCallActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoiceCallAction> _instance;
} _VoiceCallAction_default_instance_;
class VoiceCallDialplanMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoiceCallDialplanMessageBody> _instance;
} _VoiceCallDialplanMessageBody_default_instance_;
class VoiceCallDialInputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoiceCallDialInput> _instance;
} _VoiceCallDialInput_default_instance_;
class VoiceCallQueueInputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoiceCallQueueInput> _instance;
} _VoiceCallQueueInput_default_instance_;
class VoiceCallInputMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoiceCallInputMessageBody> _instance;
} _VoiceCallInputMessageBody_default_instance_;
class UssdInputMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UssdInputMessageBody> _instance;
} _UssdInputMessageBody_default_instance_;
class UssdMenuMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UssdMenuMessageBody> _instance;
} _UssdMenuMessageBody_default_instance_;
class OutboundMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutboundMessageBody> _instance;
} _OutboundMessageBody_default_instance_;
class PromptMessageMenuItemBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PromptMessageMenuItemBody> _instance;
} _PromptMessageMenuItemBody_default_instance_;
class InboundMessageBodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InboundMessageBody> _instance;
} _InboundMessageBody_default_instance_;
class OutboundMessageReplyPromptDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutboundMessageReplyPrompt> _instance;
} _OutboundMessageReplyPrompt_default_instance_;
class OutboundMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutboundMessage> _instance;
} _OutboundMessage_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_DequeueCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_DequeueCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::DequeueCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DequeueCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DequeueCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_DialCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_DialCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::DialCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DialCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_DialCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_EmailMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_EmailMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::EmailMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmailMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmailMessageBody_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_EnqueueCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_EnqueueCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::EnqueueCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EnqueueCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EnqueueCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_GetDigitsCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_GetDigitsCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::GetDigitsCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_GetDigitsCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_SayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_PlayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Int32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_GetRecordingCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_GetRecordingCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::GetRecordingCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_GetRecordingCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_SayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_PlayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_InboundMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_InboundMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::InboundMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_InboundMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_InboundMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_LocationMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_EmailMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_LocationMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_LocationMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::LocationMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LocationMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LocationMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_MediaMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_MediaMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::MediaMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MediaMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MediaMessageBody_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_MessagingChannelNumber_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_;
    new (ptr) ::com::elarian::hera::proto::MessagingChannelNumber();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MessagingChannelNumber_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_OutboundMessage_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_OutboundMessage_default_instance_;
    new (ptr) ::com::elarian::hera::proto::OutboundMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OutboundMessage_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_OutboundMessage_messaging_5fmodel_2eproto}, {
      &scc_info_OutboundMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_OutboundMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_OutboundMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::OutboundMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_OutboundMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_OutboundMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_LocationMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_EmailMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_TemplateMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto.base,
      &scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_OutboundMessageReplyPrompt_default_instance_;
    new (ptr) ::com::elarian::hera::proto::OutboundMessageReplyPrompt();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto}, {
      &scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_PlayCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PlayCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PlayCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayCallAction_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PromptMessageMenuItemBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PromptMessageMenuItemBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto}, {
      &scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_RecordSessionCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_RecordSessionCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::RecordSessionCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordSessionCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecordSessionCallAction_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_RedirectCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_RedirectCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::RedirectCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RedirectCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RedirectCallAction_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_RejectCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_RejectCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::RejectCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RejectCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RejectCallAction_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_SayCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_SayCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::SayCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SayCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SayCallAction_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_TemplateMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_TemplateMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::TemplateMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TemplateMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TemplateMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_TemplateMessageBody_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_UssdInputMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_UssdInputMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::UssdInputMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UssdInputMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_UssdMenuMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::UssdMenuMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_VoiceCallAction_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_VoiceCallAction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::VoiceCallAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_VoiceCallAction_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 10, 0, InitDefaultsscc_info_VoiceCallAction_messaging_5fmodel_2eproto}, {
      &scc_info_SayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_PlayCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_DialCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_RecordSessionCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_EnqueueCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_DequeueCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_RejectCallAction_messaging_5fmodel_2eproto.base,
      &scc_info_RedirectCallAction_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_VoiceCallDialInput_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_VoiceCallDialInput_default_instance_;
    new (ptr) ::com::elarian::hera::proto::VoiceCallDialInput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_VoiceCallDialInput_messaging_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_VoiceCallDialplanMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::VoiceCallDialplanMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_VoiceCallAction_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_VoiceCallInputMessageBody_default_instance_;
    new (ptr) ::com::elarian::hera::proto::VoiceCallInputMessageBody();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto.base,
      &scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_VoiceCallQueueInput_default_instance_;
    new (ptr) ::com::elarian::hera::proto::VoiceCallQueueInput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messaging_5fmodel_2eproto[28];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_messaging_5fmodel_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messaging_5fmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_messaging_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MessagingChannelNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MessagingChannelNumber, channel_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MessagingChannelNumber, number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MediaMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MediaMessageBody, url_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::MediaMessageBody, media_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::LocationMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::LocationMessageBody, latitude_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::LocationMessageBody, longitude_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::LocationMessageBody, label_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::LocationMessageBody, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, subject_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, body_plain_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, body_html_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, cc_list_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EmailMessageBody, bcc_list_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody, id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::TemplateMessageBody, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SayCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SayCallAction, text_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SayCallAction, voice_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::SayCallAction, play_beep_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PlayCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PlayCallAction, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, timeout_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, finish_on_key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, num_digits_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetDigitsCallAction, prompt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, timeout_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, max_length_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, finish_on_key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, play_beep_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, trim_silence_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::GetRecordingCallAction, prompt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::RecordSessionCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, customer_numbers_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, record_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, sequential_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, ringback_tone_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, caller_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DialCallAction, max_duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EnqueueCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EnqueueCallAction, hold_music_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::EnqueueCallAction, queue_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DequeueCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DequeueCallAction, channel_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DequeueCallAction, record_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DequeueCallAction, queue_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::RejectCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::RedirectCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::RedirectCallAction, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallAction, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallAction, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialplanMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialplanMessageBody, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialInput, destination_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialInput, started_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallDialInput, duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, enqueued_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, dequeued_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, dequeued_to_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, dequeued_to_sessionid_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallQueueInput, queue_duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, direction_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, status_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, started_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, hangup_cause_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, dtmf_digits_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, recording_url_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, dial_data_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::VoiceCallInputMessageBody, queue_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdInputMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdInputMessageBody, status_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdInputMessageBody, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdMenuMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdMenuMessageBody, text_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::UssdMenuMessageBody, is_terminal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageBody, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageBody, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PromptMessageMenuItemBody, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PromptMessageMenuItemBody, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PromptMessageMenuItemBody, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::InboundMessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::InboundMessageBody, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::InboundMessageBody, entry_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageReplyPrompt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageReplyPrompt, action_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessageReplyPrompt, menu_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, body_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, labels_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, provider_tag_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, reply_token_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::OutboundMessage, reply_prompt_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::MessagingChannelNumber)},
  { 7, -1, sizeof(::com::elarian::hera::proto::MediaMessageBody)},
  { 14, -1, sizeof(::com::elarian::hera::proto::LocationMessageBody)},
  { 23, -1, sizeof(::com::elarian::hera::proto::EmailMessageBody)},
  { 33, 40, sizeof(::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse)},
  { 42, -1, sizeof(::com::elarian::hera::proto::TemplateMessageBody)},
  { 49, -1, sizeof(::com::elarian::hera::proto::SayCallAction)},
  { 57, -1, sizeof(::com::elarian::hera::proto::PlayCallAction)},
  { 63, -1, sizeof(::com::elarian::hera::proto::GetDigitsCallAction)},
  { 74, -1, sizeof(::com::elarian::hera::proto::GetRecordingCallAction)},
  { 87, -1, sizeof(::com::elarian::hera::proto::RecordSessionCallAction)},
  { 92, -1, sizeof(::com::elarian::hera::proto::DialCallAction)},
  { 103, -1, sizeof(::com::elarian::hera::proto::EnqueueCallAction)},
  { 110, -1, sizeof(::com::elarian::hera::proto::DequeueCallAction)},
  { 118, -1, sizeof(::com::elarian::hera::proto::RejectCallAction)},
  { 123, -1, sizeof(::com::elarian::hera::proto::RedirectCallAction)},
  { 129, -1, sizeof(::com::elarian::hera::proto::VoiceCallAction)},
  { 145, -1, sizeof(::com::elarian::hera::proto::VoiceCallDialplanMessageBody)},
  { 151, -1, sizeof(::com::elarian::hera::proto::VoiceCallDialInput)},
  { 159, -1, sizeof(::com::elarian::hera::proto::VoiceCallQueueInput)},
  { 169, -1, sizeof(::com::elarian::hera::proto::VoiceCallInputMessageBody)},
  { 182, -1, sizeof(::com::elarian::hera::proto::UssdInputMessageBody)},
  { 189, -1, sizeof(::com::elarian::hera::proto::UssdMenuMessageBody)},
  { 196, -1, sizeof(::com::elarian::hera::proto::OutboundMessageBody)},
  { 210, -1, sizeof(::com::elarian::hera::proto::PromptMessageMenuItemBody)},
  { 218, -1, sizeof(::com::elarian::hera::proto::InboundMessageBody)},
  { 230, -1, sizeof(::com::elarian::hera::proto::OutboundMessageReplyPrompt)},
  { 237, -1, sizeof(::com::elarian::hera::proto::OutboundMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_MediaMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_LocationMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_EmailMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_TemplateMessageBody_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_TemplateMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_SayCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PlayCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_GetDigitsCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_GetRecordingCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_RecordSessionCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_DialCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_EnqueueCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_DequeueCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_RejectCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_RedirectCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_VoiceCallAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_VoiceCallDialplanMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_VoiceCallDialInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_VoiceCallQueueInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_VoiceCallInputMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_UssdInputMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_UssdMenuMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_OutboundMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PromptMessageMenuItemBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_InboundMessageBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_OutboundMessageReplyPrompt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_OutboundMessage_default_instance_),
};

const char descriptor_table_protodef_messaging_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025messaging_model.proto\022\026com.elarian.her"
  "a.proto\032\036google/protobuf/wrappers.proto\032"
  "\036google/protobuf/duration.proto\032\037google/"
  "protobuf/timestamp.proto\032\022common_model.p"
  "roto\"c\n\026MessagingChannelNumber\0229\n\007channe"
  "l\030\001 \001(\0162(.com.elarian.hera.proto.Messagi"
  "ngChannel\022\016\n\006number\030\002 \001(\t\"Q\n\020MediaMessag"
  "eBody\022\013\n\003url\030\001 \001(\t\0220\n\005media\030\002 \001(\0162!.com."
  "elarian.hera.proto.MediaType\"\226\001\n\023Locatio"
  "nMessageBody\022\020\n\010latitude\030\001 \001(\001\022\021\n\tlongit"
  "ude\030\002 \001(\001\022+\n\005label\030\003 \001(\0132\034.google.protob"
  "uf.StringValue\022-\n\007address\030\004 \001(\0132\034.google"
  ".protobuf.StringValue\"m\n\020EmailMessageBod"
  "y\022\017\n\007subject\030\001 \001(\t\022\022\n\nbody_plain\030\002 \001(\t\022\021"
  "\n\tbody_html\030\003 \001(\t\022\017\n\007cc_list\030\004 \003(\t\022\020\n\010bc"
  "c_list\030\005 \003(\t\"\231\001\n\023TemplateMessageBody\022\n\n\002"
  "id\030\001 \001(\t\022G\n\006params\030\002 \003(\01327.com.elarian.h"
  "era.proto.TemplateMessageBody.ParamsEntr"
  "y\032-\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\"j\n\rSayCallAction\022\014\n\004text\030\001 \001(\t\022"
  "8\n\005voice\030\002 \001(\0162).com.elarian.hera.proto."
  "TextToSpeechVoice\022\021\n\tplay_beep\030\003 \001(\010\"\035\n\016"
  "PlayCallAction\022\013\n\003url\030\001 \001(\t\"\237\002\n\023GetDigit"
  "sCallAction\0224\n\003say\030\001 \001(\0132%.com.elarian.h"
  "era.proto.SayCallActionH\000\0226\n\004play\030\002 \001(\0132"
  "&.com.elarian.hera.proto.PlayCallActionH"
  "\000\022*\n\007timeout\030\003 \001(\0132\031.google.protobuf.Dur"
  "ation\0223\n\rfinish_on_key\030\004 \001(\0132\034.google.pr"
  "otobuf.StringValue\022/\n\nnum_digits\030\005 \001(\0132\033"
  ".google.protobuf.Int32ValueB\010\n\006prompt\"\311\002"
  "\n\026GetRecordingCallAction\0224\n\003say\030\001 \001(\0132%."
  "com.elarian.hera.proto.SayCallActionH\000\0226"
  "\n\004play\030\002 \001(\0132&.com.elarian.hera.proto.Pl"
  "ayCallActionH\000\022*\n\007timeout\030\003 \001(\0132\031.google"
  ".protobuf.Duration\022-\n\nmax_length\030\004 \001(\0132\031"
  ".google.protobuf.Duration\0223\n\rfinish_on_k"
  "ey\030\005 \001(\0132\034.google.protobuf.StringValue\022\021"
  "\n\tplay_beep\030\006 \001(\010\022\024\n\014trim_silence\030\007 \001(\010B"
  "\010\n\006prompt\"\031\n\027RecordSessionCallAction\"\217\002\n"
  "\016DialCallAction\022@\n\020customer_numbers\030\001 \003("
  "\0132&.com.elarian.hera.proto.CustomerNumbe"
  "r\022\016\n\006record\030\002 \001(\010\022\022\n\nsequential\030\003 \001(\010\0223\n"
  "\rringback_tone\030\004 \001(\0132\034.google.protobuf.S"
  "tringValue\022/\n\tcaller_id\030\005 \001(\0132\034.google.p"
  "rotobuf.StringValue\0221\n\014max_duration\030\006 \001("
  "\0132\033.google.protobuf.Int32Value\"w\n\021Enqueu"
  "eCallAction\0220\n\nhold_music\030\001 \001(\0132\034.google"
  ".protobuf.StringValue\0220\n\nqueue_name\030\002 \001("
  "\0132\034.google.protobuf.StringValue\"\235\001\n\021Dequ"
  "eueCallAction\022F\n\016channel_number\030\001 \001(\0132.."
  "com.elarian.hera.proto.MessagingChannelN"
  "umber\022\016\n\006record\030\002 \001(\010\0220\n\nqueue_name\030\003 \001("
  "\0132\034.google.protobuf.StringValue\"\022\n\020Rejec"
  "tCallAction\"!\n\022RedirectCallAction\022\013\n\003url"
  "\030\001 \001(\t\"\217\005\n\017VoiceCallAction\0224\n\003say\030\001 \001(\0132"
  "%.com.elarian.hera.proto.SayCallActionH\000"
  "\0226\n\004play\030\002 \001(\0132&.com.elarian.hera.proto."
  "PlayCallActionH\000\022A\n\nget_digits\030\003 \001(\0132+.c"
  "om.elarian.hera.proto.GetDigitsCallActio"
  "nH\000\0226\n\004dial\030\004 \001(\0132&.com.elarian.hera.pro"
  "to.DialCallActionH\000\022I\n\016record_session\030\005 "
  "\001(\0132/.com.elarian.hera.proto.RecordSessi"
  "onCallActionH\000\022G\n\rget_recording\030\006 \001(\0132.."
  "com.elarian.hera.proto.GetRecordingCallA"
  "ctionH\000\022<\n\007enqueue\030\007 \001(\0132).com.elarian.h"
  "era.proto.EnqueueCallActionH\000\022<\n\007dequeue"
  "\030\010 \001(\0132).com.elarian.hera.proto.DequeueC"
  "allActionH\000\022:\n\006reject\030\t \001(\0132(.com.elaria"
  "n.hera.proto.RejectCallActionH\000\022>\n\010redir"
  "ect\030\n \001(\0132*.com.elarian.hera.proto.Redir"
  "ectCallActionH\000B\007\n\005entry\"X\n\034VoiceCallDia"
  "lplanMessageBody\0228\n\007actions\030\001 \003(\0132\'.com."
  "elarian.hera.proto.VoiceCallAction\"\215\001\n\022V"
  "oiceCallDialInput\022\032\n\022destination_number\030"
  "\001 \001(\t\022.\n\nstarted_at\030\002 \001(\0132\032.google.proto"
  "buf.Timestamp\022+\n\010duration\030\003 \001(\0132\031.google"
  ".protobuf.Duration\"\241\002\n\023VoiceCallQueueInp"
  "ut\022/\n\013enqueued_at\030\001 \001(\0132\032.google.protobu"
  "f.Timestamp\022/\n\013dequeued_at\030\002 \001(\0132\032.googl"
  "e.protobuf.Timestamp\0228\n\022dequeued_to_numb"
  "er\030\003 \001(\0132\034.google.protobuf.StringValue\022;"
  "\n\025dequeued_to_sessionId\030\004 \001(\0132\034.google.p"
  "rotobuf.StringValue\0221\n\016queue_duration\030\005 "
  "\001(\0132\031.google.protobuf.Duration\"\363\003\n\031Voice"
  "CallInputMessageBody\022A\n\tdirection\030\001 \001(\0162"
  "..com.elarian.hera.proto.CustomerEventDi"
  "rection\0227\n\006status\030\002 \001(\0162\'.com.elarian.he"
  "ra.proto.VoiceCallStatus\022.\n\nstarted_at\030\003"
  " \001(\0132\032.google.protobuf.Timestamp\022B\n\014hang"
  "up_cause\030\004 \001(\0162,.com.elarian.hera.proto."
  "VoiceCallHangupCause\0221\n\013dtmf_digits\030\005 \001("
  "\0132\034.google.protobuf.StringValue\0223\n\rrecor"
  "ding_url\030\006 \001(\0132\034.google.protobuf.StringV"
  "alue\022=\n\tdial_data\030\007 \001(\0132*.com.elarian.he"
  "ra.proto.VoiceCallDialInput\022\?\n\nqueue_dat"
  "a\030\010 \001(\0132+.com.elarian.hera.proto.VoiceCa"
  "llQueueInput\"}\n\024UssdInputMessageBody\0229\n\006"
  "status\030\001 \001(\0162).com.elarian.hera.proto.Us"
  "sdSessionStatus\022*\n\004text\030\002 \001(\0132\034.google.p"
  "rotobuf.StringValue\"8\n\023UssdMenuMessageBo"
  "dy\022\014\n\004text\030\001 \001(\t\022\023\n\013is_terminal\030\002 \001(\010\"\271\003"
  "\n\023OutboundMessageBody\022\016\n\004text\030\001 \001(\tH\000\0229\n"
  "\005media\030\002 \001(\0132(.com.elarian.hera.proto.Me"
  "diaMessageBodyH\000\022\?\n\010location\030\003 \001(\0132+.com"
  ".elarian.hera.proto.LocationMessageBodyH"
  "\000\0229\n\005email\030\004 \001(\0132(.com.elarian.hera.prot"
  "o.EmailMessageBodyH\000\022\?\n\010template\030\005 \001(\0132+"
  ".com.elarian.hera.proto.TemplateMessageB"
  "odyH\000\022\r\n\003url\030\006 \001(\tH\000\022E\n\005voice\030\007 \001(\01324.co"
  "m.elarian.hera.proto.VoiceCallDialplanMe"
  "ssageBodyH\000\022;\n\004ussd\030\010 \001(\0132+.com.elarian."
  "hera.proto.UssdMenuMessageBodyH\000B\007\n\005entr"
  "y\"o\n\031PromptMessageMenuItemBody\022\016\n\004text\030\002"
  " \001(\tH\000\0229\n\005media\030\003 \001(\0132(.com.elarian.hera"
  ".proto.MediaMessageBodyH\000B\007\n\005entry\"\346\002\n\022I"
  "nboundMessageBody\022\016\n\004text\030\001 \001(\tH\000\0229\n\005med"
  "ia\030\002 \001(\0132(.com.elarian.hera.proto.MediaM"
  "essageBodyH\000\022\?\n\010location\030\003 \001(\0132+.com.ela"
  "rian.hera.proto.LocationMessageBodyH\000\0229\n"
  "\005email\030\004 \001(\0132(.com.elarian.hera.proto.Em"
  "ailMessageBodyH\000\022B\n\005voice\030\005 \001(\01321.com.el"
  "arian.hera.proto.VoiceCallInputMessageBo"
  "dyH\000\022<\n\004ussd\030\006 \001(\0132,.com.elarian.hera.pr"
  "oto.UssdInputMessageBodyH\000B\007\n\005entry\"\237\001\n\032"
  "OutboundMessageReplyPrompt\022@\n\006action\030\001 \001"
  "(\01620.com.elarian.hera.proto.PromptMessag"
  "eReplyAction\022\?\n\004menu\030\002 \003(\01321.com.elarian"
  ".hera.proto.PromptMessageMenuItemBody\"\215\002"
  "\n\017OutboundMessage\0229\n\004body\030\001 \001(\0132+.com.el"
  "arian.hera.proto.OutboundMessageBody\022\016\n\006"
  "labels\030\002 \003(\t\0222\n\014provider_tag\030\003 \001(\0132\034.goo"
  "gle.protobuf.StringValue\0221\n\013reply_token\030"
  "\004 \001(\0132\034.google.protobuf.StringValue\022H\n\014r"
  "eply_prompt\030\005 \001(\01322.com.elarian.hera.pro"
  "to.OutboundMessageReplyPrompt*\212\002\n\020Messag"
  "ingChannel\022!\n\035MESSAGING_CHANNEL_UNSPECIF"
  "IED\020\000\022\031\n\025MESSAGING_CHANNEL_SMS\020\001\022\033\n\027MESS"
  "AGING_CHANNEL_VOICE\020\002\022\032\n\026MESSAGING_CHANN"
  "EL_USSD\020\003\022\"\n\036MESSAGING_CHANNEL_FB_MESSEN"
  "GER\020\004\022\036\n\032MESSAGING_CHANNEL_TELEGRAM\020\005\022\036\n"
  "\032MESSAGING_CHANNEL_WHATSAPP\020\006\022\033\n\027MESSAGI"
  "NG_CHANNEL_EMAIL\020\007*\212\001\n\026MessagingConsentU"
  "pdate\022(\n$MESSAGING_CONSENT_UPDATE_UNSPEC"
  "IFIED\020\000\022\"\n\036MESSAGING_CONSENT_UPDATE_ALLO"
  "W\020\001\022\"\n\036MESSAGING_CONSENT_UPDATE_BLOCK\020\002*"
  "\341\002\n\034MessagingConsentUpdateStatus\022/\n+MESS"
  "AGING_CONSENT_UPDATE_STATUS_UNSPECIFIED\020"
  "\000\022*\n&MESSAGING_CONSENT_UPDATE_STATUS_QUE"
  "UED\020d\022.\n)MESSAGING_CONSENT_UPDATE_STATUS"
  "_COMPLETED\020\254\002\022;\n6MESSAGING_CONSENT_UPDAT"
  "E_STATUS_INVALID_CHANNEL_NUMBER\020\221\003\022\?\n:ME"
  "SSAGING_CONSENT_UPDATE_STATUS_DECOMMISSI"
  "ONED_CUSTOMER_ID\020\222\003\0226\n1MESSAGING_CONSENT"
  "_UPDATE_STATUS_APPLICATION_ERROR\020\365\003*\324\001\n\031"
  "MessagingSessionEndReason\022,\n(MESSAGING_S"
  "ESSION_END_REASON_UNSPECIFIED\020\000\0220\n,MESSA"
  "GING_SESSION_END_REASON_NORMAL_CLEARING\020"
  "d\022,\n\'MESSAGING_SESSION_END_REASON_INACTI"
  "VITY\020\310\001\022)\n$MESSAGING_SESSION_END_REASON_"
  "FAILURE\020\254\002*\227\001\n\017MessageReaction\022 \n\034MESSAG"
  "E_REACTION_UNSPECIFIED\020\000\022\034\n\030MESSAGE_REAC"
  "TION_CLICKED\020d\022\"\n\035MESSAGE_REACTION_UNSUB"
  "SCRIBED\020\310\001\022 \n\033MESSAGE_REACTION_COMPLAINE"
  "D\020\311\001*\221\002\n\030PromptMessageReplyAction\022+\n\'PRO"
  "MPT_MESSAGE_REPLY_ACTION_UNSPECIFIED\020\000\022$"
  "\n PROMPT_MESSAGE_REPLY_ACTION_TEXT\020\001\022,\n("
  "PROMPT_MESSAGE_REPLY_ACTION_PHONE_NUMBER"
  "\020\002\022%\n!PROMPT_MESSAGE_REPLY_ACTION_EMAIL\020"
  "\003\022(\n$PROMPT_MESSAGE_REPLY_ACTION_LOCATIO"
  "N\020\004\022#\n\037PROMPT_MESSAGE_REPLY_ACTION_URL\020\005"
  "*\344\t\n\025MessageDeliveryStatus\022\'\n#MESSAGE_DE"
  "LIVERY_STATUS_UNSPECIFIED\020\000\022\"\n\036MESSAGE_D"
  "ELIVERY_STATUS_QUEUED\020d\022 \n\034MESSAGE_DELIV"
  "ERY_STATUS_SENT\020e\022&\n!MESSAGE_DELIVERY_ST"
  "ATUS_DELIVERED\020\254\002\022!\n\034MESSAGE_DELIVERY_ST"
  "ATUS_READ\020\255\002\022%\n MESSAGE_DELIVERY_STATUS_"
  "RECEIVED\020\256\002\022.\n)MESSAGE_DELIVERY_STATUS_S"
  "ESSION_INITIATED\020\257\002\022#\n\036MESSAGE_DELIVERY_"
  "STATUS_FAILED\020\220\003\022\'\n\"MESSAGE_DELIVERY_STA"
  "TUS_NO_CONSENT\020\221\003\022*\n%MESSAGE_DELIVERY_ST"
  "ATUS_NO_CAPABILITY\020\222\003\022$\n\037MESSAGE_DELIVER"
  "Y_STATUS_EXPIRED\020\223\003\0223\n.MESSAGE_DELIVERY_"
  "STATUS_NO_SESSION_IN_PROGRESS\020\224\003\0226\n1MESS"
  "AGE_DELIVERY_STATUS_OTHER_SESSION_IN_PRO"
  "GRESS\020\225\003\0220\n+MESSAGE_DELIVERY_STATUS_INVA"
  "LID_REPLY_TOKEN\020\226\003\0223\n.MESSAGE_DELIVERY_S"
  "TATUS_INVALID_CHANNEL_NUMBER\020\227\003\022*\n%MESSA"
  "GE_DELIVERY_STATUS_NOT_SUPPORTED\020\230\003\0228\n3M"
  "ESSAGE_DELIVERY_STATUS_INVALID_REPLY_TO_"
  "MESSAGE_ID\020\231\003\0220\n+MESSAGE_DELIVERY_STATUS"
  "_INVALID_CUSTOMER_ID\020\232\003\022.\n)MESSAGE_DELIV"
  "ERY_STATUS_DUPLICATE_REQUEST\020\233\003\022*\n%MESSA"
  "GE_DELIVERY_STATUS_TAG_NOT_FOUND\020\234\003\0226\n1M"
  "ESSAGE_DELIVERY_STATUS_CUSTOMER_NUMBER_N"
  "OT_FOUND\020\235\003\0226\n1MESSAGE_DELIVERY_STATUS_D"
  "ECOMMISSIONED_CUSTOMERID\020\236\003\022%\n MESSAGE_D"
  "ELIVERY_STATUS_REJECTED\020\237\003\022,\n\'MESSAGE_DE"
  "LIVERY_STATUS_INVALID_REQUEST\020\240\003\0221\n,MESS"
  "AGE_DELIVERY_STATUS_INSUFFICIENT_CREDITS"
  "\020\241\003\022*\n%MESSAGE_DELIVERY_STATUS_GATEWAY_E"
  "RROR\020\242\003\022.\n)MESSAGE_DELIVERY_STATUS_APPLI"
  "CATION_ERROR\020\365\003*\313\006\n\017VoiceCallStatus\022!\n\035V"
  "OICE_CALL_STATUS_UNSPECIFIED\020\000\022\034\n\030VOICE_"
  "CALL_STATUS_QUEUED\020d\022\036\n\032VOICE_CALL_STATU"
  "S_ANSWERED\020e\022\035\n\031VOICE_CALL_STATUS_RINGIN"
  "G\020f\022\035\n\030VOICE_CALL_STATUS_ACTIVE\020\310\001\022\036\n\031VO"
  "ICE_CALL_STATUS_DIALING\020\311\001\022%\n VOICE_CALL"
  "_STATUS_DIAL_COMPLETED\020\312\001\022\036\n\031VOICE_CALL_"
  "STATUS_BRIDGED\020\313\001\022\037\n\032VOICE_CALL_STATUS_E"
  "NQUEUED\020\314\001\022\037\n\032VOICE_CALL_STATUS_DEQUEUED"
  "\020\315\001\022\"\n\035VOICE_CALL_STATUS_TRANSFERRED\020\316\001\022"
  ")\n$VOICE_CALL_STATUS_TRANSFER_COMPLETED\020"
  "\317\001\022 \n\033VOICE_CALL_STATUS_COMPLETED\020\254\002\022*\n%"
  "VOICE_CALL_STATUS_INSUFFICIENT_CREDIT\020\220\003"
  "\022#\n\036VOICE_CALL_STATUS_NOT_ANSWERED\020\221\003\022+\n"
  "&VOICE_CALL_STATUS_INVALID_PHONE_NUMBER\020"
  "\222\003\0220\n+VOICE_CALL_STATUS_DESTINATION_NOT_"
  "SUPPORTED\020\223\003\0220\n+VOICE_CALL_STATUS_DECOMM"
  "ISSIONED_CUSTOMERID\020\224\003\022\036\n\031VOICE_CALL_STA"
  "TUS_EXPIRED\020\225\003\022-\n(VOICE_CALL_STATUS_INVA"
  "LID_CHANNEL_NUMBER\020\226\003\022$\n\037VOICE_CALL_STAT"
  "US_GATEWAY_ERROR\020\227\003\022(\n#VOICE_CALL_STATUS"
  "_APPLICATION_ERROR\020\365\003*\311\005\n\024VoiceCallHangu"
  "pCause\022\'\n#VOICE_CALL_HANGUP_CAUSE_UNSPEC"
  "IFIED\020\000\022.\n*VOICE_CALL_HANGUP_CAUSE_UNALL"
  "OCATED_NUMBER\020\001\022%\n!VOICE_CALL_HANGUP_CAU"
  "SE_USER_BUSY\020\021\022+\n\'VOICE_CALL_HANGUP_CAUS"
  "E_NORMAL_CLEARING\020\020\022,\n(VOICE_CALL_HANGUP"
  "_CAUSE_NO_USER_RESPONSE\020\022\022%\n!VOICE_CALL_"
  "HANGUP_CAUSE_NO_ANSWER\020\023\022-\n)VOICE_CALL_H"
  "ANGUP_CAUSE_SUBSCRIBER_ABSENT\020\024\022)\n%VOICE"
  "_CALL_HANGUP_CAUSE_CALL_REJECTED\020\025\022.\n*VO"
  "ICE_CALL_HANGUP_CAUSE_NORMAL_UNSPECIFIED"
  "\020\037\0224\n0VOICE_CALL_HANGUP_CAUSE_NORMAL_TEM"
  "PORARY_FAILURE\020)\022/\n+VOICE_CALL_HANGUP_CA"
  "USE_SERVICE_UNAVAILABLE\020\?\0224\n0VOICE_CALL_"
  "HANGUP_CAUSE_RECOVERY_ON_TIMER_EXPIRE\020f\022"
  ".\n)VOICE_CALL_HANGUP_CAUSE_ORIGINATOR_CA"
  "NCEL\020\347\003\022&\n!VOICE_CALL_HANGUP_CAUSE_LOSE_"
  "RACE\020\366\003\0220\n+VOICE_CALL_HANGUP_CAUSE_USER_"
  "NOT_REGISTERED\020\336\004*\305\001\n\021UssdSessionStatus\022"
  "#\n\037USSD_SESSION_STATUS_UNSPECIFIED\020\000\022\036\n\032"
  "USSD_SESSION_STATUS_ACTIVE\020d\022#\n\036USSD_SES"
  "SION_STATUS_INCOMPLETE\020\310\001\022\"\n\035USSD_SESSIO"
  "N_STATUS_COMPLETED\020\311\001\022\"\n\035USSD_SESSION_ST"
  "ATUS_APP_ERROR\020\254\002*y\n\021TextToSpeechVoice\022$"
  "\n TEXT_TO_SPEECH_VOICE_UNSPECIFIED\020\000\022\035\n\031"
  "TEXT_TO_SPEECH_VOICE_MALE\020\001\022\037\n\033TEXT_TO_S"
  "PEECH_VOICE_FEMALE\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messaging_5fmodel_2eproto_deps[4] = {
  &::descriptor_table_common_5fmodel_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_messaging_5fmodel_2eproto_sccs[28] = {
  &scc_info_DequeueCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_DialCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_EmailMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_EnqueueCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_InboundMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_LocationMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base,
  &scc_info_OutboundMessage_messaging_5fmodel_2eproto.base,
  &scc_info_OutboundMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto.base,
  &scc_info_PlayCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto.base,
  &scc_info_RecordSessionCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_RedirectCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_RejectCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_SayCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_TemplateMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_TemplateMessageBody_ParamsEntry_DoNotUse_messaging_5fmodel_2eproto.base,
  &scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_VoiceCallAction_messaging_5fmodel_2eproto.base,
  &scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto.base,
  &scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto.base,
  &scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messaging_5fmodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messaging_5fmodel_2eproto = {
  false, false, descriptor_table_protodef_messaging_5fmodel_2eproto, "messaging_model.proto", 9948,
  &descriptor_table_messaging_5fmodel_2eproto_once, descriptor_table_messaging_5fmodel_2eproto_sccs, descriptor_table_messaging_5fmodel_2eproto_deps, 28, 4,
  schemas, file_default_instances, TableStruct_messaging_5fmodel_2eproto::offsets,
  file_level_metadata_messaging_5fmodel_2eproto, 28, file_level_enum_descriptors_messaging_5fmodel_2eproto, file_level_service_descriptors_messaging_5fmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messaging_5fmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_messaging_5fmodel_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingChannel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[0];
}
bool MessagingChannel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingConsentUpdate_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[1];
}
bool MessagingConsentUpdate_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingConsentUpdateStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[2];
}
bool MessagingConsentUpdateStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 300:
    case 401:
    case 402:
    case 501:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingSessionEndReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[3];
}
bool MessagingSessionEndReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 200:
    case 300:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageReaction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[4];
}
bool MessageReaction_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 200:
    case 201:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PromptMessageReplyAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[5];
}
bool PromptMessageReplyAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageDeliveryStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[6];
}
bool MessageDeliveryStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 300:
    case 301:
    case 302:
    case 303:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 409:
    case 410:
    case 411:
    case 412:
    case 413:
    case 414:
    case 415:
    case 416:
    case 417:
    case 418:
    case 501:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoiceCallStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[7];
}
bool VoiceCallStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 300:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 501:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoiceCallHangupCause_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[8];
}
bool VoiceCallHangupCause_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 31:
    case 41:
    case 63:
    case 102:
    case 487:
    case 502:
    case 606:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UssdSessionStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[9];
}
bool UssdSessionStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 200:
    case 201:
    case 300:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TextToSpeechVoice_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messaging_5fmodel_2eproto);
  return file_level_enum_descriptors_messaging_5fmodel_2eproto[10];
}
bool TextToSpeechVoice_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MessagingChannelNumber::_Internal {
 public:
};

MessagingChannelNumber::MessagingChannelNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.MessagingChannelNumber)
}
MessagingChannelNumber::MessagingChannelNumber(const MessagingChannelNumber& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_number().empty()) {
    number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_number(), 
      GetArena());
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.MessagingChannelNumber)
}

void MessagingChannelNumber::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

MessagingChannelNumber::~MessagingChannelNumber() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.MessagingChannelNumber)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessagingChannelNumber::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MessagingChannelNumber::ArenaDtor(void* object) {
  MessagingChannelNumber* _this = reinterpret_cast< MessagingChannelNumber* >(object);
  (void)_this;
}
void MessagingChannelNumber::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessagingChannelNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessagingChannelNumber& MessagingChannelNumber::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessagingChannelNumber_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void MessagingChannelNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.MessagingChannelNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_.ClearToEmpty();
  channel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessagingChannelNumber::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.MessagingChannel channel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::com::elarian::hera::proto::MessagingChannel>(val));
        } else goto handle_unusual;
        continue;
      // string number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.MessagingChannelNumber.number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessagingChannelNumber::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.MessagingChannelNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.MessagingChannel channel = 1;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_channel(), target);
  }

  // string number = 2;
  if (this->number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.MessagingChannelNumber.number");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.MessagingChannelNumber)
  return target;
}

size_t MessagingChannelNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.MessagingChannelNumber)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string number = 2;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number());
  }

  // .com.elarian.hera.proto.MessagingChannel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagingChannelNumber::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.MessagingChannelNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagingChannelNumber* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessagingChannelNumber>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.MessagingChannelNumber)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.MessagingChannelNumber)
    MergeFrom(*source);
  }
}

void MessagingChannelNumber::MergeFrom(const MessagingChannelNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.MessagingChannelNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number().size() > 0) {
    _internal_set_number(from._internal_number());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void MessagingChannelNumber::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.MessagingChannelNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagingChannelNumber::CopyFrom(const MessagingChannelNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.MessagingChannelNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagingChannelNumber::IsInitialized() const {
  return true;
}

void MessagingChannelNumber::InternalSwap(MessagingChannelNumber* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  number_.Swap(&other->number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(channel_, other->channel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessagingChannelNumber::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MediaMessageBody::_Internal {
 public:
};

MediaMessageBody::MediaMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.MediaMessageBody)
}
MediaMessageBody::MediaMessageBody(const MediaMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  media_ = from.media_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.MediaMessageBody)
}

void MediaMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  media_ = 0;
}

MediaMessageBody::~MediaMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.MediaMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MediaMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MediaMessageBody::ArenaDtor(void* object) {
  MediaMessageBody* _this = reinterpret_cast< MediaMessageBody* >(object);
  (void)_this;
}
void MediaMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MediaMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MediaMessageBody& MediaMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MediaMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void MediaMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.MediaMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  media_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MediaMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.MediaMessageBody.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MediaType media = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_media(static_cast<::com::elarian::hera::proto::MediaType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MediaMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.MediaMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.MediaMessageBody.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // .com.elarian.hera.proto.MediaType media = 2;
  if (this->media() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_media(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.MediaMessageBody)
  return target;
}

size_t MediaMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.MediaMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // .com.elarian.hera.proto.MediaType media = 2;
  if (this->media() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_media());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MediaMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.MediaMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const MediaMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MediaMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.MediaMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.MediaMessageBody)
    MergeFrom(*source);
  }
}

void MediaMessageBody::MergeFrom(const MediaMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.MediaMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.media() != 0) {
    _internal_set_media(from._internal_media());
  }
}

void MediaMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.MediaMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MediaMessageBody::CopyFrom(const MediaMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.MediaMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MediaMessageBody::IsInitialized() const {
  return true;
}

void MediaMessageBody::InternalSwap(MediaMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(media_, other->media_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MediaMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LocationMessageBody::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& label(const LocationMessageBody* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& address(const LocationMessageBody* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
LocationMessageBody::_Internal::label(const LocationMessageBody* msg) {
  return *msg->label_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
LocationMessageBody::_Internal::address(const LocationMessageBody* msg) {
  return *msg->address_;
}
void LocationMessageBody::clear_label() {
  if (GetArena() == nullptr && label_ != nullptr) {
    delete label_;
  }
  label_ = nullptr;
}
void LocationMessageBody::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
LocationMessageBody::LocationMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.LocationMessageBody)
}
LocationMessageBody::LocationMessageBody(const LocationMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_label()) {
    label_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.label_);
  } else {
    label_ = nullptr;
  }
  if (from._internal_has_address()) {
    address_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.address_);
  } else {
    address_ = nullptr;
  }
  ::memcpy(&latitude_, &from.latitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.LocationMessageBody)
}

void LocationMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocationMessageBody_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&label_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&label_)) + sizeof(longitude_));
}

LocationMessageBody::~LocationMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.LocationMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocationMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete label_;
  if (this != internal_default_instance()) delete address_;
}

void LocationMessageBody::ArenaDtor(void* object) {
  LocationMessageBody* _this = reinterpret_cast< LocationMessageBody* >(object);
  (void)_this;
}
void LocationMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocationMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationMessageBody& LocationMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocationMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void LocationMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.LocationMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && label_ != nullptr) {
    delete label_;
  }
  label_ = nullptr;
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  ::memset(&latitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&latitude_)) + sizeof(longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double latitude = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double longitude = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue label = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocationMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.LocationMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double latitude = 1;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_latitude(), target);
  }

  // double longitude = 2;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_longitude(), target);
  }

  // .google.protobuf.StringValue label = 3;
  if (this->has_label()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::label(this), target, stream);
  }

  // .google.protobuf.StringValue address = 4;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::address(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.LocationMessageBody)
  return target;
}

size_t LocationMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.LocationMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue label = 3;
  if (this->has_label()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *label_);
  }

  // .google.protobuf.StringValue address = 4;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // double latitude = 1;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    total_size += 1 + 8;
  }

  // double longitude = 2;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.LocationMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocationMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.LocationMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.LocationMessageBody)
    MergeFrom(*source);
  }
}

void LocationMessageBody::MergeFrom(const LocationMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.LocationMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_label()) {
    _internal_mutable_label()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_label());
  }
  if (from.has_address()) {
    _internal_mutable_address()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_address());
  }
  if (!(from.latitude() <= 0 && from.latitude() >= 0)) {
    _internal_set_latitude(from._internal_latitude());
  }
  if (!(from.longitude() <= 0 && from.longitude() >= 0)) {
    _internal_set_longitude(from._internal_longitude());
  }
}

void LocationMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.LocationMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationMessageBody::CopyFrom(const LocationMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.LocationMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationMessageBody::IsInitialized() const {
  return true;
}

void LocationMessageBody::InternalSwap(LocationMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocationMessageBody, longitude_)
      + sizeof(LocationMessageBody::longitude_)
      - PROTOBUF_FIELD_OFFSET(LocationMessageBody, label_)>(
          reinterpret_cast<char*>(&label_),
          reinterpret_cast<char*>(&other->label_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmailMessageBody::_Internal {
 public:
};

EmailMessageBody::EmailMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cc_list_(arena),
  bcc_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.EmailMessageBody)
}
EmailMessageBody::EmailMessageBody(const EmailMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cc_list_(from.cc_list_),
      bcc_list_(from.bcc_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subject().empty()) {
    subject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subject(), 
      GetArena());
  }
  body_plain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_body_plain().empty()) {
    body_plain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body_plain(), 
      GetArena());
  }
  body_html_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_body_html().empty()) {
    body_html_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body_html(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.EmailMessageBody)
}

void EmailMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmailMessageBody_messaging_5fmodel_2eproto.base);
  subject_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_plain_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_html_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EmailMessageBody::~EmailMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.EmailMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmailMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subject_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_plain_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  body_html_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EmailMessageBody::ArenaDtor(void* object) {
  EmailMessageBody* _this = reinterpret_cast< EmailMessageBody* >(object);
  (void)_this;
}
void EmailMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmailMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmailMessageBody& EmailMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmailMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void EmailMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.EmailMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cc_list_.Clear();
  bcc_list_.Clear();
  subject_.ClearToEmpty();
  body_plain_.ClearToEmpty();
  body_html_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmailMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.EmailMessageBody.subject"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string body_plain = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_body_plain();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.EmailMessageBody.body_plain"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string body_html = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_body_html();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.EmailMessageBody.body_html"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string cc_list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cc_list();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.EmailMessageBody.cc_list"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string bcc_list = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bcc_list();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.EmailMessageBody.bcc_list"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmailMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.EmailMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (this->subject().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.EmailMessageBody.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // string body_plain = 2;
  if (this->body_plain().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body_plain().data(), static_cast<int>(this->_internal_body_plain().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.EmailMessageBody.body_plain");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_body_plain(), target);
  }

  // string body_html = 3;
  if (this->body_html().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_body_html().data(), static_cast<int>(this->_internal_body_html().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.EmailMessageBody.body_html");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_body_html(), target);
  }

  // repeated string cc_list = 4;
  for (int i = 0, n = this->_internal_cc_list_size(); i < n; i++) {
    const auto& s = this->_internal_cc_list(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.EmailMessageBody.cc_list");
    target = stream->WriteString(4, s, target);
  }

  // repeated string bcc_list = 5;
  for (int i = 0, n = this->_internal_bcc_list_size(); i < n; i++) {
    const auto& s = this->_internal_bcc_list(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.EmailMessageBody.bcc_list");
    target = stream->WriteString(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.EmailMessageBody)
  return target;
}

size_t EmailMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.EmailMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string cc_list = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cc_list_.size());
  for (int i = 0, n = cc_list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cc_list_.Get(i));
  }

  // repeated string bcc_list = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(bcc_list_.size());
  for (int i = 0, n = bcc_list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      bcc_list_.Get(i));
  }

  // string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // string body_plain = 2;
  if (this->body_plain().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body_plain());
  }

  // string body_html = 3;
  if (this->body_html().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_body_html());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.EmailMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmailMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.EmailMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.EmailMessageBody)
    MergeFrom(*source);
  }
}

void EmailMessageBody::MergeFrom(const EmailMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.EmailMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cc_list_.MergeFrom(from.cc_list_);
  bcc_list_.MergeFrom(from.bcc_list_);
  if (from.subject().size() > 0) {
    _internal_set_subject(from._internal_subject());
  }
  if (from.body_plain().size() > 0) {
    _internal_set_body_plain(from._internal_body_plain());
  }
  if (from.body_html().size() > 0) {
    _internal_set_body_html(from._internal_body_html());
  }
}

void EmailMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.EmailMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailMessageBody::CopyFrom(const EmailMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.EmailMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailMessageBody::IsInitialized() const {
  return true;
}

void EmailMessageBody::InternalSwap(EmailMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cc_list_.InternalSwap(&other->cc_list_);
  bcc_list_.InternalSwap(&other->bcc_list_);
  subject_.Swap(&other->subject_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_plain_.Swap(&other->body_plain_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  body_html_.Swap(&other->body_html_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EmailMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

TemplateMessageBody_ParamsEntry_DoNotUse::TemplateMessageBody_ParamsEntry_DoNotUse() {}
TemplateMessageBody_ParamsEntry_DoNotUse::TemplateMessageBody_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void TemplateMessageBody_ParamsEntry_DoNotUse::MergeFrom(const TemplateMessageBody_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata TemplateMessageBody_ParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void TemplateMessageBody_ParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class TemplateMessageBody::_Internal {
 public:
};

TemplateMessageBody::TemplateMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.TemplateMessageBody)
}
TemplateMessageBody::TemplateMessageBody(const TemplateMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.TemplateMessageBody)
}

void TemplateMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TemplateMessageBody_messaging_5fmodel_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TemplateMessageBody::~TemplateMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.TemplateMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TemplateMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TemplateMessageBody::ArenaDtor(void* object) {
  TemplateMessageBody* _this = reinterpret_cast< TemplateMessageBody* >(object);
  (void)_this;
}
void TemplateMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TemplateMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TemplateMessageBody& TemplateMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TemplateMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void TemplateMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.TemplateMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TemplateMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.TemplateMessageBody.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TemplateMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.TemplateMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.TemplateMessageBody.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // map<string, string> params = 2;
  if (!this->_internal_params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.elarian.hera.proto.TemplateMessageBody.ParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.elarian.hera.proto.TemplateMessageBody.ParamsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = TemplateMessageBody_ParamsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it) {
        target = TemplateMessageBody_ParamsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.TemplateMessageBody)
  return target;
}

size_t TemplateMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.TemplateMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> params = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_params().begin();
      it != this->_internal_params().end(); ++it) {
    total_size += TemplateMessageBody_ParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemplateMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.TemplateMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const TemplateMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TemplateMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.TemplateMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.TemplateMessageBody)
    MergeFrom(*source);
  }
}

void TemplateMessageBody::MergeFrom(const TemplateMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.TemplateMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void TemplateMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.TemplateMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateMessageBody::CopyFrom(const TemplateMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.TemplateMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateMessageBody::IsInitialized() const {
  return true;
}

void TemplateMessageBody::InternalSwap(TemplateMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  params_.Swap(&other->params_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TemplateMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SayCallAction::_Internal {
 public:
};

SayCallAction::SayCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.SayCallAction)
}
SayCallAction::SayCallAction(const SayCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  ::memcpy(&voice_, &from.voice_,
    static_cast<size_t>(reinterpret_cast<char*>(&play_beep_) -
    reinterpret_cast<char*>(&voice_)) + sizeof(play_beep_));
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.SayCallAction)
}

void SayCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SayCallAction_messaging_5fmodel_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&voice_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&play_beep_) -
      reinterpret_cast<char*>(&voice_)) + sizeof(play_beep_));
}

SayCallAction::~SayCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.SayCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SayCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SayCallAction::ArenaDtor(void* object) {
  SayCallAction* _this = reinterpret_cast< SayCallAction* >(object);
  (void)_this;
}
void SayCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SayCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SayCallAction& SayCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SayCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void SayCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.SayCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  ::memset(&voice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&play_beep_) -
      reinterpret_cast<char*>(&voice_)) + sizeof(play_beep_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SayCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.SayCallAction.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.TextToSpeechVoice voice = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_voice(static_cast<::com::elarian::hera::proto::TextToSpeechVoice>(val));
        } else goto handle_unusual;
        continue;
      // bool play_beep = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          play_beep_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SayCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.SayCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.SayCallAction.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .com.elarian.hera.proto.TextToSpeechVoice voice = 2;
  if (this->voice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_voice(), target);
  }

  // bool play_beep = 3;
  if (this->play_beep() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_play_beep(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.SayCallAction)
  return target;
}

size_t SayCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.SayCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .com.elarian.hera.proto.TextToSpeechVoice voice = 2;
  if (this->voice() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_voice());
  }

  // bool play_beep = 3;
  if (this->play_beep() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SayCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.SayCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const SayCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SayCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.SayCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.SayCallAction)
    MergeFrom(*source);
  }
}

void SayCallAction::MergeFrom(const SayCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.SayCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.voice() != 0) {
    _internal_set_voice(from._internal_voice());
  }
  if (from.play_beep() != 0) {
    _internal_set_play_beep(from._internal_play_beep());
  }
}

void SayCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.SayCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SayCallAction::CopyFrom(const SayCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.SayCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SayCallAction::IsInitialized() const {
  return true;
}

void SayCallAction::InternalSwap(SayCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SayCallAction, play_beep_)
      + sizeof(SayCallAction::play_beep_)
      - PROTOBUF_FIELD_OFFSET(SayCallAction, voice_)>(
          reinterpret_cast<char*>(&voice_),
          reinterpret_cast<char*>(&other->voice_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SayCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlayCallAction::_Internal {
 public:
};

PlayCallAction::PlayCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PlayCallAction)
}
PlayCallAction::PlayCallAction(const PlayCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PlayCallAction)
}

void PlayCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayCallAction_messaging_5fmodel_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlayCallAction::~PlayCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PlayCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayCallAction::ArenaDtor(void* object) {
  PlayCallAction* _this = reinterpret_cast< PlayCallAction* >(object);
  (void)_this;
}
void PlayCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayCallAction& PlayCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PlayCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PlayCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PlayCallAction.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PlayCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PlayCallAction.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PlayCallAction)
  return target;
}

size_t PlayCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PlayCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PlayCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PlayCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PlayCallAction)
    MergeFrom(*source);
  }
}

void PlayCallAction::MergeFrom(const PlayCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PlayCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
}

void PlayCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PlayCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayCallAction::CopyFrom(const PlayCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PlayCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayCallAction::IsInitialized() const {
  return true;
}

void PlayCallAction::InternalSwap(PlayCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetDigitsCallAction::_Internal {
 public:
  static const ::com::elarian::hera::proto::SayCallAction& say(const GetDigitsCallAction* msg);
  static const ::com::elarian::hera::proto::PlayCallAction& play(const GetDigitsCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& timeout(const GetDigitsCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& finish_on_key(const GetDigitsCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::Int32Value& num_digits(const GetDigitsCallAction* msg);
};

const ::com::elarian::hera::proto::SayCallAction&
GetDigitsCallAction::_Internal::say(const GetDigitsCallAction* msg) {
  return *msg->prompt_.say_;
}
const ::com::elarian::hera::proto::PlayCallAction&
GetDigitsCallAction::_Internal::play(const GetDigitsCallAction* msg) {
  return *msg->prompt_.play_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
GetDigitsCallAction::_Internal::timeout(const GetDigitsCallAction* msg) {
  return *msg->timeout_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
GetDigitsCallAction::_Internal::finish_on_key(const GetDigitsCallAction* msg) {
  return *msg->finish_on_key_;
}
const PROTOBUF_NAMESPACE_ID::Int32Value&
GetDigitsCallAction::_Internal::num_digits(const GetDigitsCallAction* msg) {
  return *msg->num_digits_;
}
void GetDigitsCallAction::set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_prompt();
  if (say) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(say);
    if (message_arena != submessage_arena) {
      say = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, say, submessage_arena);
    }
    set_has_say();
    prompt_.say_ = say;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.say)
}
void GetDigitsCallAction::set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_prompt();
  if (play) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(play);
    if (message_arena != submessage_arena) {
      play = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, play, submessage_arena);
    }
    set_has_play();
    prompt_.play_ = play;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.play)
}
void GetDigitsCallAction::clear_timeout() {
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
}
void GetDigitsCallAction::clear_finish_on_key() {
  if (GetArena() == nullptr && finish_on_key_ != nullptr) {
    delete finish_on_key_;
  }
  finish_on_key_ = nullptr;
}
void GetDigitsCallAction::clear_num_digits() {
  if (GetArena() == nullptr && num_digits_ != nullptr) {
    delete num_digits_;
  }
  num_digits_ = nullptr;
}
GetDigitsCallAction::GetDigitsCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.GetDigitsCallAction)
}
GetDigitsCallAction::GetDigitsCallAction(const GetDigitsCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timeout()) {
    timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.timeout_);
  } else {
    timeout_ = nullptr;
  }
  if (from._internal_has_finish_on_key()) {
    finish_on_key_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.finish_on_key_);
  } else {
    finish_on_key_ = nullptr;
  }
  if (from._internal_has_num_digits()) {
    num_digits_ = new PROTOBUF_NAMESPACE_ID::Int32Value(*from.num_digits_);
  } else {
    num_digits_ = nullptr;
  }
  clear_has_prompt();
  switch (from.prompt_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.GetDigitsCallAction)
}

void GetDigitsCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&num_digits_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(num_digits_));
  clear_has_prompt();
}

GetDigitsCallAction::~GetDigitsCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.GetDigitsCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDigitsCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete finish_on_key_;
  if (this != internal_default_instance()) delete num_digits_;
  if (has_prompt()) {
    clear_prompt();
  }
}

void GetDigitsCallAction::ArenaDtor(void* object) {
  GetDigitsCallAction* _this = reinterpret_cast< GetDigitsCallAction* >(object);
  (void)_this;
}
void GetDigitsCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDigitsCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDigitsCallAction& GetDigitsCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDigitsCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void GetDigitsCallAction::clear_prompt() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.GetDigitsCallAction)
  switch (prompt_case()) {
    case kSay: {
      if (GetArena() == nullptr) {
        delete prompt_.say_;
      }
      break;
    }
    case kPlay: {
      if (GetArena() == nullptr) {
        delete prompt_.play_;
      }
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROMPT_NOT_SET;
}


void GetDigitsCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.GetDigitsCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
  if (GetArena() == nullptr && finish_on_key_ != nullptr) {
    delete finish_on_key_;
  }
  finish_on_key_ = nullptr;
  if (GetArena() == nullptr && num_digits_ != nullptr) {
    delete num_digits_;
  }
  num_digits_ = nullptr;
  clear_prompt();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDigitsCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.SayCallAction say = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_say(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PlayCallAction play = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_play(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration timeout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue finish_on_key = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_finish_on_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int32Value num_digits = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_num_digits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDigitsCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.GetDigitsCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.SayCallAction say = 1;
  if (_internal_has_say()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::say(this), target, stream);
  }

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  if (_internal_has_play()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::play(this), target, stream);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::timeout(this), target, stream);
  }

  // .google.protobuf.StringValue finish_on_key = 4;
  if (this->has_finish_on_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::finish_on_key(this), target, stream);
  }

  // .google.protobuf.Int32Value num_digits = 5;
  if (this->has_num_digits()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::num_digits(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.GetDigitsCallAction)
  return target;
}

size_t GetDigitsCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.GetDigitsCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // .google.protobuf.StringValue finish_on_key = 4;
  if (this->has_finish_on_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *finish_on_key_);
  }

  // .google.protobuf.Int32Value num_digits = 5;
  if (this->has_num_digits()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *num_digits_);
  }

  switch (prompt_case()) {
    // .com.elarian.hera.proto.SayCallAction say = 1;
    case kSay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *prompt_.say_);
      break;
    }
    // .com.elarian.hera.proto.PlayCallAction play = 2;
    case kPlay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *prompt_.play_);
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDigitsCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.GetDigitsCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDigitsCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDigitsCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.GetDigitsCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.GetDigitsCallAction)
    MergeFrom(*source);
  }
}

void GetDigitsCallAction::MergeFrom(const GetDigitsCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.GetDigitsCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    _internal_mutable_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_timeout());
  }
  if (from.has_finish_on_key()) {
    _internal_mutable_finish_on_key()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_finish_on_key());
  }
  if (from.has_num_digits()) {
    _internal_mutable_num_digits()->PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(from._internal_num_digits());
  }
  switch (from.prompt_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
}

void GetDigitsCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.GetDigitsCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDigitsCallAction::CopyFrom(const GetDigitsCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.GetDigitsCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDigitsCallAction::IsInitialized() const {
  return true;
}

void GetDigitsCallAction::InternalSwap(GetDigitsCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDigitsCallAction, num_digits_)
      + sizeof(GetDigitsCallAction::num_digits_)
      - PROTOBUF_FIELD_OFFSET(GetDigitsCallAction, timeout_)>(
          reinterpret_cast<char*>(&timeout_),
          reinterpret_cast<char*>(&other->timeout_));
  swap(prompt_, other->prompt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDigitsCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetRecordingCallAction::_Internal {
 public:
  static const ::com::elarian::hera::proto::SayCallAction& say(const GetRecordingCallAction* msg);
  static const ::com::elarian::hera::proto::PlayCallAction& play(const GetRecordingCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& timeout(const GetRecordingCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& max_length(const GetRecordingCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& finish_on_key(const GetRecordingCallAction* msg);
};

const ::com::elarian::hera::proto::SayCallAction&
GetRecordingCallAction::_Internal::say(const GetRecordingCallAction* msg) {
  return *msg->prompt_.say_;
}
const ::com::elarian::hera::proto::PlayCallAction&
GetRecordingCallAction::_Internal::play(const GetRecordingCallAction* msg) {
  return *msg->prompt_.play_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
GetRecordingCallAction::_Internal::timeout(const GetRecordingCallAction* msg) {
  return *msg->timeout_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
GetRecordingCallAction::_Internal::max_length(const GetRecordingCallAction* msg) {
  return *msg->max_length_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
GetRecordingCallAction::_Internal::finish_on_key(const GetRecordingCallAction* msg) {
  return *msg->finish_on_key_;
}
void GetRecordingCallAction::set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_prompt();
  if (say) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(say);
    if (message_arena != submessage_arena) {
      say = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, say, submessage_arena);
    }
    set_has_say();
    prompt_.say_ = say;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.say)
}
void GetRecordingCallAction::set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_prompt();
  if (play) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(play);
    if (message_arena != submessage_arena) {
      play = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, play, submessage_arena);
    }
    set_has_play();
    prompt_.play_ = play;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.play)
}
void GetRecordingCallAction::clear_timeout() {
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
}
void GetRecordingCallAction::clear_max_length() {
  if (GetArena() == nullptr && max_length_ != nullptr) {
    delete max_length_;
  }
  max_length_ = nullptr;
}
void GetRecordingCallAction::clear_finish_on_key() {
  if (GetArena() == nullptr && finish_on_key_ != nullptr) {
    delete finish_on_key_;
  }
  finish_on_key_ = nullptr;
}
GetRecordingCallAction::GetRecordingCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.GetRecordingCallAction)
}
GetRecordingCallAction::GetRecordingCallAction(const GetRecordingCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timeout()) {
    timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.timeout_);
  } else {
    timeout_ = nullptr;
  }
  if (from._internal_has_max_length()) {
    max_length_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.max_length_);
  } else {
    max_length_ = nullptr;
  }
  if (from._internal_has_finish_on_key()) {
    finish_on_key_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.finish_on_key_);
  } else {
    finish_on_key_ = nullptr;
  }
  ::memcpy(&play_beep_, &from.play_beep_,
    static_cast<size_t>(reinterpret_cast<char*>(&trim_silence_) -
    reinterpret_cast<char*>(&play_beep_)) + sizeof(trim_silence_));
  clear_has_prompt();
  switch (from.prompt_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.GetRecordingCallAction)
}

void GetRecordingCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&trim_silence_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(trim_silence_));
  clear_has_prompt();
}

GetRecordingCallAction::~GetRecordingCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.GetRecordingCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRecordingCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete max_length_;
  if (this != internal_default_instance()) delete finish_on_key_;
  if (has_prompt()) {
    clear_prompt();
  }
}

void GetRecordingCallAction::ArenaDtor(void* object) {
  GetRecordingCallAction* _this = reinterpret_cast< GetRecordingCallAction* >(object);
  (void)_this;
}
void GetRecordingCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRecordingCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRecordingCallAction& GetRecordingCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRecordingCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void GetRecordingCallAction::clear_prompt() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.GetRecordingCallAction)
  switch (prompt_case()) {
    case kSay: {
      if (GetArena() == nullptr) {
        delete prompt_.say_;
      }
      break;
    }
    case kPlay: {
      if (GetArena() == nullptr) {
        delete prompt_.play_;
      }
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROMPT_NOT_SET;
}


void GetRecordingCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.GetRecordingCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
  if (GetArena() == nullptr && max_length_ != nullptr) {
    delete max_length_;
  }
  max_length_ = nullptr;
  if (GetArena() == nullptr && finish_on_key_ != nullptr) {
    delete finish_on_key_;
  }
  finish_on_key_ = nullptr;
  ::memset(&play_beep_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trim_silence_) -
      reinterpret_cast<char*>(&play_beep_)) + sizeof(trim_silence_));
  clear_prompt();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordingCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.SayCallAction say = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_say(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PlayCallAction play = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_play(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration timeout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration max_length = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_length(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue finish_on_key = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_finish_on_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool play_beep = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          play_beep_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool trim_silence = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          trim_silence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRecordingCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.GetRecordingCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.SayCallAction say = 1;
  if (_internal_has_say()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::say(this), target, stream);
  }

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  if (_internal_has_play()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::play(this), target, stream);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::timeout(this), target, stream);
  }

  // .google.protobuf.Duration max_length = 4;
  if (this->has_max_length()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::max_length(this), target, stream);
  }

  // .google.protobuf.StringValue finish_on_key = 5;
  if (this->has_finish_on_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::finish_on_key(this), target, stream);
  }

  // bool play_beep = 6;
  if (this->play_beep() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_play_beep(), target);
  }

  // bool trim_silence = 7;
  if (this->trim_silence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_trim_silence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.GetRecordingCallAction)
  return target;
}

size_t GetRecordingCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.GetRecordingCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // .google.protobuf.Duration max_length = 4;
  if (this->has_max_length()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *max_length_);
  }

  // .google.protobuf.StringValue finish_on_key = 5;
  if (this->has_finish_on_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *finish_on_key_);
  }

  // bool play_beep = 6;
  if (this->play_beep() != 0) {
    total_size += 1 + 1;
  }

  // bool trim_silence = 7;
  if (this->trim_silence() != 0) {
    total_size += 1 + 1;
  }

  switch (prompt_case()) {
    // .com.elarian.hera.proto.SayCallAction say = 1;
    case kSay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *prompt_.say_);
      break;
    }
    // .com.elarian.hera.proto.PlayCallAction play = 2;
    case kPlay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *prompt_.play_);
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRecordingCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.GetRecordingCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecordingCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRecordingCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.GetRecordingCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.GetRecordingCallAction)
    MergeFrom(*source);
  }
}

void GetRecordingCallAction::MergeFrom(const GetRecordingCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.GetRecordingCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    _internal_mutable_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_timeout());
  }
  if (from.has_max_length()) {
    _internal_mutable_max_length()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_max_length());
  }
  if (from.has_finish_on_key()) {
    _internal_mutable_finish_on_key()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_finish_on_key());
  }
  if (from.play_beep() != 0) {
    _internal_set_play_beep(from._internal_play_beep());
  }
  if (from.trim_silence() != 0) {
    _internal_set_trim_silence(from._internal_trim_silence());
  }
  switch (from.prompt_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case PROMPT_NOT_SET: {
      break;
    }
  }
}

void GetRecordingCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.GetRecordingCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecordingCallAction::CopyFrom(const GetRecordingCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.GetRecordingCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordingCallAction::IsInitialized() const {
  return true;
}

void GetRecordingCallAction::InternalSwap(GetRecordingCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRecordingCallAction, trim_silence_)
      + sizeof(GetRecordingCallAction::trim_silence_)
      - PROTOBUF_FIELD_OFFSET(GetRecordingCallAction, timeout_)>(
          reinterpret_cast<char*>(&timeout_),
          reinterpret_cast<char*>(&other->timeout_));
  swap(prompt_, other->prompt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordingCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RecordSessionCallAction::_Internal {
 public:
};

RecordSessionCallAction::RecordSessionCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.RecordSessionCallAction)
}
RecordSessionCallAction::RecordSessionCallAction(const RecordSessionCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.RecordSessionCallAction)
}

void RecordSessionCallAction::SharedCtor() {
}

RecordSessionCallAction::~RecordSessionCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.RecordSessionCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecordSessionCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RecordSessionCallAction::ArenaDtor(void* object) {
  RecordSessionCallAction* _this = reinterpret_cast< RecordSessionCallAction* >(object);
  (void)_this;
}
void RecordSessionCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecordSessionCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordSessionCallAction& RecordSessionCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecordSessionCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void RecordSessionCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.RecordSessionCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecordSessionCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecordSessionCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.RecordSessionCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.RecordSessionCallAction)
  return target;
}

size_t RecordSessionCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.RecordSessionCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordSessionCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.RecordSessionCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordSessionCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecordSessionCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.RecordSessionCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.RecordSessionCallAction)
    MergeFrom(*source);
  }
}

void RecordSessionCallAction::MergeFrom(const RecordSessionCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.RecordSessionCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RecordSessionCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.RecordSessionCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordSessionCallAction::CopyFrom(const RecordSessionCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.RecordSessionCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordSessionCallAction::IsInitialized() const {
  return true;
}

void RecordSessionCallAction::InternalSwap(RecordSessionCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecordSessionCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DialCallAction::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& ringback_tone(const DialCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& caller_id(const DialCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::Int32Value& max_duration(const DialCallAction* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
DialCallAction::_Internal::ringback_tone(const DialCallAction* msg) {
  return *msg->ringback_tone_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
DialCallAction::_Internal::caller_id(const DialCallAction* msg) {
  return *msg->caller_id_;
}
const PROTOBUF_NAMESPACE_ID::Int32Value&
DialCallAction::_Internal::max_duration(const DialCallAction* msg) {
  return *msg->max_duration_;
}
void DialCallAction::clear_customer_numbers() {
  customer_numbers_.Clear();
}
void DialCallAction::clear_ringback_tone() {
  if (GetArena() == nullptr && ringback_tone_ != nullptr) {
    delete ringback_tone_;
  }
  ringback_tone_ = nullptr;
}
void DialCallAction::clear_caller_id() {
  if (GetArena() == nullptr && caller_id_ != nullptr) {
    delete caller_id_;
  }
  caller_id_ = nullptr;
}
void DialCallAction::clear_max_duration() {
  if (GetArena() == nullptr && max_duration_ != nullptr) {
    delete max_duration_;
  }
  max_duration_ = nullptr;
}
DialCallAction::DialCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  customer_numbers_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.DialCallAction)
}
DialCallAction::DialCallAction(const DialCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      customer_numbers_(from.customer_numbers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ringback_tone()) {
    ringback_tone_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.ringback_tone_);
  } else {
    ringback_tone_ = nullptr;
  }
  if (from._internal_has_caller_id()) {
    caller_id_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.caller_id_);
  } else {
    caller_id_ = nullptr;
  }
  if (from._internal_has_max_duration()) {
    max_duration_ = new PROTOBUF_NAMESPACE_ID::Int32Value(*from.max_duration_);
  } else {
    max_duration_ = nullptr;
  }
  ::memcpy(&record_, &from.record_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequential_) -
    reinterpret_cast<char*>(&record_)) + sizeof(sequential_));
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.DialCallAction)
}

void DialCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DialCallAction_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ringback_tone_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sequential_) -
      reinterpret_cast<char*>(&ringback_tone_)) + sizeof(sequential_));
}

DialCallAction::~DialCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.DialCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DialCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ringback_tone_;
  if (this != internal_default_instance()) delete caller_id_;
  if (this != internal_default_instance()) delete max_duration_;
}

void DialCallAction::ArenaDtor(void* object) {
  DialCallAction* _this = reinterpret_cast< DialCallAction* >(object);
  (void)_this;
}
void DialCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DialCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DialCallAction& DialCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DialCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void DialCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.DialCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_numbers_.Clear();
  if (GetArena() == nullptr && ringback_tone_ != nullptr) {
    delete ringback_tone_;
  }
  ringback_tone_ = nullptr;
  if (GetArena() == nullptr && caller_id_ != nullptr) {
    delete caller_id_;
  }
  caller_id_ = nullptr;
  if (GetArena() == nullptr && max_duration_ != nullptr) {
    delete max_duration_;
  }
  max_duration_ = nullptr;
  ::memset(&record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequential_) -
      reinterpret_cast<char*>(&record_)) + sizeof(sequential_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DialCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_customer_numbers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool record = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          record_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool sequential = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sequential_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue ringback_tone = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ringback_tone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue caller_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_caller_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Int32Value max_duration = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_duration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DialCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.DialCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_customer_numbers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_customer_numbers(i), target, stream);
  }

  // bool record = 2;
  if (this->record() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_record(), target);
  }

  // bool sequential = 3;
  if (this->sequential() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_sequential(), target);
  }

  // .google.protobuf.StringValue ringback_tone = 4;
  if (this->has_ringback_tone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ringback_tone(this), target, stream);
  }

  // .google.protobuf.StringValue caller_id = 5;
  if (this->has_caller_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::caller_id(this), target, stream);
  }

  // .google.protobuf.Int32Value max_duration = 6;
  if (this->has_max_duration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::max_duration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.DialCallAction)
  return target;
}

size_t DialCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.DialCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 1;
  total_size += 1UL * this->_internal_customer_numbers_size();
  for (const auto& msg : this->customer_numbers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.StringValue ringback_tone = 4;
  if (this->has_ringback_tone()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ringback_tone_);
  }

  // .google.protobuf.StringValue caller_id = 5;
  if (this->has_caller_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *caller_id_);
  }

  // .google.protobuf.Int32Value max_duration = 6;
  if (this->has_max_duration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *max_duration_);
  }

  // bool record = 2;
  if (this->record() != 0) {
    total_size += 1 + 1;
  }

  // bool sequential = 3;
  if (this->sequential() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DialCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.DialCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const DialCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DialCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.DialCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.DialCallAction)
    MergeFrom(*source);
  }
}

void DialCallAction::MergeFrom(const DialCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.DialCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  customer_numbers_.MergeFrom(from.customer_numbers_);
  if (from.has_ringback_tone()) {
    _internal_mutable_ringback_tone()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_ringback_tone());
  }
  if (from.has_caller_id()) {
    _internal_mutable_caller_id()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_caller_id());
  }
  if (from.has_max_duration()) {
    _internal_mutable_max_duration()->PROTOBUF_NAMESPACE_ID::Int32Value::MergeFrom(from._internal_max_duration());
  }
  if (from.record() != 0) {
    _internal_set_record(from._internal_record());
  }
  if (from.sequential() != 0) {
    _internal_set_sequential(from._internal_sequential());
  }
}

void DialCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.DialCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DialCallAction::CopyFrom(const DialCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.DialCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DialCallAction::IsInitialized() const {
  return true;
}

void DialCallAction::InternalSwap(DialCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  customer_numbers_.InternalSwap(&other->customer_numbers_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DialCallAction, sequential_)
      + sizeof(DialCallAction::sequential_)
      - PROTOBUF_FIELD_OFFSET(DialCallAction, ringback_tone_)>(
          reinterpret_cast<char*>(&ringback_tone_),
          reinterpret_cast<char*>(&other->ringback_tone_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DialCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EnqueueCallAction::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& hold_music(const EnqueueCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& queue_name(const EnqueueCallAction* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
EnqueueCallAction::_Internal::hold_music(const EnqueueCallAction* msg) {
  return *msg->hold_music_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
EnqueueCallAction::_Internal::queue_name(const EnqueueCallAction* msg) {
  return *msg->queue_name_;
}
void EnqueueCallAction::clear_hold_music() {
  if (GetArena() == nullptr && hold_music_ != nullptr) {
    delete hold_music_;
  }
  hold_music_ = nullptr;
}
void EnqueueCallAction::clear_queue_name() {
  if (GetArena() == nullptr && queue_name_ != nullptr) {
    delete queue_name_;
  }
  queue_name_ = nullptr;
}
EnqueueCallAction::EnqueueCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.EnqueueCallAction)
}
EnqueueCallAction::EnqueueCallAction(const EnqueueCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hold_music()) {
    hold_music_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.hold_music_);
  } else {
    hold_music_ = nullptr;
  }
  if (from._internal_has_queue_name()) {
    queue_name_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.queue_name_);
  } else {
    queue_name_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.EnqueueCallAction)
}

void EnqueueCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnqueueCallAction_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&hold_music_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&queue_name_) -
      reinterpret_cast<char*>(&hold_music_)) + sizeof(queue_name_));
}

EnqueueCallAction::~EnqueueCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.EnqueueCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnqueueCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete hold_music_;
  if (this != internal_default_instance()) delete queue_name_;
}

void EnqueueCallAction::ArenaDtor(void* object) {
  EnqueueCallAction* _this = reinterpret_cast< EnqueueCallAction* >(object);
  (void)_this;
}
void EnqueueCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnqueueCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnqueueCallAction& EnqueueCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnqueueCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void EnqueueCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.EnqueueCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && hold_music_ != nullptr) {
    delete hold_music_;
  }
  hold_music_ = nullptr;
  if (GetArena() == nullptr && queue_name_ != nullptr) {
    delete queue_name_;
  }
  queue_name_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnqueueCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.StringValue hold_music = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hold_music(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue queue_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue_name(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnqueueCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.EnqueueCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.StringValue hold_music = 1;
  if (this->has_hold_music()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::hold_music(this), target, stream);
  }

  // .google.protobuf.StringValue queue_name = 2;
  if (this->has_queue_name()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::queue_name(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.EnqueueCallAction)
  return target;
}

size_t EnqueueCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.EnqueueCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue hold_music = 1;
  if (this->has_hold_music()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hold_music_);
  }

  // .google.protobuf.StringValue queue_name = 2;
  if (this->has_queue_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_name_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnqueueCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.EnqueueCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const EnqueueCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnqueueCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.EnqueueCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.EnqueueCallAction)
    MergeFrom(*source);
  }
}

void EnqueueCallAction::MergeFrom(const EnqueueCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.EnqueueCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hold_music()) {
    _internal_mutable_hold_music()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_hold_music());
  }
  if (from.has_queue_name()) {
    _internal_mutable_queue_name()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_queue_name());
  }
}

void EnqueueCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.EnqueueCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnqueueCallAction::CopyFrom(const EnqueueCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.EnqueueCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnqueueCallAction::IsInitialized() const {
  return true;
}

void EnqueueCallAction::InternalSwap(EnqueueCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnqueueCallAction, queue_name_)
      + sizeof(EnqueueCallAction::queue_name_)
      - PROTOBUF_FIELD_OFFSET(EnqueueCallAction, hold_music_)>(
          reinterpret_cast<char*>(&hold_music_),
          reinterpret_cast<char*>(&other->hold_music_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnqueueCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DequeueCallAction::_Internal {
 public:
  static const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number(const DequeueCallAction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& queue_name(const DequeueCallAction* msg);
};

const ::com::elarian::hera::proto::MessagingChannelNumber&
DequeueCallAction::_Internal::channel_number(const DequeueCallAction* msg) {
  return *msg->channel_number_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
DequeueCallAction::_Internal::queue_name(const DequeueCallAction* msg) {
  return *msg->queue_name_;
}
void DequeueCallAction::clear_queue_name() {
  if (GetArena() == nullptr && queue_name_ != nullptr) {
    delete queue_name_;
  }
  queue_name_ = nullptr;
}
DequeueCallAction::DequeueCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.DequeueCallAction)
}
DequeueCallAction::DequeueCallAction(const DequeueCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::MessagingChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  if (from._internal_has_queue_name()) {
    queue_name_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.queue_name_);
  } else {
    queue_name_ = nullptr;
  }
  record_ = from.record_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.DequeueCallAction)
}

void DequeueCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DequeueCallAction_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&channel_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&record_) -
      reinterpret_cast<char*>(&channel_number_)) + sizeof(record_));
}

DequeueCallAction::~DequeueCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.DequeueCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DequeueCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete channel_number_;
  if (this != internal_default_instance()) delete queue_name_;
}

void DequeueCallAction::ArenaDtor(void* object) {
  DequeueCallAction* _this = reinterpret_cast< DequeueCallAction* >(object);
  (void)_this;
}
void DequeueCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DequeueCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DequeueCallAction& DequeueCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DequeueCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void DequeueCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.DequeueCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  if (GetArena() == nullptr && queue_name_ != nullptr) {
    delete queue_name_;
  }
  queue_name_ = nullptr;
  record_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DequeueCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool record = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          record_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue queue_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue_name(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DequeueCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.DequeueCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 1;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::channel_number(this), target, stream);
  }

  // bool record = 2;
  if (this->record() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_record(), target);
  }

  // .google.protobuf.StringValue queue_name = 3;
  if (this->has_queue_name()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::queue_name(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.DequeueCallAction)
  return target;
}

size_t DequeueCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.DequeueCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 1;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  // .google.protobuf.StringValue queue_name = 3;
  if (this->has_queue_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_name_);
  }

  // bool record = 2;
  if (this->record() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DequeueCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.DequeueCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const DequeueCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DequeueCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.DequeueCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.DequeueCallAction)
    MergeFrom(*source);
  }
}

void DequeueCallAction::MergeFrom(const DequeueCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.DequeueCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::MessagingChannelNumber::MergeFrom(from._internal_channel_number());
  }
  if (from.has_queue_name()) {
    _internal_mutable_queue_name()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_queue_name());
  }
  if (from.record() != 0) {
    _internal_set_record(from._internal_record());
  }
}

void DequeueCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.DequeueCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DequeueCallAction::CopyFrom(const DequeueCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.DequeueCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DequeueCallAction::IsInitialized() const {
  return true;
}

void DequeueCallAction::InternalSwap(DequeueCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DequeueCallAction, record_)
      + sizeof(DequeueCallAction::record_)
      - PROTOBUF_FIELD_OFFSET(DequeueCallAction, channel_number_)>(
          reinterpret_cast<char*>(&channel_number_),
          reinterpret_cast<char*>(&other->channel_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DequeueCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RejectCallAction::_Internal {
 public:
};

RejectCallAction::RejectCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.RejectCallAction)
}
RejectCallAction::RejectCallAction(const RejectCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.RejectCallAction)
}

void RejectCallAction::SharedCtor() {
}

RejectCallAction::~RejectCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.RejectCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RejectCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RejectCallAction::ArenaDtor(void* object) {
  RejectCallAction* _this = reinterpret_cast< RejectCallAction* >(object);
  (void)_this;
}
void RejectCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RejectCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RejectCallAction& RejectCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RejectCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void RejectCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.RejectCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RejectCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RejectCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.RejectCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.RejectCallAction)
  return target;
}

size_t RejectCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.RejectCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RejectCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.RejectCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const RejectCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RejectCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.RejectCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.RejectCallAction)
    MergeFrom(*source);
  }
}

void RejectCallAction::MergeFrom(const RejectCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.RejectCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RejectCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.RejectCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RejectCallAction::CopyFrom(const RejectCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.RejectCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RejectCallAction::IsInitialized() const {
  return true;
}

void RejectCallAction::InternalSwap(RejectCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RejectCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RedirectCallAction::_Internal {
 public:
};

RedirectCallAction::RedirectCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.RedirectCallAction)
}
RedirectCallAction::RedirectCallAction(const RedirectCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.RedirectCallAction)
}

void RedirectCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RedirectCallAction_messaging_5fmodel_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RedirectCallAction::~RedirectCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.RedirectCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RedirectCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RedirectCallAction::ArenaDtor(void* object) {
  RedirectCallAction* _this = reinterpret_cast< RedirectCallAction* >(object);
  (void)_this;
}
void RedirectCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RedirectCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RedirectCallAction& RedirectCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RedirectCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void RedirectCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.RedirectCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RedirectCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.RedirectCallAction.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RedirectCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.RedirectCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.RedirectCallAction.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.RedirectCallAction)
  return target;
}

size_t RedirectCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.RedirectCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RedirectCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.RedirectCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const RedirectCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RedirectCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.RedirectCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.RedirectCallAction)
    MergeFrom(*source);
  }
}

void RedirectCallAction::MergeFrom(const RedirectCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.RedirectCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
}

void RedirectCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.RedirectCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedirectCallAction::CopyFrom(const RedirectCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.RedirectCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedirectCallAction::IsInitialized() const {
  return true;
}

void RedirectCallAction::InternalSwap(RedirectCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RedirectCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceCallAction::_Internal {
 public:
  static const ::com::elarian::hera::proto::SayCallAction& say(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::PlayCallAction& play(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::GetDigitsCallAction& get_digits(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::DialCallAction& dial(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::RecordSessionCallAction& record_session(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::GetRecordingCallAction& get_recording(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::EnqueueCallAction& enqueue(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::DequeueCallAction& dequeue(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::RejectCallAction& reject(const VoiceCallAction* msg);
  static const ::com::elarian::hera::proto::RedirectCallAction& redirect(const VoiceCallAction* msg);
};

const ::com::elarian::hera::proto::SayCallAction&
VoiceCallAction::_Internal::say(const VoiceCallAction* msg) {
  return *msg->entry_.say_;
}
const ::com::elarian::hera::proto::PlayCallAction&
VoiceCallAction::_Internal::play(const VoiceCallAction* msg) {
  return *msg->entry_.play_;
}
const ::com::elarian::hera::proto::GetDigitsCallAction&
VoiceCallAction::_Internal::get_digits(const VoiceCallAction* msg) {
  return *msg->entry_.get_digits_;
}
const ::com::elarian::hera::proto::DialCallAction&
VoiceCallAction::_Internal::dial(const VoiceCallAction* msg) {
  return *msg->entry_.dial_;
}
const ::com::elarian::hera::proto::RecordSessionCallAction&
VoiceCallAction::_Internal::record_session(const VoiceCallAction* msg) {
  return *msg->entry_.record_session_;
}
const ::com::elarian::hera::proto::GetRecordingCallAction&
VoiceCallAction::_Internal::get_recording(const VoiceCallAction* msg) {
  return *msg->entry_.get_recording_;
}
const ::com::elarian::hera::proto::EnqueueCallAction&
VoiceCallAction::_Internal::enqueue(const VoiceCallAction* msg) {
  return *msg->entry_.enqueue_;
}
const ::com::elarian::hera::proto::DequeueCallAction&
VoiceCallAction::_Internal::dequeue(const VoiceCallAction* msg) {
  return *msg->entry_.dequeue_;
}
const ::com::elarian::hera::proto::RejectCallAction&
VoiceCallAction::_Internal::reject(const VoiceCallAction* msg) {
  return *msg->entry_.reject_;
}
const ::com::elarian::hera::proto::RedirectCallAction&
VoiceCallAction::_Internal::redirect(const VoiceCallAction* msg) {
  return *msg->entry_.redirect_;
}
void VoiceCallAction::set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (say) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(say);
    if (message_arena != submessage_arena) {
      say = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, say, submessage_arena);
    }
    set_has_say();
    entry_.say_ = say;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.say)
}
void VoiceCallAction::set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (play) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(play);
    if (message_arena != submessage_arena) {
      play = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, play, submessage_arena);
    }
    set_has_play();
    entry_.play_ = play;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.play)
}
void VoiceCallAction::set_allocated_get_digits(::com::elarian::hera::proto::GetDigitsCallAction* get_digits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (get_digits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_digits);
    if (message_arena != submessage_arena) {
      get_digits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_digits, submessage_arena);
    }
    set_has_get_digits();
    entry_.get_digits_ = get_digits;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.get_digits)
}
void VoiceCallAction::set_allocated_dial(::com::elarian::hera::proto::DialCallAction* dial) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (dial) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dial);
    if (message_arena != submessage_arena) {
      dial = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dial, submessage_arena);
    }
    set_has_dial();
    entry_.dial_ = dial;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.dial)
}
void VoiceCallAction::set_allocated_record_session(::com::elarian::hera::proto::RecordSessionCallAction* record_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (record_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(record_session);
    if (message_arena != submessage_arena) {
      record_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, record_session, submessage_arena);
    }
    set_has_record_session();
    entry_.record_session_ = record_session;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.record_session)
}
void VoiceCallAction::set_allocated_get_recording(::com::elarian::hera::proto::GetRecordingCallAction* get_recording) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (get_recording) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_recording);
    if (message_arena != submessage_arena) {
      get_recording = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_recording, submessage_arena);
    }
    set_has_get_recording();
    entry_.get_recording_ = get_recording;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.get_recording)
}
void VoiceCallAction::set_allocated_enqueue(::com::elarian::hera::proto::EnqueueCallAction* enqueue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (enqueue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(enqueue);
    if (message_arena != submessage_arena) {
      enqueue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enqueue, submessage_arena);
    }
    set_has_enqueue();
    entry_.enqueue_ = enqueue;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.enqueue)
}
void VoiceCallAction::set_allocated_dequeue(::com::elarian::hera::proto::DequeueCallAction* dequeue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (dequeue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dequeue);
    if (message_arena != submessage_arena) {
      dequeue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dequeue, submessage_arena);
    }
    set_has_dequeue();
    entry_.dequeue_ = dequeue;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.dequeue)
}
void VoiceCallAction::set_allocated_reject(::com::elarian::hera::proto::RejectCallAction* reject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (reject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reject);
    if (message_arena != submessage_arena) {
      reject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reject, submessage_arena);
    }
    set_has_reject();
    entry_.reject_ = reject;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.reject)
}
void VoiceCallAction::set_allocated_redirect(::com::elarian::hera::proto::RedirectCallAction* redirect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (redirect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(redirect);
    if (message_arena != submessage_arena) {
      redirect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, redirect, submessage_arena);
    }
    set_has_redirect();
    entry_.redirect_ = redirect;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallAction.redirect)
}
VoiceCallAction::VoiceCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.VoiceCallAction)
}
VoiceCallAction::VoiceCallAction(const VoiceCallAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case kGetDigits: {
      _internal_mutable_get_digits()->::com::elarian::hera::proto::GetDigitsCallAction::MergeFrom(from._internal_get_digits());
      break;
    }
    case kDial: {
      _internal_mutable_dial()->::com::elarian::hera::proto::DialCallAction::MergeFrom(from._internal_dial());
      break;
    }
    case kRecordSession: {
      _internal_mutable_record_session()->::com::elarian::hera::proto::RecordSessionCallAction::MergeFrom(from._internal_record_session());
      break;
    }
    case kGetRecording: {
      _internal_mutable_get_recording()->::com::elarian::hera::proto::GetRecordingCallAction::MergeFrom(from._internal_get_recording());
      break;
    }
    case kEnqueue: {
      _internal_mutable_enqueue()->::com::elarian::hera::proto::EnqueueCallAction::MergeFrom(from._internal_enqueue());
      break;
    }
    case kDequeue: {
      _internal_mutable_dequeue()->::com::elarian::hera::proto::DequeueCallAction::MergeFrom(from._internal_dequeue());
      break;
    }
    case kReject: {
      _internal_mutable_reject()->::com::elarian::hera::proto::RejectCallAction::MergeFrom(from._internal_reject());
      break;
    }
    case kRedirect: {
      _internal_mutable_redirect()->::com::elarian::hera::proto::RedirectCallAction::MergeFrom(from._internal_redirect());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.VoiceCallAction)
}

void VoiceCallAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoiceCallAction_messaging_5fmodel_2eproto.base);
  clear_has_entry();
}

VoiceCallAction::~VoiceCallAction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.VoiceCallAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceCallAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void VoiceCallAction::ArenaDtor(void* object) {
  VoiceCallAction* _this = reinterpret_cast< VoiceCallAction* >(object);
  (void)_this;
}
void VoiceCallAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceCallAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoiceCallAction& VoiceCallAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoiceCallAction_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void VoiceCallAction::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.VoiceCallAction)
  switch (entry_case()) {
    case kSay: {
      if (GetArena() == nullptr) {
        delete entry_.say_;
      }
      break;
    }
    case kPlay: {
      if (GetArena() == nullptr) {
        delete entry_.play_;
      }
      break;
    }
    case kGetDigits: {
      if (GetArena() == nullptr) {
        delete entry_.get_digits_;
      }
      break;
    }
    case kDial: {
      if (GetArena() == nullptr) {
        delete entry_.dial_;
      }
      break;
    }
    case kRecordSession: {
      if (GetArena() == nullptr) {
        delete entry_.record_session_;
      }
      break;
    }
    case kGetRecording: {
      if (GetArena() == nullptr) {
        delete entry_.get_recording_;
      }
      break;
    }
    case kEnqueue: {
      if (GetArena() == nullptr) {
        delete entry_.enqueue_;
      }
      break;
    }
    case kDequeue: {
      if (GetArena() == nullptr) {
        delete entry_.dequeue_;
      }
      break;
    }
    case kReject: {
      if (GetArena() == nullptr) {
        delete entry_.reject_;
      }
      break;
    }
    case kRedirect: {
      if (GetArena() == nullptr) {
        delete entry_.redirect_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void VoiceCallAction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.VoiceCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceCallAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.SayCallAction say = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_say(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PlayCallAction play = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_play(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.GetDigitsCallAction get_digits = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_digits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.DialCallAction dial = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_dial(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.RecordSessionCallAction record_session = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_record_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.GetRecordingCallAction get_recording = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_recording(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.EnqueueCallAction enqueue = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_enqueue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.DequeueCallAction dequeue = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_dequeue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.RejectCallAction reject = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_reject(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.RedirectCallAction redirect = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_redirect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceCallAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.VoiceCallAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.SayCallAction say = 1;
  if (_internal_has_say()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::say(this), target, stream);
  }

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  if (_internal_has_play()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::play(this), target, stream);
  }

  // .com.elarian.hera.proto.GetDigitsCallAction get_digits = 3;
  if (_internal_has_get_digits()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::get_digits(this), target, stream);
  }

  // .com.elarian.hera.proto.DialCallAction dial = 4;
  if (_internal_has_dial()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::dial(this), target, stream);
  }

  // .com.elarian.hera.proto.RecordSessionCallAction record_session = 5;
  if (_internal_has_record_session()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::record_session(this), target, stream);
  }

  // .com.elarian.hera.proto.GetRecordingCallAction get_recording = 6;
  if (_internal_has_get_recording()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::get_recording(this), target, stream);
  }

  // .com.elarian.hera.proto.EnqueueCallAction enqueue = 7;
  if (_internal_has_enqueue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::enqueue(this), target, stream);
  }

  // .com.elarian.hera.proto.DequeueCallAction dequeue = 8;
  if (_internal_has_dequeue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::dequeue(this), target, stream);
  }

  // .com.elarian.hera.proto.RejectCallAction reject = 9;
  if (_internal_has_reject()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::reject(this), target, stream);
  }

  // .com.elarian.hera.proto.RedirectCallAction redirect = 10;
  if (_internal_has_redirect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::redirect(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.VoiceCallAction)
  return target;
}

size_t VoiceCallAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.VoiceCallAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // .com.elarian.hera.proto.SayCallAction say = 1;
    case kSay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.say_);
      break;
    }
    // .com.elarian.hera.proto.PlayCallAction play = 2;
    case kPlay: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.play_);
      break;
    }
    // .com.elarian.hera.proto.GetDigitsCallAction get_digits = 3;
    case kGetDigits: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.get_digits_);
      break;
    }
    // .com.elarian.hera.proto.DialCallAction dial = 4;
    case kDial: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.dial_);
      break;
    }
    // .com.elarian.hera.proto.RecordSessionCallAction record_session = 5;
    case kRecordSession: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.record_session_);
      break;
    }
    // .com.elarian.hera.proto.GetRecordingCallAction get_recording = 6;
    case kGetRecording: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.get_recording_);
      break;
    }
    // .com.elarian.hera.proto.EnqueueCallAction enqueue = 7;
    case kEnqueue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.enqueue_);
      break;
    }
    // .com.elarian.hera.proto.DequeueCallAction dequeue = 8;
    case kDequeue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.dequeue_);
      break;
    }
    // .com.elarian.hera.proto.RejectCallAction reject = 9;
    case kReject: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.reject_);
      break;
    }
    // .com.elarian.hera.proto.RedirectCallAction redirect = 10;
    case kRedirect: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.redirect_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceCallAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.VoiceCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceCallAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceCallAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.VoiceCallAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.VoiceCallAction)
    MergeFrom(*source);
  }
}

void VoiceCallAction::MergeFrom(const VoiceCallAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.VoiceCallAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kSay: {
      _internal_mutable_say()->::com::elarian::hera::proto::SayCallAction::MergeFrom(from._internal_say());
      break;
    }
    case kPlay: {
      _internal_mutable_play()->::com::elarian::hera::proto::PlayCallAction::MergeFrom(from._internal_play());
      break;
    }
    case kGetDigits: {
      _internal_mutable_get_digits()->::com::elarian::hera::proto::GetDigitsCallAction::MergeFrom(from._internal_get_digits());
      break;
    }
    case kDial: {
      _internal_mutable_dial()->::com::elarian::hera::proto::DialCallAction::MergeFrom(from._internal_dial());
      break;
    }
    case kRecordSession: {
      _internal_mutable_record_session()->::com::elarian::hera::proto::RecordSessionCallAction::MergeFrom(from._internal_record_session());
      break;
    }
    case kGetRecording: {
      _internal_mutable_get_recording()->::com::elarian::hera::proto::GetRecordingCallAction::MergeFrom(from._internal_get_recording());
      break;
    }
    case kEnqueue: {
      _internal_mutable_enqueue()->::com::elarian::hera::proto::EnqueueCallAction::MergeFrom(from._internal_enqueue());
      break;
    }
    case kDequeue: {
      _internal_mutable_dequeue()->::com::elarian::hera::proto::DequeueCallAction::MergeFrom(from._internal_dequeue());
      break;
    }
    case kReject: {
      _internal_mutable_reject()->::com::elarian::hera::proto::RejectCallAction::MergeFrom(from._internal_reject());
      break;
    }
    case kRedirect: {
      _internal_mutable_redirect()->::com::elarian::hera::proto::RedirectCallAction::MergeFrom(from._internal_redirect());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void VoiceCallAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.VoiceCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCallAction::CopyFrom(const VoiceCallAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.VoiceCallAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCallAction::IsInitialized() const {
  return true;
}

void VoiceCallAction::InternalSwap(VoiceCallAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceCallAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceCallDialplanMessageBody::_Internal {
 public:
};

VoiceCallDialplanMessageBody::VoiceCallDialplanMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
}
VoiceCallDialplanMessageBody::VoiceCallDialplanMessageBody(const VoiceCallDialplanMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
}

void VoiceCallDialplanMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto.base);
}

VoiceCallDialplanMessageBody::~VoiceCallDialplanMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceCallDialplanMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VoiceCallDialplanMessageBody::ArenaDtor(void* object) {
  VoiceCallDialplanMessageBody* _this = reinterpret_cast< VoiceCallDialplanMessageBody* >(object);
  (void)_this;
}
void VoiceCallDialplanMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceCallDialplanMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoiceCallDialplanMessageBody& VoiceCallDialplanMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoiceCallDialplanMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void VoiceCallDialplanMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceCallDialplanMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .com.elarian.hera.proto.VoiceCallAction actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceCallDialplanMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.VoiceCallAction actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  return target;
}

size_t VoiceCallDialplanMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.VoiceCallAction actions = 1;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceCallDialplanMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceCallDialplanMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceCallDialplanMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
    MergeFrom(*source);
  }
}

void VoiceCallDialplanMessageBody::MergeFrom(const VoiceCallDialplanMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void VoiceCallDialplanMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCallDialplanMessageBody::CopyFrom(const VoiceCallDialplanMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCallDialplanMessageBody::IsInitialized() const {
  return true;
}

void VoiceCallDialplanMessageBody::InternalSwap(VoiceCallDialplanMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceCallDialplanMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceCallDialInput::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& started_at(const VoiceCallDialInput* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& duration(const VoiceCallDialInput* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
VoiceCallDialInput::_Internal::started_at(const VoiceCallDialInput* msg) {
  return *msg->started_at_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
VoiceCallDialInput::_Internal::duration(const VoiceCallDialInput* msg) {
  return *msg->duration_;
}
void VoiceCallDialInput::clear_started_at() {
  if (GetArena() == nullptr && started_at_ != nullptr) {
    delete started_at_;
  }
  started_at_ = nullptr;
}
void VoiceCallDialInput::clear_duration() {
  if (GetArena() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
}
VoiceCallDialInput::VoiceCallDialInput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.VoiceCallDialInput)
}
VoiceCallDialInput::VoiceCallDialInput(const VoiceCallDialInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  destination_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destination_number().empty()) {
    destination_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destination_number(), 
      GetArena());
  }
  if (from._internal_has_started_at()) {
    started_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.started_at_);
  } else {
    started_at_ = nullptr;
  }
  if (from._internal_has_duration()) {
    duration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.duration_);
  } else {
    duration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.VoiceCallDialInput)
}

void VoiceCallDialInput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto.base);
  destination_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&started_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&started_at_)) + sizeof(duration_));
}

VoiceCallDialInput::~VoiceCallDialInput() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.VoiceCallDialInput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceCallDialInput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  destination_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete started_at_;
  if (this != internal_default_instance()) delete duration_;
}

void VoiceCallDialInput::ArenaDtor(void* object) {
  VoiceCallDialInput* _this = reinterpret_cast< VoiceCallDialInput* >(object);
  (void)_this;
}
void VoiceCallDialInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceCallDialInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoiceCallDialInput& VoiceCallDialInput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoiceCallDialInput_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void VoiceCallDialInput::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.VoiceCallDialInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destination_number_.ClearToEmpty();
  if (GetArena() == nullptr && started_at_ != nullptr) {
    delete started_at_;
  }
  started_at_ = nullptr;
  if (GetArena() == nullptr && duration_ != nullptr) {
    delete duration_;
  }
  duration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceCallDialInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string destination_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_destination_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.VoiceCallDialInput.destination_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp started_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_started_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceCallDialInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.VoiceCallDialInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string destination_number = 1;
  if (this->destination_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination_number().data(), static_cast<int>(this->_internal_destination_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.VoiceCallDialInput.destination_number");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_destination_number(), target);
  }

  // .google.protobuf.Timestamp started_at = 2;
  if (this->has_started_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::started_at(this), target, stream);
  }

  // .google.protobuf.Duration duration = 3;
  if (this->has_duration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::duration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.VoiceCallDialInput)
  return target;
}

size_t VoiceCallDialInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.VoiceCallDialInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string destination_number = 1;
  if (this->destination_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination_number());
  }

  // .google.protobuf.Timestamp started_at = 2;
  if (this->has_started_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *started_at_);
  }

  // .google.protobuf.Duration duration = 3;
  if (this->has_duration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *duration_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceCallDialInput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.VoiceCallDialInput)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceCallDialInput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceCallDialInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.VoiceCallDialInput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.VoiceCallDialInput)
    MergeFrom(*source);
  }
}

void VoiceCallDialInput::MergeFrom(const VoiceCallDialInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.VoiceCallDialInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.destination_number().size() > 0) {
    _internal_set_destination_number(from._internal_destination_number());
  }
  if (from.has_started_at()) {
    _internal_mutable_started_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_started_at());
  }
  if (from.has_duration()) {
    _internal_mutable_duration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_duration());
  }
}

void VoiceCallDialInput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.VoiceCallDialInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCallDialInput::CopyFrom(const VoiceCallDialInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.VoiceCallDialInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCallDialInput::IsInitialized() const {
  return true;
}

void VoiceCallDialInput::InternalSwap(VoiceCallDialInput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  destination_number_.Swap(&other->destination_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceCallDialInput, duration_)
      + sizeof(VoiceCallDialInput::duration_)
      - PROTOBUF_FIELD_OFFSET(VoiceCallDialInput, started_at_)>(
          reinterpret_cast<char*>(&started_at_),
          reinterpret_cast<char*>(&other->started_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceCallDialInput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceCallQueueInput::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& enqueued_at(const VoiceCallQueueInput* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& dequeued_at(const VoiceCallQueueInput* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& dequeued_to_number(const VoiceCallQueueInput* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& dequeued_to_sessionid(const VoiceCallQueueInput* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& queue_duration(const VoiceCallQueueInput* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
VoiceCallQueueInput::_Internal::enqueued_at(const VoiceCallQueueInput* msg) {
  return *msg->enqueued_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
VoiceCallQueueInput::_Internal::dequeued_at(const VoiceCallQueueInput* msg) {
  return *msg->dequeued_at_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
VoiceCallQueueInput::_Internal::dequeued_to_number(const VoiceCallQueueInput* msg) {
  return *msg->dequeued_to_number_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
VoiceCallQueueInput::_Internal::dequeued_to_sessionid(const VoiceCallQueueInput* msg) {
  return *msg->dequeued_to_sessionid_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
VoiceCallQueueInput::_Internal::queue_duration(const VoiceCallQueueInput* msg) {
  return *msg->queue_duration_;
}
void VoiceCallQueueInput::clear_enqueued_at() {
  if (GetArena() == nullptr && enqueued_at_ != nullptr) {
    delete enqueued_at_;
  }
  enqueued_at_ = nullptr;
}
void VoiceCallQueueInput::clear_dequeued_at() {
  if (GetArena() == nullptr && dequeued_at_ != nullptr) {
    delete dequeued_at_;
  }
  dequeued_at_ = nullptr;
}
void VoiceCallQueueInput::clear_dequeued_to_number() {
  if (GetArena() == nullptr && dequeued_to_number_ != nullptr) {
    delete dequeued_to_number_;
  }
  dequeued_to_number_ = nullptr;
}
void VoiceCallQueueInput::clear_dequeued_to_sessionid() {
  if (GetArena() == nullptr && dequeued_to_sessionid_ != nullptr) {
    delete dequeued_to_sessionid_;
  }
  dequeued_to_sessionid_ = nullptr;
}
void VoiceCallQueueInput::clear_queue_duration() {
  if (GetArena() == nullptr && queue_duration_ != nullptr) {
    delete queue_duration_;
  }
  queue_duration_ = nullptr;
}
VoiceCallQueueInput::VoiceCallQueueInput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.VoiceCallQueueInput)
}
VoiceCallQueueInput::VoiceCallQueueInput(const VoiceCallQueueInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_enqueued_at()) {
    enqueued_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.enqueued_at_);
  } else {
    enqueued_at_ = nullptr;
  }
  if (from._internal_has_dequeued_at()) {
    dequeued_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.dequeued_at_);
  } else {
    dequeued_at_ = nullptr;
  }
  if (from._internal_has_dequeued_to_number()) {
    dequeued_to_number_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.dequeued_to_number_);
  } else {
    dequeued_to_number_ = nullptr;
  }
  if (from._internal_has_dequeued_to_sessionid()) {
    dequeued_to_sessionid_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.dequeued_to_sessionid_);
  } else {
    dequeued_to_sessionid_ = nullptr;
  }
  if (from._internal_has_queue_duration()) {
    queue_duration_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.queue_duration_);
  } else {
    queue_duration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.VoiceCallQueueInput)
}

void VoiceCallQueueInput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&enqueued_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&queue_duration_) -
      reinterpret_cast<char*>(&enqueued_at_)) + sizeof(queue_duration_));
}

VoiceCallQueueInput::~VoiceCallQueueInput() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.VoiceCallQueueInput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceCallQueueInput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete enqueued_at_;
  if (this != internal_default_instance()) delete dequeued_at_;
  if (this != internal_default_instance()) delete dequeued_to_number_;
  if (this != internal_default_instance()) delete dequeued_to_sessionid_;
  if (this != internal_default_instance()) delete queue_duration_;
}

void VoiceCallQueueInput::ArenaDtor(void* object) {
  VoiceCallQueueInput* _this = reinterpret_cast< VoiceCallQueueInput* >(object);
  (void)_this;
}
void VoiceCallQueueInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceCallQueueInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoiceCallQueueInput& VoiceCallQueueInput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoiceCallQueueInput_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void VoiceCallQueueInput::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.VoiceCallQueueInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && enqueued_at_ != nullptr) {
    delete enqueued_at_;
  }
  enqueued_at_ = nullptr;
  if (GetArena() == nullptr && dequeued_at_ != nullptr) {
    delete dequeued_at_;
  }
  dequeued_at_ = nullptr;
  if (GetArena() == nullptr && dequeued_to_number_ != nullptr) {
    delete dequeued_to_number_;
  }
  dequeued_to_number_ = nullptr;
  if (GetArena() == nullptr && dequeued_to_sessionid_ != nullptr) {
    delete dequeued_to_sessionid_;
  }
  dequeued_to_sessionid_ = nullptr;
  if (GetArena() == nullptr && queue_duration_ != nullptr) {
    delete queue_duration_;
  }
  queue_duration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceCallQueueInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp enqueued_at = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_enqueued_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp dequeued_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dequeued_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue dequeued_to_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dequeued_to_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue dequeued_to_sessionId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_dequeued_to_sessionid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration queue_duration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue_duration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceCallQueueInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.VoiceCallQueueInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp enqueued_at = 1;
  if (this->has_enqueued_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::enqueued_at(this), target, stream);
  }

  // .google.protobuf.Timestamp dequeued_at = 2;
  if (this->has_dequeued_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::dequeued_at(this), target, stream);
  }

  // .google.protobuf.StringValue dequeued_to_number = 3;
  if (this->has_dequeued_to_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::dequeued_to_number(this), target, stream);
  }

  // .google.protobuf.StringValue dequeued_to_sessionId = 4;
  if (this->has_dequeued_to_sessionid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::dequeued_to_sessionid(this), target, stream);
  }

  // .google.protobuf.Duration queue_duration = 5;
  if (this->has_queue_duration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::queue_duration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.VoiceCallQueueInput)
  return target;
}

size_t VoiceCallQueueInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.VoiceCallQueueInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp enqueued_at = 1;
  if (this->has_enqueued_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *enqueued_at_);
  }

  // .google.protobuf.Timestamp dequeued_at = 2;
  if (this->has_dequeued_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dequeued_at_);
  }

  // .google.protobuf.StringValue dequeued_to_number = 3;
  if (this->has_dequeued_to_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dequeued_to_number_);
  }

  // .google.protobuf.StringValue dequeued_to_sessionId = 4;
  if (this->has_dequeued_to_sessionid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dequeued_to_sessionid_);
  }

  // .google.protobuf.Duration queue_duration = 5;
  if (this->has_queue_duration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_duration_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceCallQueueInput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.VoiceCallQueueInput)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceCallQueueInput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceCallQueueInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.VoiceCallQueueInput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.VoiceCallQueueInput)
    MergeFrom(*source);
  }
}

void VoiceCallQueueInput::MergeFrom(const VoiceCallQueueInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.VoiceCallQueueInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enqueued_at()) {
    _internal_mutable_enqueued_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_enqueued_at());
  }
  if (from.has_dequeued_at()) {
    _internal_mutable_dequeued_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_dequeued_at());
  }
  if (from.has_dequeued_to_number()) {
    _internal_mutable_dequeued_to_number()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_dequeued_to_number());
  }
  if (from.has_dequeued_to_sessionid()) {
    _internal_mutable_dequeued_to_sessionid()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_dequeued_to_sessionid());
  }
  if (from.has_queue_duration()) {
    _internal_mutable_queue_duration()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_queue_duration());
  }
}

void VoiceCallQueueInput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.VoiceCallQueueInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCallQueueInput::CopyFrom(const VoiceCallQueueInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.VoiceCallQueueInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCallQueueInput::IsInitialized() const {
  return true;
}

void VoiceCallQueueInput::InternalSwap(VoiceCallQueueInput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceCallQueueInput, queue_duration_)
      + sizeof(VoiceCallQueueInput::queue_duration_)
      - PROTOBUF_FIELD_OFFSET(VoiceCallQueueInput, enqueued_at_)>(
          reinterpret_cast<char*>(&enqueued_at_),
          reinterpret_cast<char*>(&other->enqueued_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceCallQueueInput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoiceCallInputMessageBody::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& started_at(const VoiceCallInputMessageBody* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& dtmf_digits(const VoiceCallInputMessageBody* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& recording_url(const VoiceCallInputMessageBody* msg);
  static const ::com::elarian::hera::proto::VoiceCallDialInput& dial_data(const VoiceCallInputMessageBody* msg);
  static const ::com::elarian::hera::proto::VoiceCallQueueInput& queue_data(const VoiceCallInputMessageBody* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
VoiceCallInputMessageBody::_Internal::started_at(const VoiceCallInputMessageBody* msg) {
  return *msg->started_at_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
VoiceCallInputMessageBody::_Internal::dtmf_digits(const VoiceCallInputMessageBody* msg) {
  return *msg->dtmf_digits_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
VoiceCallInputMessageBody::_Internal::recording_url(const VoiceCallInputMessageBody* msg) {
  return *msg->recording_url_;
}
const ::com::elarian::hera::proto::VoiceCallDialInput&
VoiceCallInputMessageBody::_Internal::dial_data(const VoiceCallInputMessageBody* msg) {
  return *msg->dial_data_;
}
const ::com::elarian::hera::proto::VoiceCallQueueInput&
VoiceCallInputMessageBody::_Internal::queue_data(const VoiceCallInputMessageBody* msg) {
  return *msg->queue_data_;
}
void VoiceCallInputMessageBody::clear_started_at() {
  if (GetArena() == nullptr && started_at_ != nullptr) {
    delete started_at_;
  }
  started_at_ = nullptr;
}
void VoiceCallInputMessageBody::clear_dtmf_digits() {
  if (GetArena() == nullptr && dtmf_digits_ != nullptr) {
    delete dtmf_digits_;
  }
  dtmf_digits_ = nullptr;
}
void VoiceCallInputMessageBody::clear_recording_url() {
  if (GetArena() == nullptr && recording_url_ != nullptr) {
    delete recording_url_;
  }
  recording_url_ = nullptr;
}
VoiceCallInputMessageBody::VoiceCallInputMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.VoiceCallInputMessageBody)
}
VoiceCallInputMessageBody::VoiceCallInputMessageBody(const VoiceCallInputMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_started_at()) {
    started_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.started_at_);
  } else {
    started_at_ = nullptr;
  }
  if (from._internal_has_dtmf_digits()) {
    dtmf_digits_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.dtmf_digits_);
  } else {
    dtmf_digits_ = nullptr;
  }
  if (from._internal_has_recording_url()) {
    recording_url_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.recording_url_);
  } else {
    recording_url_ = nullptr;
  }
  if (from._internal_has_dial_data()) {
    dial_data_ = new ::com::elarian::hera::proto::VoiceCallDialInput(*from.dial_data_);
  } else {
    dial_data_ = nullptr;
  }
  if (from._internal_has_queue_data()) {
    queue_data_ = new ::com::elarian::hera::proto::VoiceCallQueueInput(*from.queue_data_);
  } else {
    queue_data_ = nullptr;
  }
  ::memcpy(&direction_, &from.direction_,
    static_cast<size_t>(reinterpret_cast<char*>(&hangup_cause_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(hangup_cause_));
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.VoiceCallInputMessageBody)
}

void VoiceCallInputMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&started_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&hangup_cause_) -
      reinterpret_cast<char*>(&started_at_)) + sizeof(hangup_cause_));
}

VoiceCallInputMessageBody::~VoiceCallInputMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.VoiceCallInputMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoiceCallInputMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete started_at_;
  if (this != internal_default_instance()) delete dtmf_digits_;
  if (this != internal_default_instance()) delete recording_url_;
  if (this != internal_default_instance()) delete dial_data_;
  if (this != internal_default_instance()) delete queue_data_;
}

void VoiceCallInputMessageBody::ArenaDtor(void* object) {
  VoiceCallInputMessageBody* _this = reinterpret_cast< VoiceCallInputMessageBody* >(object);
  (void)_this;
}
void VoiceCallInputMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoiceCallInputMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoiceCallInputMessageBody& VoiceCallInputMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoiceCallInputMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void VoiceCallInputMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && started_at_ != nullptr) {
    delete started_at_;
  }
  started_at_ = nullptr;
  if (GetArena() == nullptr && dtmf_digits_ != nullptr) {
    delete dtmf_digits_;
  }
  dtmf_digits_ = nullptr;
  if (GetArena() == nullptr && recording_url_ != nullptr) {
    delete recording_url_;
  }
  recording_url_ = nullptr;
  if (GetArena() == nullptr && dial_data_ != nullptr) {
    delete dial_data_;
  }
  dial_data_ = nullptr;
  if (GetArena() == nullptr && queue_data_ != nullptr) {
    delete queue_data_;
  }
  queue_data_ = nullptr;
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hangup_cause_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(hangup_cause_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoiceCallInputMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.CustomerEventDirection direction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction(static_cast<::com::elarian::hera::proto::CustomerEventDirection>(val));
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::elarian::hera::proto::VoiceCallStatus>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp started_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_started_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallHangupCause hangup_cause = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_hangup_cause(static_cast<::com::elarian::hera::proto::VoiceCallHangupCause>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue dtmf_digits = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_dtmf_digits(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue recording_url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_recording_url(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallDialInput dial_data = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_dial_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallQueueInput queue_data = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_queue_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoiceCallInputMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.CustomerEventDirection direction = 1;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_direction(), target);
  }

  // .com.elarian.hera.proto.VoiceCallStatus status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // .google.protobuf.Timestamp started_at = 3;
  if (this->has_started_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::started_at(this), target, stream);
  }

  // .com.elarian.hera.proto.VoiceCallHangupCause hangup_cause = 4;
  if (this->hangup_cause() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_hangup_cause(), target);
  }

  // .google.protobuf.StringValue dtmf_digits = 5;
  if (this->has_dtmf_digits()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::dtmf_digits(this), target, stream);
  }

  // .google.protobuf.StringValue recording_url = 6;
  if (this->has_recording_url()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::recording_url(this), target, stream);
  }

  // .com.elarian.hera.proto.VoiceCallDialInput dial_data = 7;
  if (this->has_dial_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::dial_data(this), target, stream);
  }

  // .com.elarian.hera.proto.VoiceCallQueueInput queue_data = 8;
  if (this->has_queue_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::queue_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.VoiceCallInputMessageBody)
  return target;
}

size_t VoiceCallInputMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp started_at = 3;
  if (this->has_started_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *started_at_);
  }

  // .google.protobuf.StringValue dtmf_digits = 5;
  if (this->has_dtmf_digits()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dtmf_digits_);
  }

  // .google.protobuf.StringValue recording_url = 6;
  if (this->has_recording_url()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *recording_url_);
  }

  // .com.elarian.hera.proto.VoiceCallDialInput dial_data = 7;
  if (this->has_dial_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *dial_data_);
  }

  // .com.elarian.hera.proto.VoiceCallQueueInput queue_data = 8;
  if (this->has_queue_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *queue_data_);
  }

  // .com.elarian.hera.proto.CustomerEventDirection direction = 1;
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // .com.elarian.hera.proto.VoiceCallStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .com.elarian.hera.proto.VoiceCallHangupCause hangup_cause = 4;
  if (this->hangup_cause() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hangup_cause());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoiceCallInputMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceCallInputMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoiceCallInputMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.VoiceCallInputMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.VoiceCallInputMessageBody)
    MergeFrom(*source);
  }
}

void VoiceCallInputMessageBody::MergeFrom(const VoiceCallInputMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_started_at()) {
    _internal_mutable_started_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_started_at());
  }
  if (from.has_dtmf_digits()) {
    _internal_mutable_dtmf_digits()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_dtmf_digits());
  }
  if (from.has_recording_url()) {
    _internal_mutable_recording_url()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_recording_url());
  }
  if (from.has_dial_data()) {
    _internal_mutable_dial_data()->::com::elarian::hera::proto::VoiceCallDialInput::MergeFrom(from._internal_dial_data());
  }
  if (from.has_queue_data()) {
    _internal_mutable_queue_data()->::com::elarian::hera::proto::VoiceCallQueueInput::MergeFrom(from._internal_queue_data());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.hangup_cause() != 0) {
    _internal_set_hangup_cause(from._internal_hangup_cause());
  }
}

void VoiceCallInputMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCallInputMessageBody::CopyFrom(const VoiceCallInputMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.VoiceCallInputMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCallInputMessageBody::IsInitialized() const {
  return true;
}

void VoiceCallInputMessageBody::InternalSwap(VoiceCallInputMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoiceCallInputMessageBody, hangup_cause_)
      + sizeof(VoiceCallInputMessageBody::hangup_cause_)
      - PROTOBUF_FIELD_OFFSET(VoiceCallInputMessageBody, started_at_)>(
          reinterpret_cast<char*>(&started_at_),
          reinterpret_cast<char*>(&other->started_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VoiceCallInputMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UssdInputMessageBody::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& text(const UssdInputMessageBody* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
UssdInputMessageBody::_Internal::text(const UssdInputMessageBody* msg) {
  return *msg->text_;
}
void UssdInputMessageBody::clear_text() {
  if (GetArena() == nullptr && text_ != nullptr) {
    delete text_;
  }
  text_ = nullptr;
}
UssdInputMessageBody::UssdInputMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.UssdInputMessageBody)
}
UssdInputMessageBody::UssdInputMessageBody(const UssdInputMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_text()) {
    text_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.text_);
  } else {
    text_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.UssdInputMessageBody)
}

void UssdInputMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&text_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&text_)) + sizeof(status_));
}

UssdInputMessageBody::~UssdInputMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.UssdInputMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UssdInputMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete text_;
}

void UssdInputMessageBody::ArenaDtor(void* object) {
  UssdInputMessageBody* _this = reinterpret_cast< UssdInputMessageBody* >(object);
  (void)_this;
}
void UssdInputMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UssdInputMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UssdInputMessageBody& UssdInputMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UssdInputMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void UssdInputMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.UssdInputMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && text_ != nullptr) {
    delete text_;
  }
  text_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UssdInputMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.UssdSessionStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::elarian::hera::proto::UssdSessionStatus>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_text(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UssdInputMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.UssdInputMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.UssdSessionStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // .google.protobuf.StringValue text = 2;
  if (this->has_text()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::text(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.UssdInputMessageBody)
  return target;
}

size_t UssdInputMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.UssdInputMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.StringValue text = 2;
  if (this->has_text()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .com.elarian.hera.proto.UssdSessionStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UssdInputMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.UssdInputMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const UssdInputMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UssdInputMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.UssdInputMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.UssdInputMessageBody)
    MergeFrom(*source);
  }
}

void UssdInputMessageBody::MergeFrom(const UssdInputMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.UssdInputMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_text()) {
    _internal_mutable_text()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_text());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UssdInputMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.UssdInputMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UssdInputMessageBody::CopyFrom(const UssdInputMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.UssdInputMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UssdInputMessageBody::IsInitialized() const {
  return true;
}

void UssdInputMessageBody::InternalSwap(UssdInputMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UssdInputMessageBody, status_)
      + sizeof(UssdInputMessageBody::status_)
      - PROTOBUF_FIELD_OFFSET(UssdInputMessageBody, text_)>(
          reinterpret_cast<char*>(&text_),
          reinterpret_cast<char*>(&other->text_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UssdInputMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UssdMenuMessageBody::_Internal {
 public:
};

UssdMenuMessageBody::UssdMenuMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.UssdMenuMessageBody)
}
UssdMenuMessageBody::UssdMenuMessageBody(const UssdMenuMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  is_terminal_ = from.is_terminal_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.UssdMenuMessageBody)
}

void UssdMenuMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_terminal_ = false;
}

UssdMenuMessageBody::~UssdMenuMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.UssdMenuMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UssdMenuMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UssdMenuMessageBody::ArenaDtor(void* object) {
  UssdMenuMessageBody* _this = reinterpret_cast< UssdMenuMessageBody* >(object);
  (void)_this;
}
void UssdMenuMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UssdMenuMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UssdMenuMessageBody& UssdMenuMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UssdMenuMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void UssdMenuMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.UssdMenuMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  is_terminal_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UssdMenuMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.UssdMenuMessageBody.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_terminal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_terminal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UssdMenuMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.UssdMenuMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.UssdMenuMessageBody.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // bool is_terminal = 2;
  if (this->is_terminal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_terminal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.UssdMenuMessageBody)
  return target;
}

size_t UssdMenuMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.UssdMenuMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // bool is_terminal = 2;
  if (this->is_terminal() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UssdMenuMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.UssdMenuMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const UssdMenuMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UssdMenuMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.UssdMenuMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.UssdMenuMessageBody)
    MergeFrom(*source);
  }
}

void UssdMenuMessageBody::MergeFrom(const UssdMenuMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.UssdMenuMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.is_terminal() != 0) {
    _internal_set_is_terminal(from._internal_is_terminal());
  }
}

void UssdMenuMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.UssdMenuMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UssdMenuMessageBody::CopyFrom(const UssdMenuMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.UssdMenuMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UssdMenuMessageBody::IsInitialized() const {
  return true;
}

void UssdMenuMessageBody::InternalSwap(UssdMenuMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(is_terminal_, other->is_terminal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UssdMenuMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutboundMessageBody::_Internal {
 public:
  static const ::com::elarian::hera::proto::MediaMessageBody& media(const OutboundMessageBody* msg);
  static const ::com::elarian::hera::proto::LocationMessageBody& location(const OutboundMessageBody* msg);
  static const ::com::elarian::hera::proto::EmailMessageBody& email(const OutboundMessageBody* msg);
  static const ::com::elarian::hera::proto::TemplateMessageBody& template_(const OutboundMessageBody* msg);
  static const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody& voice(const OutboundMessageBody* msg);
  static const ::com::elarian::hera::proto::UssdMenuMessageBody& ussd(const OutboundMessageBody* msg);
};

const ::com::elarian::hera::proto::MediaMessageBody&
OutboundMessageBody::_Internal::media(const OutboundMessageBody* msg) {
  return *msg->entry_.media_;
}
const ::com::elarian::hera::proto::LocationMessageBody&
OutboundMessageBody::_Internal::location(const OutboundMessageBody* msg) {
  return *msg->entry_.location_;
}
const ::com::elarian::hera::proto::EmailMessageBody&
OutboundMessageBody::_Internal::email(const OutboundMessageBody* msg) {
  return *msg->entry_.email_;
}
const ::com::elarian::hera::proto::TemplateMessageBody&
OutboundMessageBody::_Internal::template_(const OutboundMessageBody* msg) {
  return *msg->entry_.template__;
}
const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody&
OutboundMessageBody::_Internal::voice(const OutboundMessageBody* msg) {
  return *msg->entry_.voice_;
}
const ::com::elarian::hera::proto::UssdMenuMessageBody&
OutboundMessageBody::_Internal::ussd(const OutboundMessageBody* msg) {
  return *msg->entry_.ussd_;
}
void OutboundMessageBody::set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (media) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(media);
    if (message_arena != submessage_arena) {
      media = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, media, submessage_arena);
    }
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.media)
}
void OutboundMessageBody::set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    set_has_location();
    entry_.location_ = location;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.location)
}
void OutboundMessageBody::set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (email) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(email);
    if (message_arena != submessage_arena) {
      email = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, email, submessage_arena);
    }
    set_has_email();
    entry_.email_ = email;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.email)
}
void OutboundMessageBody::set_allocated_template_(::com::elarian::hera::proto::TemplateMessageBody* template_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (template_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(template_);
    if (message_arena != submessage_arena) {
      template_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, template_, submessage_arena);
    }
    set_has_template_();
    entry_.template__ = template_;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.template)
}
void OutboundMessageBody::set_allocated_voice(::com::elarian::hera::proto::VoiceCallDialplanMessageBody* voice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (voice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(voice);
    if (message_arena != submessage_arena) {
      voice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voice, submessage_arena);
    }
    set_has_voice();
    entry_.voice_ = voice;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.voice)
}
void OutboundMessageBody::set_allocated_ussd(::com::elarian::hera::proto::UssdMenuMessageBody* ussd) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (ussd) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ussd);
    if (message_arena != submessage_arena) {
      ussd = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ussd, submessage_arena);
    }
    set_has_ussd();
    entry_.ussd_ = ussd;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.ussd)
}
OutboundMessageBody::OutboundMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.OutboundMessageBody)
}
OutboundMessageBody::OutboundMessageBody(const OutboundMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case kLocation: {
      _internal_mutable_location()->::com::elarian::hera::proto::LocationMessageBody::MergeFrom(from._internal_location());
      break;
    }
    case kEmail: {
      _internal_mutable_email()->::com::elarian::hera::proto::EmailMessageBody::MergeFrom(from._internal_email());
      break;
    }
    case kTemplate: {
      _internal_mutable_template_()->::com::elarian::hera::proto::TemplateMessageBody::MergeFrom(from._internal_template_());
      break;
    }
    case kUrl: {
      _internal_set_url(from._internal_url());
      break;
    }
    case kVoice: {
      _internal_mutable_voice()->::com::elarian::hera::proto::VoiceCallDialplanMessageBody::MergeFrom(from._internal_voice());
      break;
    }
    case kUssd: {
      _internal_mutable_ussd()->::com::elarian::hera::proto::UssdMenuMessageBody::MergeFrom(from._internal_ussd());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.OutboundMessageBody)
}

void OutboundMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutboundMessageBody_messaging_5fmodel_2eproto.base);
  clear_has_entry();
}

OutboundMessageBody::~OutboundMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.OutboundMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutboundMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void OutboundMessageBody::ArenaDtor(void* object) {
  OutboundMessageBody* _this = reinterpret_cast< OutboundMessageBody* >(object);
  (void)_this;
}
void OutboundMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutboundMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutboundMessageBody& OutboundMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutboundMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void OutboundMessageBody::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.OutboundMessageBody)
  switch (entry_case()) {
    case kText: {
      entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kMedia: {
      if (GetArena() == nullptr) {
        delete entry_.media_;
      }
      break;
    }
    case kLocation: {
      if (GetArena() == nullptr) {
        delete entry_.location_;
      }
      break;
    }
    case kEmail: {
      if (GetArena() == nullptr) {
        delete entry_.email_;
      }
      break;
    }
    case kTemplate: {
      if (GetArena() == nullptr) {
        delete entry_.template__;
      }
      break;
    }
    case kUrl: {
      entry_.url_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kVoice: {
      if (GetArena() == nullptr) {
        delete entry_.voice_;
      }
      break;
    }
    case kUssd: {
      if (GetArena() == nullptr) {
        delete entry_.ussd_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void OutboundMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.OutboundMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutboundMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.OutboundMessageBody.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MediaMessageBody media = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_media(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.LocationMessageBody location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.EmailMessageBody email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_email(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.TemplateMessageBody template = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_template_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.OutboundMessageBody.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallDialplanMessageBody voice = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.UssdMenuMessageBody ussd = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_ussd(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutboundMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.OutboundMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.OutboundMessageBody.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .com.elarian.hera.proto.MediaMessageBody media = 2;
  if (_internal_has_media()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::media(this), target, stream);
  }

  // .com.elarian.hera.proto.LocationMessageBody location = 3;
  if (_internal_has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::location(this), target, stream);
  }

  // .com.elarian.hera.proto.EmailMessageBody email = 4;
  if (_internal_has_email()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::email(this), target, stream);
  }

  // .com.elarian.hera.proto.TemplateMessageBody template = 5;
  if (_internal_has_template_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::template_(this), target, stream);
  }

  // string url = 6;
  if (_internal_has_url()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.OutboundMessageBody.url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_url(), target);
  }

  // .com.elarian.hera.proto.VoiceCallDialplanMessageBody voice = 7;
  if (_internal_has_voice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::voice(this), target, stream);
  }

  // .com.elarian.hera.proto.UssdMenuMessageBody ussd = 8;
  if (_internal_has_ussd()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::ussd(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.OutboundMessageBody)
  return target;
}

size_t OutboundMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.OutboundMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // string text = 1;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    // .com.elarian.hera.proto.MediaMessageBody media = 2;
    case kMedia: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.media_);
      break;
    }
    // .com.elarian.hera.proto.LocationMessageBody location = 3;
    case kLocation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.location_);
      break;
    }
    // .com.elarian.hera.proto.EmailMessageBody email = 4;
    case kEmail: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.email_);
      break;
    }
    // .com.elarian.hera.proto.TemplateMessageBody template = 5;
    case kTemplate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.template__);
      break;
    }
    // string url = 6;
    case kUrl: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
      break;
    }
    // .com.elarian.hera.proto.VoiceCallDialplanMessageBody voice = 7;
    case kVoice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.voice_);
      break;
    }
    // .com.elarian.hera.proto.UssdMenuMessageBody ussd = 8;
    case kUssd: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.ussd_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutboundMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.OutboundMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const OutboundMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutboundMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.OutboundMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.OutboundMessageBody)
    MergeFrom(*source);
  }
}

void OutboundMessageBody::MergeFrom(const OutboundMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.OutboundMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case kLocation: {
      _internal_mutable_location()->::com::elarian::hera::proto::LocationMessageBody::MergeFrom(from._internal_location());
      break;
    }
    case kEmail: {
      _internal_mutable_email()->::com::elarian::hera::proto::EmailMessageBody::MergeFrom(from._internal_email());
      break;
    }
    case kTemplate: {
      _internal_mutable_template_()->::com::elarian::hera::proto::TemplateMessageBody::MergeFrom(from._internal_template_());
      break;
    }
    case kUrl: {
      _internal_set_url(from._internal_url());
      break;
    }
    case kVoice: {
      _internal_mutable_voice()->::com::elarian::hera::proto::VoiceCallDialplanMessageBody::MergeFrom(from._internal_voice());
      break;
    }
    case kUssd: {
      _internal_mutable_ussd()->::com::elarian::hera::proto::UssdMenuMessageBody::MergeFrom(from._internal_ussd());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void OutboundMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.OutboundMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutboundMessageBody::CopyFrom(const OutboundMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.OutboundMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutboundMessageBody::IsInitialized() const {
  return true;
}

void OutboundMessageBody::InternalSwap(OutboundMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutboundMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PromptMessageMenuItemBody::_Internal {
 public:
  static const ::com::elarian::hera::proto::MediaMessageBody& media(const PromptMessageMenuItemBody* msg);
};

const ::com::elarian::hera::proto::MediaMessageBody&
PromptMessageMenuItemBody::_Internal::media(const PromptMessageMenuItemBody* msg) {
  return *msg->entry_.media_;
}
void PromptMessageMenuItemBody::set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (media) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(media);
    if (message_arena != submessage_arena) {
      media = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, media, submessage_arena);
    }
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
}
PromptMessageMenuItemBody::PromptMessageMenuItemBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PromptMessageMenuItemBody)
}
PromptMessageMenuItemBody::PromptMessageMenuItemBody(const PromptMessageMenuItemBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PromptMessageMenuItemBody)
}

void PromptMessageMenuItemBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto.base);
  clear_has_entry();
}

PromptMessageMenuItemBody::~PromptMessageMenuItemBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PromptMessageMenuItemBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PromptMessageMenuItemBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void PromptMessageMenuItemBody::ArenaDtor(void* object) {
  PromptMessageMenuItemBody* _this = reinterpret_cast< PromptMessageMenuItemBody* >(object);
  (void)_this;
}
void PromptMessageMenuItemBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PromptMessageMenuItemBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PromptMessageMenuItemBody& PromptMessageMenuItemBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PromptMessageMenuItemBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PromptMessageMenuItemBody::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  switch (entry_case()) {
    case kText: {
      entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kMedia: {
      if (GetArena() == nullptr) {
        delete entry_.media_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void PromptMessageMenuItemBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PromptMessageMenuItemBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PromptMessageMenuItemBody.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MediaMessageBody media = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_media(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PromptMessageMenuItemBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 2;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PromptMessageMenuItemBody.text");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text(), target);
  }

  // .com.elarian.hera.proto.MediaMessageBody media = 3;
  if (_internal_has_media()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::media(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PromptMessageMenuItemBody)
  return target;
}

size_t PromptMessageMenuItemBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // string text = 2;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    // .com.elarian.hera.proto.MediaMessageBody media = 3;
    case kMedia: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.media_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PromptMessageMenuItemBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  GOOGLE_DCHECK_NE(&from, this);
  const PromptMessageMenuItemBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PromptMessageMenuItemBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PromptMessageMenuItemBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PromptMessageMenuItemBody)
    MergeFrom(*source);
  }
}

void PromptMessageMenuItemBody::MergeFrom(const PromptMessageMenuItemBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void PromptMessageMenuItemBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromptMessageMenuItemBody::CopyFrom(const PromptMessageMenuItemBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PromptMessageMenuItemBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromptMessageMenuItemBody::IsInitialized() const {
  return true;
}

void PromptMessageMenuItemBody::InternalSwap(PromptMessageMenuItemBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PromptMessageMenuItemBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class InboundMessageBody::_Internal {
 public:
  static const ::com::elarian::hera::proto::MediaMessageBody& media(const InboundMessageBody* msg);
  static const ::com::elarian::hera::proto::LocationMessageBody& location(const InboundMessageBody* msg);
  static const ::com::elarian::hera::proto::EmailMessageBody& email(const InboundMessageBody* msg);
  static const ::com::elarian::hera::proto::VoiceCallInputMessageBody& voice(const InboundMessageBody* msg);
  static const ::com::elarian::hera::proto::UssdInputMessageBody& ussd(const InboundMessageBody* msg);
};

const ::com::elarian::hera::proto::MediaMessageBody&
InboundMessageBody::_Internal::media(const InboundMessageBody* msg) {
  return *msg->entry_.media_;
}
const ::com::elarian::hera::proto::LocationMessageBody&
InboundMessageBody::_Internal::location(const InboundMessageBody* msg) {
  return *msg->entry_.location_;
}
const ::com::elarian::hera::proto::EmailMessageBody&
InboundMessageBody::_Internal::email(const InboundMessageBody* msg) {
  return *msg->entry_.email_;
}
const ::com::elarian::hera::proto::VoiceCallInputMessageBody&
InboundMessageBody::_Internal::voice(const InboundMessageBody* msg) {
  return *msg->entry_.voice_;
}
const ::com::elarian::hera::proto::UssdInputMessageBody&
InboundMessageBody::_Internal::ussd(const InboundMessageBody* msg) {
  return *msg->entry_.ussd_;
}
void InboundMessageBody::set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (media) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(media);
    if (message_arena != submessage_arena) {
      media = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, media, submessage_arena);
    }
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.media)
}
void InboundMessageBody::set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    set_has_location();
    entry_.location_ = location;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.location)
}
void InboundMessageBody::set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (email) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(email);
    if (message_arena != submessage_arena) {
      email = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, email, submessage_arena);
    }
    set_has_email();
    entry_.email_ = email;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.email)
}
void InboundMessageBody::set_allocated_voice(::com::elarian::hera::proto::VoiceCallInputMessageBody* voice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (voice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(voice);
    if (message_arena != submessage_arena) {
      voice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, voice, submessage_arena);
    }
    set_has_voice();
    entry_.voice_ = voice;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.voice)
}
void InboundMessageBody::set_allocated_ussd(::com::elarian::hera::proto::UssdInputMessageBody* ussd) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entry();
  if (ussd) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ussd);
    if (message_arena != submessage_arena) {
      ussd = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ussd, submessage_arena);
    }
    set_has_ussd();
    entry_.ussd_ = ussd;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.ussd)
}
InboundMessageBody::InboundMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.InboundMessageBody)
}
InboundMessageBody::InboundMessageBody(const InboundMessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entry();
  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case kLocation: {
      _internal_mutable_location()->::com::elarian::hera::proto::LocationMessageBody::MergeFrom(from._internal_location());
      break;
    }
    case kEmail: {
      _internal_mutable_email()->::com::elarian::hera::proto::EmailMessageBody::MergeFrom(from._internal_email());
      break;
    }
    case kVoice: {
      _internal_mutable_voice()->::com::elarian::hera::proto::VoiceCallInputMessageBody::MergeFrom(from._internal_voice());
      break;
    }
    case kUssd: {
      _internal_mutable_ussd()->::com::elarian::hera::proto::UssdInputMessageBody::MergeFrom(from._internal_ussd());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.InboundMessageBody)
}

void InboundMessageBody::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InboundMessageBody_messaging_5fmodel_2eproto.base);
  clear_has_entry();
}

InboundMessageBody::~InboundMessageBody() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.InboundMessageBody)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InboundMessageBody::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entry()) {
    clear_entry();
  }
}

void InboundMessageBody::ArenaDtor(void* object) {
  InboundMessageBody* _this = reinterpret_cast< InboundMessageBody* >(object);
  (void)_this;
}
void InboundMessageBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InboundMessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InboundMessageBody& InboundMessageBody::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InboundMessageBody_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void InboundMessageBody::clear_entry() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.InboundMessageBody)
  switch (entry_case()) {
    case kText: {
      entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kMedia: {
      if (GetArena() == nullptr) {
        delete entry_.media_;
      }
      break;
    }
    case kLocation: {
      if (GetArena() == nullptr) {
        delete entry_.location_;
      }
      break;
    }
    case kEmail: {
      if (GetArena() == nullptr) {
        delete entry_.email_;
      }
      break;
    }
    case kVoice: {
      if (GetArena() == nullptr) {
        delete entry_.voice_;
      }
      break;
    }
    case kUssd: {
      if (GetArena() == nullptr) {
        delete entry_.ussd_;
      }
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTRY_NOT_SET;
}


void InboundMessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.InboundMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entry();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InboundMessageBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.InboundMessageBody.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.MediaMessageBody media = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_media(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.LocationMessageBody location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.EmailMessageBody email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_email(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.VoiceCallInputMessageBody voice = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.UssdInputMessageBody ussd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_ussd(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InboundMessageBody::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.InboundMessageBody)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.InboundMessageBody.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .com.elarian.hera.proto.MediaMessageBody media = 2;
  if (_internal_has_media()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::media(this), target, stream);
  }

  // .com.elarian.hera.proto.LocationMessageBody location = 3;
  if (_internal_has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::location(this), target, stream);
  }

  // .com.elarian.hera.proto.EmailMessageBody email = 4;
  if (_internal_has_email()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::email(this), target, stream);
  }

  // .com.elarian.hera.proto.VoiceCallInputMessageBody voice = 5;
  if (_internal_has_voice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::voice(this), target, stream);
  }

  // .com.elarian.hera.proto.UssdInputMessageBody ussd = 6;
  if (_internal_has_ussd()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::ussd(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.InboundMessageBody)
  return target;
}

size_t InboundMessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.InboundMessageBody)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entry_case()) {
    // string text = 1;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    // .com.elarian.hera.proto.MediaMessageBody media = 2;
    case kMedia: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.media_);
      break;
    }
    // .com.elarian.hera.proto.LocationMessageBody location = 3;
    case kLocation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.location_);
      break;
    }
    // .com.elarian.hera.proto.EmailMessageBody email = 4;
    case kEmail: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.email_);
      break;
    }
    // .com.elarian.hera.proto.VoiceCallInputMessageBody voice = 5;
    case kVoice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.voice_);
      break;
    }
    // .com.elarian.hera.proto.UssdInputMessageBody ussd = 6;
    case kUssd: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entry_.ussd_);
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InboundMessageBody::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.InboundMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const InboundMessageBody* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InboundMessageBody>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.InboundMessageBody)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.InboundMessageBody)
    MergeFrom(*source);
  }
}

void InboundMessageBody::MergeFrom(const InboundMessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.InboundMessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entry_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case kMedia: {
      _internal_mutable_media()->::com::elarian::hera::proto::MediaMessageBody::MergeFrom(from._internal_media());
      break;
    }
    case kLocation: {
      _internal_mutable_location()->::com::elarian::hera::proto::LocationMessageBody::MergeFrom(from._internal_location());
      break;
    }
    case kEmail: {
      _internal_mutable_email()->::com::elarian::hera::proto::EmailMessageBody::MergeFrom(from._internal_email());
      break;
    }
    case kVoice: {
      _internal_mutable_voice()->::com::elarian::hera::proto::VoiceCallInputMessageBody::MergeFrom(from._internal_voice());
      break;
    }
    case kUssd: {
      _internal_mutable_ussd()->::com::elarian::hera::proto::UssdInputMessageBody::MergeFrom(from._internal_ussd());
      break;
    }
    case ENTRY_NOT_SET: {
      break;
    }
  }
}

void InboundMessageBody::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.InboundMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InboundMessageBody::CopyFrom(const InboundMessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.InboundMessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InboundMessageBody::IsInitialized() const {
  return true;
}

void InboundMessageBody::InternalSwap(InboundMessageBody* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entry_, other->entry_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InboundMessageBody::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutboundMessageReplyPrompt::_Internal {
 public:
};

OutboundMessageReplyPrompt::OutboundMessageReplyPrompt(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  menu_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.OutboundMessageReplyPrompt)
}
OutboundMessageReplyPrompt::OutboundMessageReplyPrompt(const OutboundMessageReplyPrompt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      menu_(from.menu_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.OutboundMessageReplyPrompt)
}

void OutboundMessageReplyPrompt::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto.base);
  action_ = 0;
}

OutboundMessageReplyPrompt::~OutboundMessageReplyPrompt() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutboundMessageReplyPrompt::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OutboundMessageReplyPrompt::ArenaDtor(void* object) {
  OutboundMessageReplyPrompt* _this = reinterpret_cast< OutboundMessageReplyPrompt* >(object);
  (void)_this;
}
void OutboundMessageReplyPrompt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutboundMessageReplyPrompt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutboundMessageReplyPrompt& OutboundMessageReplyPrompt::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutboundMessageReplyPrompt_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void OutboundMessageReplyPrompt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  menu_.Clear();
  action_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutboundMessageReplyPrompt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.PromptMessageReplyAction action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_action(static_cast<::com::elarian::hera::proto::PromptMessageReplyAction>(val));
        } else goto handle_unusual;
        continue;
      // repeated .com.elarian.hera.proto.PromptMessageMenuItemBody menu = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_menu(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutboundMessageReplyPrompt::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.PromptMessageReplyAction action = 1;
  if (this->action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_action(), target);
  }

  // repeated .com.elarian.hera.proto.PromptMessageMenuItemBody menu = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_menu_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_menu(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  return target;
}

size_t OutboundMessageReplyPrompt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.elarian.hera.proto.PromptMessageMenuItemBody menu = 2;
  total_size += 1UL * this->_internal_menu_size();
  for (const auto& msg : this->menu_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .com.elarian.hera.proto.PromptMessageReplyAction action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutboundMessageReplyPrompt::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  GOOGLE_DCHECK_NE(&from, this);
  const OutboundMessageReplyPrompt* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutboundMessageReplyPrompt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.OutboundMessageReplyPrompt)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.OutboundMessageReplyPrompt)
    MergeFrom(*source);
  }
}

void OutboundMessageReplyPrompt::MergeFrom(const OutboundMessageReplyPrompt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  menu_.MergeFrom(from.menu_);
  if (from.action() != 0) {
    _internal_set_action(from._internal_action());
  }
}

void OutboundMessageReplyPrompt::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutboundMessageReplyPrompt::CopyFrom(const OutboundMessageReplyPrompt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.OutboundMessageReplyPrompt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutboundMessageReplyPrompt::IsInitialized() const {
  return true;
}

void OutboundMessageReplyPrompt::InternalSwap(OutboundMessageReplyPrompt* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  menu_.InternalSwap(&other->menu_);
  swap(action_, other->action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutboundMessageReplyPrompt::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class OutboundMessage::_Internal {
 public:
  static const ::com::elarian::hera::proto::OutboundMessageBody& body(const OutboundMessage* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& provider_tag(const OutboundMessage* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& reply_token(const OutboundMessage* msg);
  static const ::com::elarian::hera::proto::OutboundMessageReplyPrompt& reply_prompt(const OutboundMessage* msg);
};

const ::com::elarian::hera::proto::OutboundMessageBody&
OutboundMessage::_Internal::body(const OutboundMessage* msg) {
  return *msg->body_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
OutboundMessage::_Internal::provider_tag(const OutboundMessage* msg) {
  return *msg->provider_tag_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
OutboundMessage::_Internal::reply_token(const OutboundMessage* msg) {
  return *msg->reply_token_;
}
const ::com::elarian::hera::proto::OutboundMessageReplyPrompt&
OutboundMessage::_Internal::reply_prompt(const OutboundMessage* msg) {
  return *msg->reply_prompt_;
}
void OutboundMessage::clear_provider_tag() {
  if (GetArena() == nullptr && provider_tag_ != nullptr) {
    delete provider_tag_;
  }
  provider_tag_ = nullptr;
}
void OutboundMessage::clear_reply_token() {
  if (GetArena() == nullptr && reply_token_ != nullptr) {
    delete reply_token_;
  }
  reply_token_ = nullptr;
}
OutboundMessage::OutboundMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.OutboundMessage)
}
OutboundMessage::OutboundMessage(const OutboundMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_body()) {
    body_ = new ::com::elarian::hera::proto::OutboundMessageBody(*from.body_);
  } else {
    body_ = nullptr;
  }
  if (from._internal_has_provider_tag()) {
    provider_tag_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.provider_tag_);
  } else {
    provider_tag_ = nullptr;
  }
  if (from._internal_has_reply_token()) {
    reply_token_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.reply_token_);
  } else {
    reply_token_ = nullptr;
  }
  if (from._internal_has_reply_prompt()) {
    reply_prompt_ = new ::com::elarian::hera::proto::OutboundMessageReplyPrompt(*from.reply_prompt_);
  } else {
    reply_prompt_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.OutboundMessage)
}

void OutboundMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutboundMessage_messaging_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&body_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&reply_prompt_) -
      reinterpret_cast<char*>(&body_)) + sizeof(reply_prompt_));
}

OutboundMessage::~OutboundMessage() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.OutboundMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OutboundMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete body_;
  if (this != internal_default_instance()) delete provider_tag_;
  if (this != internal_default_instance()) delete reply_token_;
  if (this != internal_default_instance()) delete reply_prompt_;
}

void OutboundMessage::ArenaDtor(void* object) {
  OutboundMessage* _this = reinterpret_cast< OutboundMessage* >(object);
  (void)_this;
}
void OutboundMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OutboundMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutboundMessage& OutboundMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutboundMessage_messaging_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void OutboundMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.OutboundMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
  if (GetArena() == nullptr && provider_tag_ != nullptr) {
    delete provider_tag_;
  }
  provider_tag_ = nullptr;
  if (GetArena() == nullptr && reply_token_ != nullptr) {
    delete reply_token_;
  }
  reply_token_ = nullptr;
  if (GetArena() == nullptr && reply_prompt_ != nullptr) {
    delete reply_prompt_;
  }
  reply_prompt_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OutboundMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.OutboundMessageBody body = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string labels = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.OutboundMessage.labels"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue provider_tag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_provider_tag(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue reply_token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.OutboundMessageReplyPrompt reply_prompt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_reply_prompt(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutboundMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.OutboundMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.OutboundMessageBody body = 1;
  if (this->has_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::body(this), target, stream);
  }

  // repeated string labels = 2;
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.OutboundMessage.labels");
    target = stream->WriteString(2, s, target);
  }

  // .google.protobuf.StringValue provider_tag = 3;
  if (this->has_provider_tag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::provider_tag(this), target, stream);
  }

  // .google.protobuf.StringValue reply_token = 4;
  if (this->has_reply_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::reply_token(this), target, stream);
  }

  // .com.elarian.hera.proto.OutboundMessageReplyPrompt reply_prompt = 5;
  if (this->has_reply_prompt()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::reply_prompt(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.OutboundMessage)
  return target;
}

size_t OutboundMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.OutboundMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string labels = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(labels_.size());
  for (int i = 0, n = labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      labels_.Get(i));
  }

  // .com.elarian.hera.proto.OutboundMessageBody body = 1;
  if (this->has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // .google.protobuf.StringValue provider_tag = 3;
  if (this->has_provider_tag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *provider_tag_);
  }

  // .google.protobuf.StringValue reply_token = 4;
  if (this->has_reply_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_token_);
  }

  // .com.elarian.hera.proto.OutboundMessageReplyPrompt reply_prompt = 5;
  if (this->has_reply_prompt()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reply_prompt_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutboundMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.OutboundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OutboundMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutboundMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.OutboundMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.OutboundMessage)
    MergeFrom(*source);
  }
}

void OutboundMessage::MergeFrom(const OutboundMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.OutboundMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.has_body()) {
    _internal_mutable_body()->::com::elarian::hera::proto::OutboundMessageBody::MergeFrom(from._internal_body());
  }
  if (from.has_provider_tag()) {
    _internal_mutable_provider_tag()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_provider_tag());
  }
  if (from.has_reply_token()) {
    _internal_mutable_reply_token()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_reply_token());
  }
  if (from.has_reply_prompt()) {
    _internal_mutable_reply_prompt()->::com::elarian::hera::proto::OutboundMessageReplyPrompt::MergeFrom(from._internal_reply_prompt());
  }
}

void OutboundMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.OutboundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutboundMessage::CopyFrom(const OutboundMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.OutboundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutboundMessage::IsInitialized() const {
  return true;
}

void OutboundMessage::InternalSwap(OutboundMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  labels_.InternalSwap(&other->labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OutboundMessage, reply_prompt_)
      + sizeof(OutboundMessage::reply_prompt_)
      - PROTOBUF_FIELD_OFFSET(OutboundMessage, body_)>(
          reinterpret_cast<char*>(&body_),
          reinterpret_cast<char*>(&other->body_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OutboundMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::MessagingChannelNumber* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::MessagingChannelNumber >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::MessagingChannelNumber >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::MediaMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::MediaMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::MediaMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::LocationMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::LocationMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::LocationMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::EmailMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::EmailMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::EmailMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::TemplateMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::TemplateMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::TemplateMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::SayCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::SayCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::SayCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PlayCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PlayCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PlayCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::GetDigitsCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::GetDigitsCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::GetDigitsCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::GetRecordingCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::GetRecordingCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::GetRecordingCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::RecordSessionCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::RecordSessionCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::RecordSessionCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::DialCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::DialCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::DialCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::EnqueueCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::EnqueueCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::EnqueueCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::DequeueCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::DequeueCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::DequeueCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::RejectCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::RejectCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::RejectCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::RedirectCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::RedirectCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::RedirectCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::VoiceCallAction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::VoiceCallAction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallDialplanMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::VoiceCallDialplanMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::VoiceCallDialInput* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallDialInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::VoiceCallDialInput >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::VoiceCallQueueInput* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallQueueInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::VoiceCallQueueInput >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::VoiceCallInputMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallInputMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::VoiceCallInputMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::UssdInputMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::UssdInputMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::UssdInputMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::UssdMenuMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::UssdMenuMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::UssdMenuMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::OutboundMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::OutboundMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::OutboundMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PromptMessageMenuItemBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PromptMessageMenuItemBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PromptMessageMenuItemBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::InboundMessageBody* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::InboundMessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::InboundMessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::OutboundMessageReplyPrompt* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::OutboundMessageReplyPrompt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::OutboundMessageReplyPrompt >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::OutboundMessage* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::OutboundMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::OutboundMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
