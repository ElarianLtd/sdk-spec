// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payment_model.proto

#include "payment_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cash_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CustomerNumber_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentChannelNumber_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PaymentCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_payment_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class PaymentChannelNumberDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentChannelNumber> _instance;
} _PaymentChannelNumber_default_instance_;
class PendingPaymentTransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PendingPaymentTransaction> _instance;
} _PendingPaymentTransaction_default_instance_;
class PaymentBalance_PendingEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentBalance_PendingEntry_DoNotUse> _instance;
} _PaymentBalance_PendingEntry_DoNotUse_default_instance_;
class PaymentBalanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentBalance> _instance;
} _PaymentBalance_default_instance_;
class PaymentPurseCounterPartyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentPurseCounterParty> _instance;
} _PaymentPurseCounterParty_default_instance_;
class PaymentWalletCounterPartyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentWalletCounterParty> _instance;
} _PaymentWalletCounterParty_default_instance_;
class PaymentCustomerCounterPartyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentCustomerCounterParty> _instance;
} _PaymentCustomerCounterParty_default_instance_;
class PaymentChannelCounterPartyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentChannelCounterParty> _instance;
} _PaymentChannelCounterParty_default_instance_;
class PaymentCounterPartyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentCounterParty> _instance;
} _PaymentCounterParty_default_instance_;
class PaymentTransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PaymentTransaction> _instance;
} _PaymentTransaction_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_PaymentBalance_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentBalance_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentBalance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PaymentBalance_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PaymentBalance_payment_5fmodel_2eproto}, {
      &scc_info_Cash_common_5fmodel_2eproto.base,
      &scc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentBalance_PendingEntry_DoNotUse_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto}, {
      &scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentChannelCounterParty_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentChannelCounterParty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_PaymentChannelNumber_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentChannelNumber_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentChannelNumber();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentChannelNumber_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PaymentChannelNumber_payment_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_PaymentCounterParty_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentCounterParty_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentCounterParty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PaymentCounterParty_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_PaymentCounterParty_payment_5fmodel_2eproto}, {
      &scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentCustomerCounterParty_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentCustomerCounterParty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto}, {
      &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
      &scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base,}};

static void InitDefaultsscc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentPurseCounterParty_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentPurseCounterParty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_PaymentTransaction_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentTransaction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentTransaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PaymentTransaction_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_PaymentTransaction_payment_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_PaymentCounterParty_payment_5fmodel_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PaymentWalletCounterParty_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PaymentWalletCounterParty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_PendingPaymentTransaction_payment_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_PendingPaymentTransaction_default_instance_;
    new (ptr) ::com::elarian::hera::proto::PendingPaymentTransaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PendingPaymentTransaction_payment_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Cash_common_5fmodel_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_payment_5fmodel_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_payment_5fmodel_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_payment_5fmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_payment_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelNumber, channel_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelNumber, number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PendingPaymentTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PendingPaymentTransaction, created_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PendingPaymentTransaction, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PendingPaymentTransaction, converted_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, currency_code_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, available_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, actual_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, pending_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentBalance, sequence_nr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentPurseCounterParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentPurseCounterParty, purse_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentWalletCounterParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentWalletCounterParty, customer_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentWalletCounterParty, wallet_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCustomerCounterParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCustomerCounterParty, customer_number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCustomerCounterParty, channel_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, channel_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, channel_code_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, source_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, destination_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentChannelCounterParty, account_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCounterParty, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCounterParty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentCounterParty, party_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, app_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, debit_party_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, credit_party_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, value_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, status_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, created_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, updated_at_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, provider_transaction_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, narration_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::PaymentTransaction, description_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::PaymentChannelNumber)},
  { 7, -1, sizeof(::com::elarian::hera::proto::PendingPaymentTransaction)},
  { 15, 22, sizeof(::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse)},
  { 24, -1, sizeof(::com::elarian::hera::proto::PaymentBalance)},
  { 34, -1, sizeof(::com::elarian::hera::proto::PaymentPurseCounterParty)},
  { 40, -1, sizeof(::com::elarian::hera::proto::PaymentWalletCounterParty)},
  { 47, -1, sizeof(::com::elarian::hera::proto::PaymentCustomerCounterParty)},
  { 54, -1, sizeof(::com::elarian::hera::proto::PaymentChannelCounterParty)},
  { 64, -1, sizeof(::com::elarian::hera::proto::PaymentCounterParty)},
  { 74, -1, sizeof(::com::elarian::hera::proto::PaymentTransaction)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentChannelNumber_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PendingPaymentTransaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentBalance_PendingEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentBalance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentPurseCounterParty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentWalletCounterParty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentCustomerCounterParty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentChannelCounterParty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentCounterParty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_PaymentTransaction_default_instance_),
};

const char descriptor_table_protodef_payment_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023payment_model.proto\022\026com.elarian.hera."
  "proto\032\036google/protobuf/wrappers.proto\032\037g"
  "oogle/protobuf/timestamp.proto\032\022common_m"
  "odel.proto\"_\n\024PaymentChannelNumber\0227\n\007ch"
  "annel\030\001 \001(\0162&.com.elarian.hera.proto.Pay"
  "mentChannel\022\016\n\006number\030\002 \001(\t\"\251\001\n\031PendingP"
  "aymentTransaction\022.\n\ncreated_at\030\001 \001(\0132\032."
  "google.protobuf.Timestamp\022+\n\005value\030\002 \001(\013"
  "2\034.com.elarian.hera.proto.Cash\022/\n\tconver"
  "ted\030\003 \001(\0132\034.com.elarian.hera.proto.Cash\""
  "\304\002\n\016PaymentBalance\022\025\n\rcurrency_code\030\001 \001("
  "\t\022/\n\tavailable\030\002 \001(\0132\034.com.elarian.hera."
  "proto.Cash\022,\n\006actual\030\003 \001(\0132\034.com.elarian"
  ".hera.proto.Cash\022D\n\007pending\030\004 \003(\01323.com."
  "elarian.hera.proto.PaymentBalance.Pendin"
  "gEntry\022\023\n\013sequence_nr\030\005 \001(\003\032a\n\014PendingEn"
  "try\022\013\n\003key\030\001 \001(\t\022@\n\005value\030\002 \001(\01321.com.el"
  "arian.hera.proto.PendingPaymentTransacti"
  "on:\0028\001\",\n\030PaymentPurseCounterParty\022\020\n\010pu"
  "rse_id\030\001 \001(\t\"C\n\031PaymentWalletCounterPart"
  "y\022\023\n\013customer_id\030\001 \001(\t\022\021\n\twallet_id\030\002 \001("
  "\t\"\244\001\n\033PaymentCustomerCounterParty\022\?\n\017cus"
  "tomer_number\030\001 \001(\0132&.com.elarian.hera.pr"
  "oto.CustomerNumber\022D\n\016channel_number\030\002 \001"
  "(\0132,.com.elarian.hera.proto.PaymentChann"
  "elNumber\"\277\001\n\032PaymentChannelCounterParty\022"
  "7\n\007channel\030\001 \001(\0162&.com.elarian.hera.prot"
  "o.PaymentChannel\022\024\n\014channel_code\030\002 \001(\005\022\016"
  "\n\006source\030\003 \001(\t\022\023\n\013destination\030\004 \001(\t\022-\n\007a"
  "ccount\030\005 \001(\0132\034.google.protobuf.StringVal"
  "ue\"\266\002\n\023PaymentCounterParty\022A\n\005purse\030\001 \001("
  "\01320.com.elarian.hera.proto.PaymentPurseC"
  "ounterPartyH\000\022C\n\006wallet\030\002 \001(\01321.com.elar"
  "ian.hera.proto.PaymentWalletCounterParty"
  "H\000\022G\n\010customer\030\003 \001(\01323.com.elarian.hera."
  "proto.PaymentCustomerCounterPartyH\000\022E\n\007c"
  "hannel\030\004 \001(\01322.com.elarian.hera.proto.Pa"
  "ymentChannelCounterPartyH\000B\007\n\005party\"\306\004\n\022"
  "PaymentTransaction\022\026\n\016transaction_id\030\001 \001"
  "(\t\022,\n\006app_id\030\002 \001(\0132\034.google.protobuf.Str"
  "ingValue\022@\n\013debit_party\030\004 \001(\0132+.com.elar"
  "ian.hera.proto.PaymentCounterParty\022A\n\014cr"
  "edit_party\030\005 \001(\0132+.com.elarian.hera.prot"
  "o.PaymentCounterParty\022+\n\005value\030\006 \001(\0132\034.c"
  "om.elarian.hera.proto.Cash\0225\n\006status\030\007 \001"
  "(\0162%.com.elarian.hera.proto.PaymentStatu"
  "s\022.\n\ncreated_at\030\010 \001(\0132\032.google.protobuf."
  "Timestamp\022.\n\nupdated_at\030\t \001(\0132\032.google.p"
  "rotobuf.Timestamp\022=\n\027provider_transactio"
  "n_id\030\n \001(\0132\034.google.protobuf.StringValue"
  "\022/\n\tnarration\030\013 \001(\0132\034.google.protobuf.St"
  "ringValue\0221\n\013description\030\014 \001(\0132\034.google."
  "protobuf.StringValue*l\n\016PaymentChannel\022\037"
  "\n\033PAYMENT_CHANNEL_UNSPECIFIED\020\000\022\034\n\030PAYME"
  "NT_CHANNEL_CELLULAR\020\001\022\033\n\027PAYMENT_CHANNEL"
  "_AIRTIME\020\002*\225\006\n\rPaymentStatus\022\036\n\032PAYMENT_"
  "STATUS_UNSPECIFIED\020\000\022\031\n\025PAYMENT_STATUS_Q"
  "UEUED\020d\022\'\n#PAYMENT_STATUS_PENDING_CONFIR"
  "MATION\020e\022%\n!PAYMENT_STATUS_PENDING_VALID"
  "ATION\020f\022\034\n\030PAYMENT_STATUS_VALIDATED\020g\022#\n"
  "\036PAYMENT_STATUS_INVALID_REQUEST\020\310\001\022!\n\034PA"
  "YMENT_STATUS_NOT_SUPPORTED\020\311\001\022&\n!PAYMENT"
  "_STATUS_INSUFFICIENT_FUNDS\020\312\001\022%\n PAYMENT"
  "_STATUS_APPLICATION_ERROR\020\313\001\022\037\n\032PAYMENT_"
  "STATUS_NOT_ALLOWED\020\314\001\022%\n PAYMENT_STATUS_"
  "DUPLICATE_REQUEST\020\315\001\022!\n\034PAYMENT_STATUS_I"
  "NVALID_PURSE\020\316\001\022)\n$PAYMENT_STATUS_INVALI"
  "D_COUNTER_PARTY\020\317\001\022*\n%PAYMENT_STATUS_INV"
  "ALID_CHANNEL_NUMBER\020\320\001\022!\n\034PAYMENT_STATUS"
  "_GATEWAY_ERROR\020\321\001\022.\n)PAYMENT_STATUS_DECO"
  "MMISSIONED_CUSTOMER_ID\020\253\002\022\033\n\026PAYMENT_STA"
  "TUS_SUCCESS\020\254\002\022\032\n\025PAYMENT_STATUS_FAILED\020"
  "\220\003\022\035\n\030PAYMENT_STATUS_THROTTLED\020\221\003\022\033\n\026PAY"
  "MENT_STATUS_EXPIRED\020\222\003\022\034\n\027PAYMENT_STATUS"
  "_REJECTED\020\223\003\022\034\n\027PAYMENT_STATUS_REVERSED\020"
  "\364\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_payment_5fmodel_2eproto_deps[3] = {
  &::descriptor_table_common_5fmodel_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_payment_5fmodel_2eproto_sccs[10] = {
  &scc_info_PaymentBalance_payment_5fmodel_2eproto.base,
  &scc_info_PaymentBalance_PendingEntry_DoNotUse_payment_5fmodel_2eproto.base,
  &scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto.base,
  &scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base,
  &scc_info_PaymentCounterParty_payment_5fmodel_2eproto.base,
  &scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto.base,
  &scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base,
  &scc_info_PaymentTransaction_payment_5fmodel_2eproto.base,
  &scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base,
  &scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_payment_5fmodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_payment_5fmodel_2eproto = {
  false, false, descriptor_table_protodef_payment_5fmodel_2eproto, "payment_model.proto", 3010,
  &descriptor_table_payment_5fmodel_2eproto_once, descriptor_table_payment_5fmodel_2eproto_sccs, descriptor_table_payment_5fmodel_2eproto_deps, 10, 3,
  schemas, file_default_instances, TableStruct_payment_5fmodel_2eproto::offsets,
  file_level_metadata_payment_5fmodel_2eproto, 10, file_level_enum_descriptors_payment_5fmodel_2eproto, file_level_service_descriptors_payment_5fmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_payment_5fmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_payment_5fmodel_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PaymentChannel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_payment_5fmodel_2eproto);
  return file_level_enum_descriptors_payment_5fmodel_2eproto[0];
}
bool PaymentChannel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PaymentStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_payment_5fmodel_2eproto);
  return file_level_enum_descriptors_payment_5fmodel_2eproto[1];
}
bool PaymentStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 299:
    case 300:
    case 400:
    case 401:
    case 402:
    case 403:
    case 500:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PaymentChannelNumber::_Internal {
 public:
};

PaymentChannelNumber::PaymentChannelNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentChannelNumber)
}
PaymentChannelNumber::PaymentChannelNumber(const PaymentChannelNumber& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_number().empty()) {
    number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_number(), 
      GetArena());
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentChannelNumber)
}

void PaymentChannelNumber::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

PaymentChannelNumber::~PaymentChannelNumber() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentChannelNumber)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentChannelNumber::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentChannelNumber::ArenaDtor(void* object) {
  PaymentChannelNumber* _this = reinterpret_cast< PaymentChannelNumber* >(object);
  (void)_this;
}
void PaymentChannelNumber::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentChannelNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentChannelNumber& PaymentChannelNumber::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentChannelNumber_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentChannelNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentChannelNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_.ClearToEmpty();
  channel_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentChannelNumber::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.PaymentChannel channel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::com::elarian::hera::proto::PaymentChannel>(val));
        } else goto handle_unusual;
        continue;
      // string number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentChannelNumber.number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentChannelNumber::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentChannelNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.PaymentChannel channel = 1;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_channel(), target);
  }

  // string number = 2;
  if (this->number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentChannelNumber.number");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentChannelNumber)
  return target;
}

size_t PaymentChannelNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentChannelNumber)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string number = 2;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number());
  }

  // .com.elarian.hera.proto.PaymentChannel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentChannelNumber::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentChannelNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentChannelNumber* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentChannelNumber>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentChannelNumber)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentChannelNumber)
    MergeFrom(*source);
  }
}

void PaymentChannelNumber::MergeFrom(const PaymentChannelNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentChannelNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number().size() > 0) {
    _internal_set_number(from._internal_number());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void PaymentChannelNumber::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentChannelNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentChannelNumber::CopyFrom(const PaymentChannelNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentChannelNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentChannelNumber::IsInitialized() const {
  return true;
}

void PaymentChannelNumber::InternalSwap(PaymentChannelNumber* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  number_.Swap(&other->number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(channel_, other->channel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentChannelNumber::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PendingPaymentTransaction::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const PendingPaymentTransaction* msg);
  static const ::com::elarian::hera::proto::Cash& value(const PendingPaymentTransaction* msg);
  static const ::com::elarian::hera::proto::Cash& converted(const PendingPaymentTransaction* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
PendingPaymentTransaction::_Internal::created_at(const PendingPaymentTransaction* msg) {
  return *msg->created_at_;
}
const ::com::elarian::hera::proto::Cash&
PendingPaymentTransaction::_Internal::value(const PendingPaymentTransaction* msg) {
  return *msg->value_;
}
const ::com::elarian::hera::proto::Cash&
PendingPaymentTransaction::_Internal::converted(const PendingPaymentTransaction* msg) {
  return *msg->converted_;
}
void PendingPaymentTransaction::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void PendingPaymentTransaction::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
void PendingPaymentTransaction::clear_converted() {
  if (GetArena() == nullptr && converted_ != nullptr) {
    delete converted_;
  }
  converted_ = nullptr;
}
PendingPaymentTransaction::PendingPaymentTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PendingPaymentTransaction)
}
PendingPaymentTransaction::PendingPaymentTransaction(const PendingPaymentTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  if (from._internal_has_converted()) {
    converted_ = new ::com::elarian::hera::proto::Cash(*from.converted_);
  } else {
    converted_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PendingPaymentTransaction)
}

void PendingPaymentTransaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&converted_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(converted_));
}

PendingPaymentTransaction::~PendingPaymentTransaction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PendingPaymentTransaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PendingPaymentTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete converted_;
}

void PendingPaymentTransaction::ArenaDtor(void* object) {
  PendingPaymentTransaction* _this = reinterpret_cast< PendingPaymentTransaction* >(object);
  (void)_this;
}
void PendingPaymentTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PendingPaymentTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PendingPaymentTransaction& PendingPaymentTransaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PendingPaymentTransaction_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PendingPaymentTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PendingPaymentTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  if (GetArena() == nullptr && converted_ != nullptr) {
    delete converted_;
  }
  converted_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PendingPaymentTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp created_at = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash converted = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_converted(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PendingPaymentTransaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PendingPaymentTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp created_at = 1;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::created_at(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash converted = 3;
  if (this->has_converted()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::converted(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PendingPaymentTransaction)
  return target;
}

size_t PendingPaymentTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PendingPaymentTransaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp created_at = 1;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .com.elarian.hera.proto.Cash value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .com.elarian.hera.proto.Cash converted = 3;
  if (this->has_converted()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *converted_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PendingPaymentTransaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PendingPaymentTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const PendingPaymentTransaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PendingPaymentTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PendingPaymentTransaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PendingPaymentTransaction)
    MergeFrom(*source);
  }
}

void PendingPaymentTransaction::MergeFrom(const PendingPaymentTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PendingPaymentTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  if (from.has_converted()) {
    _internal_mutable_converted()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_converted());
  }
}

void PendingPaymentTransaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PendingPaymentTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PendingPaymentTransaction::CopyFrom(const PendingPaymentTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PendingPaymentTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PendingPaymentTransaction::IsInitialized() const {
  return true;
}

void PendingPaymentTransaction::InternalSwap(PendingPaymentTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PendingPaymentTransaction, converted_)
      + sizeof(PendingPaymentTransaction::converted_)
      - PROTOBUF_FIELD_OFFSET(PendingPaymentTransaction, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PendingPaymentTransaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PaymentBalance_PendingEntry_DoNotUse::PaymentBalance_PendingEntry_DoNotUse() {}
PaymentBalance_PendingEntry_DoNotUse::PaymentBalance_PendingEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PaymentBalance_PendingEntry_DoNotUse::MergeFrom(const PaymentBalance_PendingEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalance_PendingEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void PaymentBalance_PendingEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class PaymentBalance::_Internal {
 public:
  static const ::com::elarian::hera::proto::Cash& available(const PaymentBalance* msg);
  static const ::com::elarian::hera::proto::Cash& actual(const PaymentBalance* msg);
};

const ::com::elarian::hera::proto::Cash&
PaymentBalance::_Internal::available(const PaymentBalance* msg) {
  return *msg->available_;
}
const ::com::elarian::hera::proto::Cash&
PaymentBalance::_Internal::actual(const PaymentBalance* msg) {
  return *msg->actual_;
}
void PaymentBalance::clear_available() {
  if (GetArena() == nullptr && available_ != nullptr) {
    delete available_;
  }
  available_ = nullptr;
}
void PaymentBalance::clear_actual() {
  if (GetArena() == nullptr && actual_ != nullptr) {
    delete actual_;
  }
  actual_ = nullptr;
}
PaymentBalance::PaymentBalance(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pending_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentBalance)
}
PaymentBalance::PaymentBalance(const PaymentBalance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pending_.MergeFrom(from.pending_);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency_code().empty()) {
    currency_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency_code(), 
      GetArena());
  }
  if (from._internal_has_available()) {
    available_ = new ::com::elarian::hera::proto::Cash(*from.available_);
  } else {
    available_ = nullptr;
  }
  if (from._internal_has_actual()) {
    actual_ = new ::com::elarian::hera::proto::Cash(*from.actual_);
  } else {
    actual_ = nullptr;
  }
  sequence_nr_ = from.sequence_nr_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentBalance)
}

void PaymentBalance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentBalance_payment_5fmodel_2eproto.base);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&available_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sequence_nr_) -
      reinterpret_cast<char*>(&available_)) + sizeof(sequence_nr_));
}

PaymentBalance::~PaymentBalance() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentBalance)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentBalance::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currency_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete available_;
  if (this != internal_default_instance()) delete actual_;
}

void PaymentBalance::ArenaDtor(void* object) {
  PaymentBalance* _this = reinterpret_cast< PaymentBalance* >(object);
  (void)_this;
}
void PaymentBalance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentBalance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentBalance& PaymentBalance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentBalance_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentBalance::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentBalance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pending_.Clear();
  currency_code_.ClearToEmpty();
  if (GetArena() == nullptr && available_ != nullptr) {
    delete available_;
  }
  available_ = nullptr;
  if (GetArena() == nullptr && actual_ != nullptr) {
    delete actual_;
  }
  actual_ = nullptr;
  sequence_nr_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentBalance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string currency_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_currency_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentBalance.currency_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash available = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_available(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash actual = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_actual(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .com.elarian.hera.proto.PendingPaymentTransaction> pending = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&pending_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 sequence_nr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          sequence_nr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentBalance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentBalance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency_code().data(), static_cast<int>(this->_internal_currency_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentBalance.currency_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currency_code(), target);
  }

  // .com.elarian.hera.proto.Cash available = 2;
  if (this->has_available()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::available(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash actual = 3;
  if (this->has_actual()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::actual(this), target, stream);
  }

  // map<string, .com.elarian.hera.proto.PendingPaymentTransaction> pending = 4;
  if (!this->_internal_pending().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::PendingPaymentTransaction >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "com.elarian.hera.proto.PaymentBalance.PendingEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_pending().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_pending().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::PendingPaymentTransaction >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::PendingPaymentTransaction >::const_iterator
          it = this->_internal_pending().begin();
          it != this->_internal_pending().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = PaymentBalance_PendingEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::PendingPaymentTransaction >::const_iterator
          it = this->_internal_pending().begin();
          it != this->_internal_pending().end(); ++it) {
        target = PaymentBalance_PendingEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int64 sequence_nr = 5;
  if (this->sequence_nr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_sequence_nr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentBalance)
  return target;
}

size_t PaymentBalance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentBalance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .com.elarian.hera.proto.PendingPaymentTransaction> pending = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_pending_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::com::elarian::hera::proto::PendingPaymentTransaction >::const_iterator
      it = this->_internal_pending().begin();
      it != this->_internal_pending().end(); ++it) {
    total_size += PaymentBalance_PendingEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency_code());
  }

  // .com.elarian.hera.proto.Cash available = 2;
  if (this->has_available()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *available_);
  }

  // .com.elarian.hera.proto.Cash actual = 3;
  if (this->has_actual()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actual_);
  }

  // int64 sequence_nr = 5;
  if (this->sequence_nr() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sequence_nr());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentBalance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentBalance)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentBalance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentBalance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentBalance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentBalance)
    MergeFrom(*source);
  }
}

void PaymentBalance::MergeFrom(const PaymentBalance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentBalance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pending_.MergeFrom(from.pending_);
  if (from.currency_code().size() > 0) {
    _internal_set_currency_code(from._internal_currency_code());
  }
  if (from.has_available()) {
    _internal_mutable_available()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_available());
  }
  if (from.has_actual()) {
    _internal_mutable_actual()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_actual());
  }
  if (from.sequence_nr() != 0) {
    _internal_set_sequence_nr(from._internal_sequence_nr());
  }
}

void PaymentBalance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentBalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentBalance::CopyFrom(const PaymentBalance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentBalance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentBalance::IsInitialized() const {
  return true;
}

void PaymentBalance::InternalSwap(PaymentBalance* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pending_.Swap(&other->pending_);
  currency_code_.Swap(&other->currency_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentBalance, sequence_nr_)
      + sizeof(PaymentBalance::sequence_nr_)
      - PROTOBUF_FIELD_OFFSET(PaymentBalance, available_)>(
          reinterpret_cast<char*>(&available_),
          reinterpret_cast<char*>(&other->available_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentBalance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentPurseCounterParty::_Internal {
 public:
};

PaymentPurseCounterParty::PaymentPurseCounterParty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentPurseCounterParty)
}
PaymentPurseCounterParty::PaymentPurseCounterParty(const PaymentPurseCounterParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  purse_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_purse_id().empty()) {
    purse_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_purse_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentPurseCounterParty)
}

void PaymentPurseCounterParty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base);
  purse_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentPurseCounterParty::~PaymentPurseCounterParty() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentPurseCounterParty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentPurseCounterParty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  purse_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentPurseCounterParty::ArenaDtor(void* object) {
  PaymentPurseCounterParty* _this = reinterpret_cast< PaymentPurseCounterParty* >(object);
  (void)_this;
}
void PaymentPurseCounterParty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentPurseCounterParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentPurseCounterParty& PaymentPurseCounterParty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentPurseCounterParty_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentPurseCounterParty::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  purse_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentPurseCounterParty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string purse_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_purse_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentPurseCounterParty.purse_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentPurseCounterParty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string purse_id = 1;
  if (this->purse_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_purse_id().data(), static_cast<int>(this->_internal_purse_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentPurseCounterParty.purse_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_purse_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentPurseCounterParty)
  return target;
}

size_t PaymentPurseCounterParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string purse_id = 1;
  if (this->purse_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_purse_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentPurseCounterParty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentPurseCounterParty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentPurseCounterParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentPurseCounterParty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentPurseCounterParty)
    MergeFrom(*source);
  }
}

void PaymentPurseCounterParty::MergeFrom(const PaymentPurseCounterParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.purse_id().size() > 0) {
    _internal_set_purse_id(from._internal_purse_id());
  }
}

void PaymentPurseCounterParty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentPurseCounterParty::CopyFrom(const PaymentPurseCounterParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentPurseCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentPurseCounterParty::IsInitialized() const {
  return true;
}

void PaymentPurseCounterParty::InternalSwap(PaymentPurseCounterParty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  purse_id_.Swap(&other->purse_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentPurseCounterParty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentWalletCounterParty::_Internal {
 public:
};

PaymentWalletCounterParty::PaymentWalletCounterParty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentWalletCounterParty)
}
PaymentWalletCounterParty::PaymentWalletCounterParty(const PaymentWalletCounterParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_customer_id().empty()) {
    customer_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_customer_id(), 
      GetArena());
  }
  wallet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wallet_id().empty()) {
    wallet_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_wallet_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentWalletCounterParty)
}

void PaymentWalletCounterParty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base);
  customer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wallet_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PaymentWalletCounterParty::~PaymentWalletCounterParty() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentWalletCounterParty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentWalletCounterParty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  customer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wallet_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PaymentWalletCounterParty::ArenaDtor(void* object) {
  PaymentWalletCounterParty* _this = reinterpret_cast< PaymentWalletCounterParty* >(object);
  (void)_this;
}
void PaymentWalletCounterParty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentWalletCounterParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentWalletCounterParty& PaymentWalletCounterParty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentWalletCounterParty_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentWalletCounterParty::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  customer_id_.ClearToEmpty();
  wallet_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentWalletCounterParty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string customer_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_customer_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentWalletCounterParty.customer_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string wallet_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_wallet_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentWalletCounterParty.wallet_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentWalletCounterParty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string customer_id = 1;
  if (this->customer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_customer_id().data(), static_cast<int>(this->_internal_customer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentWalletCounterParty.customer_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_customer_id(), target);
  }

  // string wallet_id = 2;
  if (this->wallet_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wallet_id().data(), static_cast<int>(this->_internal_wallet_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentWalletCounterParty.wallet_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_wallet_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentWalletCounterParty)
  return target;
}

size_t PaymentWalletCounterParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string customer_id = 1;
  if (this->customer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_customer_id());
  }

  // string wallet_id = 2;
  if (this->wallet_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wallet_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentWalletCounterParty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentWalletCounterParty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentWalletCounterParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentWalletCounterParty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentWalletCounterParty)
    MergeFrom(*source);
  }
}

void PaymentWalletCounterParty::MergeFrom(const PaymentWalletCounterParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.customer_id().size() > 0) {
    _internal_set_customer_id(from._internal_customer_id());
  }
  if (from.wallet_id().size() > 0) {
    _internal_set_wallet_id(from._internal_wallet_id());
  }
}

void PaymentWalletCounterParty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentWalletCounterParty::CopyFrom(const PaymentWalletCounterParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentWalletCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentWalletCounterParty::IsInitialized() const {
  return true;
}

void PaymentWalletCounterParty::InternalSwap(PaymentWalletCounterParty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  customer_id_.Swap(&other->customer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wallet_id_.Swap(&other->wallet_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentWalletCounterParty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentCustomerCounterParty::_Internal {
 public:
  static const ::com::elarian::hera::proto::CustomerNumber& customer_number(const PaymentCustomerCounterParty* msg);
  static const ::com::elarian::hera::proto::PaymentChannelNumber& channel_number(const PaymentCustomerCounterParty* msg);
};

const ::com::elarian::hera::proto::CustomerNumber&
PaymentCustomerCounterParty::_Internal::customer_number(const PaymentCustomerCounterParty* msg) {
  return *msg->customer_number_;
}
const ::com::elarian::hera::proto::PaymentChannelNumber&
PaymentCustomerCounterParty::_Internal::channel_number(const PaymentCustomerCounterParty* msg) {
  return *msg->channel_number_;
}
void PaymentCustomerCounterParty::clear_customer_number() {
  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
}
PaymentCustomerCounterParty::PaymentCustomerCounterParty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentCustomerCounterParty)
}
PaymentCustomerCounterParty::PaymentCustomerCounterParty(const PaymentCustomerCounterParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_customer_number()) {
    customer_number_ = new ::com::elarian::hera::proto::CustomerNumber(*from.customer_number_);
  } else {
    customer_number_ = nullptr;
  }
  if (from._internal_has_channel_number()) {
    channel_number_ = new ::com::elarian::hera::proto::PaymentChannelNumber(*from.channel_number_);
  } else {
    channel_number_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentCustomerCounterParty)
}

void PaymentCustomerCounterParty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&customer_number_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_number_) -
      reinterpret_cast<char*>(&customer_number_)) + sizeof(channel_number_));
}

PaymentCustomerCounterParty::~PaymentCustomerCounterParty() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentCustomerCounterParty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentCustomerCounterParty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete customer_number_;
  if (this != internal_default_instance()) delete channel_number_;
}

void PaymentCustomerCounterParty::ArenaDtor(void* object) {
  PaymentCustomerCounterParty* _this = reinterpret_cast< PaymentCustomerCounterParty* >(object);
  (void)_this;
}
void PaymentCustomerCounterParty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentCustomerCounterParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentCustomerCounterParty& PaymentCustomerCounterParty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentCustomerCounterParty_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentCustomerCounterParty::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && customer_number_ != nullptr) {
    delete customer_number_;
  }
  customer_number_ = nullptr;
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentCustomerCounterParty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.CustomerNumber customer_number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentCustomerCounterParty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.CustomerNumber customer_number = 1;
  if (this->has_customer_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::customer_number(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::channel_number(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentCustomerCounterParty)
  return target;
}

size_t PaymentCustomerCounterParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.elarian.hera.proto.CustomerNumber customer_number = 1;
  if (this->has_customer_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *customer_number_);
  }

  // .com.elarian.hera.proto.PaymentChannelNumber channel_number = 2;
  if (this->has_channel_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *channel_number_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentCustomerCounterParty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentCustomerCounterParty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentCustomerCounterParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentCustomerCounterParty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentCustomerCounterParty)
    MergeFrom(*source);
  }
}

void PaymentCustomerCounterParty::MergeFrom(const PaymentCustomerCounterParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_customer_number()) {
    _internal_mutable_customer_number()->::com::elarian::hera::proto::CustomerNumber::MergeFrom(from._internal_customer_number());
  }
  if (from.has_channel_number()) {
    _internal_mutable_channel_number()->::com::elarian::hera::proto::PaymentChannelNumber::MergeFrom(from._internal_channel_number());
  }
}

void PaymentCustomerCounterParty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentCustomerCounterParty::CopyFrom(const PaymentCustomerCounterParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentCustomerCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentCustomerCounterParty::IsInitialized() const {
  return true;
}

void PaymentCustomerCounterParty::InternalSwap(PaymentCustomerCounterParty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentCustomerCounterParty, channel_number_)
      + sizeof(PaymentCustomerCounterParty::channel_number_)
      - PROTOBUF_FIELD_OFFSET(PaymentCustomerCounterParty, customer_number_)>(
          reinterpret_cast<char*>(&customer_number_),
          reinterpret_cast<char*>(&other->customer_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentCustomerCounterParty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentChannelCounterParty::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& account(const PaymentChannelCounterParty* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
PaymentChannelCounterParty::_Internal::account(const PaymentChannelCounterParty* msg) {
  return *msg->account_;
}
void PaymentChannelCounterParty::clear_account() {
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
}
PaymentChannelCounterParty::PaymentChannelCounterParty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentChannelCounterParty)
}
PaymentChannelCounterParty::PaymentChannelCounterParty(const PaymentChannelCounterParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source().empty()) {
    source_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source(), 
      GetArena());
  }
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destination().empty()) {
    destination_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destination(), 
      GetArena());
  }
  if (from._internal_has_account()) {
    account_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.account_);
  } else {
    account_ = nullptr;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_code_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(channel_code_));
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentChannelCounterParty)
}

void PaymentChannelCounterParty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto.base);
  source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&account_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&channel_code_) -
      reinterpret_cast<char*>(&account_)) + sizeof(channel_code_));
}

PaymentChannelCounterParty::~PaymentChannelCounterParty() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentChannelCounterParty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentChannelCounterParty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete account_;
}

void PaymentChannelCounterParty::ArenaDtor(void* object) {
  PaymentChannelCounterParty* _this = reinterpret_cast< PaymentChannelCounterParty* >(object);
  (void)_this;
}
void PaymentChannelCounterParty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentChannelCounterParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentChannelCounterParty& PaymentChannelCounterParty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentChannelCounterParty_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentChannelCounterParty::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_.ClearToEmpty();
  destination_.ClearToEmpty();
  if (GetArena() == nullptr && account_ != nullptr) {
    delete account_;
  }
  account_ = nullptr;
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_code_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(channel_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentChannelCounterParty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.PaymentChannel channel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_channel(static_cast<::com::elarian::hera::proto::PaymentChannel>(val));
        } else goto handle_unusual;
        continue;
      // int32 channel_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          channel_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_source();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentChannelCounterParty.source"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destination = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_destination();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentChannelCounterParty.destination"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue account = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_account(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentChannelCounterParty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.PaymentChannel channel = 1;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_channel(), target);
  }

  // int32 channel_code = 2;
  if (this->channel_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_channel_code(), target);
  }

  // string source = 3;
  if (this->source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source().data(), static_cast<int>(this->_internal_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentChannelCounterParty.source");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source(), target);
  }

  // string destination = 4;
  if (this->destination().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination().data(), static_cast<int>(this->_internal_destination().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentChannelCounterParty.destination");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_destination(), target);
  }

  // .google.protobuf.StringValue account = 5;
  if (this->has_account()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::account(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentChannelCounterParty)
  return target;
}

size_t PaymentChannelCounterParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source = 3;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source());
  }

  // string destination = 4;
  if (this->destination().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination());
  }

  // .google.protobuf.StringValue account = 5;
  if (this->has_account()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *account_);
  }

  // .com.elarian.hera.proto.PaymentChannel channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_channel());
  }

  // int32 channel_code = 2;
  if (this->channel_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentChannelCounterParty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentChannelCounterParty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentChannelCounterParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentChannelCounterParty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentChannelCounterParty)
    MergeFrom(*source);
  }
}

void PaymentChannelCounterParty::MergeFrom(const PaymentChannelCounterParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source().size() > 0) {
    _internal_set_source(from._internal_source());
  }
  if (from.destination().size() > 0) {
    _internal_set_destination(from._internal_destination());
  }
  if (from.has_account()) {
    _internal_mutable_account()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_account());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.channel_code() != 0) {
    _internal_set_channel_code(from._internal_channel_code());
  }
}

void PaymentChannelCounterParty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentChannelCounterParty::CopyFrom(const PaymentChannelCounterParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentChannelCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentChannelCounterParty::IsInitialized() const {
  return true;
}

void PaymentChannelCounterParty::InternalSwap(PaymentChannelCounterParty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  source_.Swap(&other->source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destination_.Swap(&other->destination_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentChannelCounterParty, channel_code_)
      + sizeof(PaymentChannelCounterParty::channel_code_)
      - PROTOBUF_FIELD_OFFSET(PaymentChannelCounterParty, account_)>(
          reinterpret_cast<char*>(&account_),
          reinterpret_cast<char*>(&other->account_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentChannelCounterParty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentCounterParty::_Internal {
 public:
  static const ::com::elarian::hera::proto::PaymentPurseCounterParty& purse(const PaymentCounterParty* msg);
  static const ::com::elarian::hera::proto::PaymentWalletCounterParty& wallet(const PaymentCounterParty* msg);
  static const ::com::elarian::hera::proto::PaymentCustomerCounterParty& customer(const PaymentCounterParty* msg);
  static const ::com::elarian::hera::proto::PaymentChannelCounterParty& channel(const PaymentCounterParty* msg);
};

const ::com::elarian::hera::proto::PaymentPurseCounterParty&
PaymentCounterParty::_Internal::purse(const PaymentCounterParty* msg) {
  return *msg->party_.purse_;
}
const ::com::elarian::hera::proto::PaymentWalletCounterParty&
PaymentCounterParty::_Internal::wallet(const PaymentCounterParty* msg) {
  return *msg->party_.wallet_;
}
const ::com::elarian::hera::proto::PaymentCustomerCounterParty&
PaymentCounterParty::_Internal::customer(const PaymentCounterParty* msg) {
  return *msg->party_.customer_;
}
const ::com::elarian::hera::proto::PaymentChannelCounterParty&
PaymentCounterParty::_Internal::channel(const PaymentCounterParty* msg) {
  return *msg->party_.channel_;
}
void PaymentCounterParty::set_allocated_purse(::com::elarian::hera::proto::PaymentPurseCounterParty* purse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_party();
  if (purse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(purse);
    if (message_arena != submessage_arena) {
      purse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, purse, submessage_arena);
    }
    set_has_purse();
    party_.purse_ = purse;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PaymentCounterParty.purse)
}
void PaymentCounterParty::set_allocated_wallet(::com::elarian::hera::proto::PaymentWalletCounterParty* wallet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_party();
  if (wallet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(wallet);
    if (message_arena != submessage_arena) {
      wallet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, wallet, submessage_arena);
    }
    set_has_wallet();
    party_.wallet_ = wallet;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PaymentCounterParty.wallet)
}
void PaymentCounterParty::set_allocated_customer(::com::elarian::hera::proto::PaymentCustomerCounterParty* customer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_party();
  if (customer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(customer);
    if (message_arena != submessage_arena) {
      customer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, customer, submessage_arena);
    }
    set_has_customer();
    party_.customer_ = customer;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PaymentCounterParty.customer)
}
void PaymentCounterParty::set_allocated_channel(::com::elarian::hera::proto::PaymentChannelCounterParty* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_party();
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(channel);
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    set_has_channel();
    party_.channel_ = channel;
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PaymentCounterParty.channel)
}
PaymentCounterParty::PaymentCounterParty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentCounterParty)
}
PaymentCounterParty::PaymentCounterParty(const PaymentCounterParty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_party();
  switch (from.party_case()) {
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kCustomer: {
      _internal_mutable_customer()->::com::elarian::hera::proto::PaymentCustomerCounterParty::MergeFrom(from._internal_customer());
      break;
    }
    case kChannel: {
      _internal_mutable_channel()->::com::elarian::hera::proto::PaymentChannelCounterParty::MergeFrom(from._internal_channel());
      break;
    }
    case PARTY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentCounterParty)
}

void PaymentCounterParty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentCounterParty_payment_5fmodel_2eproto.base);
  clear_has_party();
}

PaymentCounterParty::~PaymentCounterParty() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentCounterParty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentCounterParty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_party()) {
    clear_party();
  }
}

void PaymentCounterParty::ArenaDtor(void* object) {
  PaymentCounterParty* _this = reinterpret_cast< PaymentCounterParty* >(object);
  (void)_this;
}
void PaymentCounterParty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentCounterParty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentCounterParty& PaymentCounterParty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentCounterParty_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentCounterParty::clear_party() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.PaymentCounterParty)
  switch (party_case()) {
    case kPurse: {
      if (GetArena() == nullptr) {
        delete party_.purse_;
      }
      break;
    }
    case kWallet: {
      if (GetArena() == nullptr) {
        delete party_.wallet_;
      }
      break;
    }
    case kCustomer: {
      if (GetArena() == nullptr) {
        delete party_.customer_;
      }
      break;
    }
    case kChannel: {
      if (GetArena() == nullptr) {
        delete party_.channel_;
      }
      break;
    }
    case PARTY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARTY_NOT_SET;
}


void PaymentCounterParty::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_party();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentCounterParty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_purse(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_wallet(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentCustomerCounterParty customer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_customer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentChannelCounterParty channel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_channel(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentCounterParty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentCounterParty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 1;
  if (_internal_has_purse()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::purse(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 2;
  if (_internal_has_wallet()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::wallet(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentCustomerCounterParty customer = 3;
  if (_internal_has_customer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::customer(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentChannelCounterParty channel = 4;
  if (_internal_has_channel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::channel(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentCounterParty)
  return target;
}

size_t PaymentCounterParty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentCounterParty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (party_case()) {
    // .com.elarian.hera.proto.PaymentPurseCounterParty purse = 1;
    case kPurse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *party_.purse_);
      break;
    }
    // .com.elarian.hera.proto.PaymentWalletCounterParty wallet = 2;
    case kWallet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *party_.wallet_);
      break;
    }
    // .com.elarian.hera.proto.PaymentCustomerCounterParty customer = 3;
    case kCustomer: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *party_.customer_);
      break;
    }
    // .com.elarian.hera.proto.PaymentChannelCounterParty channel = 4;
    case kChannel: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *party_.channel_);
      break;
    }
    case PARTY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentCounterParty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentCounterParty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentCounterParty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentCounterParty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentCounterParty)
    MergeFrom(*source);
  }
}

void PaymentCounterParty::MergeFrom(const PaymentCounterParty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentCounterParty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.party_case()) {
    case kPurse: {
      _internal_mutable_purse()->::com::elarian::hera::proto::PaymentPurseCounterParty::MergeFrom(from._internal_purse());
      break;
    }
    case kWallet: {
      _internal_mutable_wallet()->::com::elarian::hera::proto::PaymentWalletCounterParty::MergeFrom(from._internal_wallet());
      break;
    }
    case kCustomer: {
      _internal_mutable_customer()->::com::elarian::hera::proto::PaymentCustomerCounterParty::MergeFrom(from._internal_customer());
      break;
    }
    case kChannel: {
      _internal_mutable_channel()->::com::elarian::hera::proto::PaymentChannelCounterParty::MergeFrom(from._internal_channel());
      break;
    }
    case PARTY_NOT_SET: {
      break;
    }
  }
}

void PaymentCounterParty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentCounterParty::CopyFrom(const PaymentCounterParty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentCounterParty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentCounterParty::IsInitialized() const {
  return true;
}

void PaymentCounterParty::InternalSwap(PaymentCounterParty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(party_, other->party_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentCounterParty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PaymentTransaction::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& app_id(const PaymentTransaction* msg);
  static const ::com::elarian::hera::proto::PaymentCounterParty& debit_party(const PaymentTransaction* msg);
  static const ::com::elarian::hera::proto::PaymentCounterParty& credit_party(const PaymentTransaction* msg);
  static const ::com::elarian::hera::proto::Cash& value(const PaymentTransaction* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const PaymentTransaction* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const PaymentTransaction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& provider_transaction_id(const PaymentTransaction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& narration(const PaymentTransaction* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& description(const PaymentTransaction* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
PaymentTransaction::_Internal::app_id(const PaymentTransaction* msg) {
  return *msg->app_id_;
}
const ::com::elarian::hera::proto::PaymentCounterParty&
PaymentTransaction::_Internal::debit_party(const PaymentTransaction* msg) {
  return *msg->debit_party_;
}
const ::com::elarian::hera::proto::PaymentCounterParty&
PaymentTransaction::_Internal::credit_party(const PaymentTransaction* msg) {
  return *msg->credit_party_;
}
const ::com::elarian::hera::proto::Cash&
PaymentTransaction::_Internal::value(const PaymentTransaction* msg) {
  return *msg->value_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
PaymentTransaction::_Internal::created_at(const PaymentTransaction* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
PaymentTransaction::_Internal::updated_at(const PaymentTransaction* msg) {
  return *msg->updated_at_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
PaymentTransaction::_Internal::provider_transaction_id(const PaymentTransaction* msg) {
  return *msg->provider_transaction_id_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
PaymentTransaction::_Internal::narration(const PaymentTransaction* msg) {
  return *msg->narration_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
PaymentTransaction::_Internal::description(const PaymentTransaction* msg) {
  return *msg->description_;
}
void PaymentTransaction::clear_app_id() {
  if (GetArena() == nullptr && app_id_ != nullptr) {
    delete app_id_;
  }
  app_id_ = nullptr;
}
void PaymentTransaction::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
void PaymentTransaction::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void PaymentTransaction::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
void PaymentTransaction::clear_provider_transaction_id() {
  if (GetArena() == nullptr && provider_transaction_id_ != nullptr) {
    delete provider_transaction_id_;
  }
  provider_transaction_id_ = nullptr;
}
void PaymentTransaction::clear_narration() {
  if (GetArena() == nullptr && narration_ != nullptr) {
    delete narration_;
  }
  narration_ = nullptr;
}
void PaymentTransaction::clear_description() {
  if (GetArena() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
}
PaymentTransaction::PaymentTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.PaymentTransaction)
}
PaymentTransaction::PaymentTransaction(const PaymentTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_id().empty()) {
    transaction_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transaction_id(), 
      GetArena());
  }
  if (from._internal_has_app_id()) {
    app_id_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.app_id_);
  } else {
    app_id_ = nullptr;
  }
  if (from._internal_has_debit_party()) {
    debit_party_ = new ::com::elarian::hera::proto::PaymentCounterParty(*from.debit_party_);
  } else {
    debit_party_ = nullptr;
  }
  if (from._internal_has_credit_party()) {
    credit_party_ = new ::com::elarian::hera::proto::PaymentCounterParty(*from.credit_party_);
  } else {
    credit_party_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::com::elarian::hera::proto::Cash(*from.value_);
  } else {
    value_ = nullptr;
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  if (from._internal_has_provider_transaction_id()) {
    provider_transaction_id_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.provider_transaction_id_);
  } else {
    provider_transaction_id_ = nullptr;
  }
  if (from._internal_has_narration()) {
    narration_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.narration_);
  } else {
    narration_ = nullptr;
  }
  if (from._internal_has_description()) {
    description_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.description_);
  } else {
    description_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.PaymentTransaction)
}

void PaymentTransaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PaymentTransaction_payment_5fmodel_2eproto.base);
  transaction_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(status_));
}

PaymentTransaction::~PaymentTransaction() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.PaymentTransaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PaymentTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete app_id_;
  if (this != internal_default_instance()) delete debit_party_;
  if (this != internal_default_instance()) delete credit_party_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete provider_transaction_id_;
  if (this != internal_default_instance()) delete narration_;
  if (this != internal_default_instance()) delete description_;
}

void PaymentTransaction::ArenaDtor(void* object) {
  PaymentTransaction* _this = reinterpret_cast< PaymentTransaction* >(object);
  (void)_this;
}
void PaymentTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PaymentTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PaymentTransaction& PaymentTransaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PaymentTransaction_payment_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void PaymentTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.PaymentTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_id_.ClearToEmpty();
  if (GetArena() == nullptr && app_id_ != nullptr) {
    delete app_id_;
  }
  app_id_ = nullptr;
  if (GetArena() == nullptr && debit_party_ != nullptr) {
    delete debit_party_;
  }
  debit_party_ = nullptr;
  if (GetArena() == nullptr && credit_party_ != nullptr) {
    delete credit_party_;
  }
  credit_party_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  if (GetArena() == nullptr && provider_transaction_id_ != nullptr) {
    delete provider_transaction_id_;
  }
  provider_transaction_id_ = nullptr;
  if (GetArena() == nullptr && narration_ != nullptr) {
    delete narration_;
  }
  narration_ = nullptr;
  if (GetArena() == nullptr && description_ != nullptr) {
    delete description_;
  }
  description_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PaymentTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transaction_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.PaymentTransaction.transaction_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentCounterParty debit_party = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_debit_party(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentCounterParty credit_party = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_credit_party(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.Cash value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .com.elarian.hera.proto.PaymentStatus status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::elarian::hera::proto::PaymentStatus>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue provider_transaction_id = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_provider_transaction_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue narration = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_narration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue description = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_description(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PaymentTransaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.PaymentTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transaction_id().data(), static_cast<int>(this->_internal_transaction_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.PaymentTransaction.transaction_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transaction_id(), target);
  }

  // .google.protobuf.StringValue app_id = 2;
  if (this->has_app_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::app_id(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentCounterParty debit_party = 4;
  if (this->has_debit_party()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::debit_party(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentCounterParty credit_party = 5;
  if (this->has_credit_party()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::credit_party(this), target, stream);
  }

  // .com.elarian.hera.proto.Cash value = 6;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::value(this), target, stream);
  }

  // .com.elarian.hera.proto.PaymentStatus status = 7;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_status(), target);
  }

  // .google.protobuf.Timestamp created_at = 8;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 9;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::updated_at(this), target, stream);
  }

  // .google.protobuf.StringValue provider_transaction_id = 10;
  if (this->has_provider_transaction_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::provider_transaction_id(this), target, stream);
  }

  // .google.protobuf.StringValue narration = 11;
  if (this->has_narration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::narration(this), target, stream);
  }

  // .google.protobuf.StringValue description = 12;
  if (this->has_description()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::description(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.PaymentTransaction)
  return target;
}

size_t PaymentTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.PaymentTransaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (this->transaction_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transaction_id());
  }

  // .google.protobuf.StringValue app_id = 2;
  if (this->has_app_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_id_);
  }

  // .com.elarian.hera.proto.PaymentCounterParty debit_party = 4;
  if (this->has_debit_party()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *debit_party_);
  }

  // .com.elarian.hera.proto.PaymentCounterParty credit_party = 5;
  if (this->has_credit_party()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *credit_party_);
  }

  // .com.elarian.hera.proto.Cash value = 6;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .google.protobuf.Timestamp created_at = 8;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 9;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .google.protobuf.StringValue provider_transaction_id = 10;
  if (this->has_provider_transaction_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *provider_transaction_id_);
  }

  // .google.protobuf.StringValue narration = 11;
  if (this->has_narration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *narration_);
  }

  // .google.protobuf.StringValue description = 12;
  if (this->has_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .com.elarian.hera.proto.PaymentStatus status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaymentTransaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.PaymentTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentTransaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PaymentTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.PaymentTransaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.PaymentTransaction)
    MergeFrom(*source);
  }
}

void PaymentTransaction::MergeFrom(const PaymentTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.PaymentTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_id().size() > 0) {
    _internal_set_transaction_id(from._internal_transaction_id());
  }
  if (from.has_app_id()) {
    _internal_mutable_app_id()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_app_id());
  }
  if (from.has_debit_party()) {
    _internal_mutable_debit_party()->::com::elarian::hera::proto::PaymentCounterParty::MergeFrom(from._internal_debit_party());
  }
  if (from.has_credit_party()) {
    _internal_mutable_credit_party()->::com::elarian::hera::proto::PaymentCounterParty::MergeFrom(from._internal_credit_party());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::com::elarian::hera::proto::Cash::MergeFrom(from._internal_value());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.has_provider_transaction_id()) {
    _internal_mutable_provider_transaction_id()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_provider_transaction_id());
  }
  if (from.has_narration()) {
    _internal_mutable_narration()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_narration());
  }
  if (from.has_description()) {
    _internal_mutable_description()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_description());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void PaymentTransaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.PaymentTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentTransaction::CopyFrom(const PaymentTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.PaymentTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentTransaction::IsInitialized() const {
  return true;
}

void PaymentTransaction::InternalSwap(PaymentTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_id_.Swap(&other->transaction_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PaymentTransaction, status_)
      + sizeof(PaymentTransaction::status_)
      - PROTOBUF_FIELD_OFFSET(PaymentTransaction, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PaymentTransaction::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentChannelNumber* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentChannelNumber >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentChannelNumber >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PendingPaymentTransaction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PendingPaymentTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PendingPaymentTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentBalance_PendingEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentBalance* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentBalance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentBalance >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentPurseCounterParty* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentPurseCounterParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentPurseCounterParty >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentWalletCounterParty* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentWalletCounterParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentWalletCounterParty >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentCustomerCounterParty* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentCustomerCounterParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentCustomerCounterParty >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentChannelCounterParty* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentChannelCounterParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentChannelCounterParty >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentCounterParty* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentCounterParty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentCounterParty >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::PaymentTransaction* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::PaymentTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::PaymentTransaction >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
