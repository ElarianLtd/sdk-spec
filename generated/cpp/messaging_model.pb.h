// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messaging_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messaging_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "common_model.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messaging_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_messaging_5fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[28]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messaging_5fmodel_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class DequeueCallAction;
class DequeueCallActionDefaultTypeInternal;
extern DequeueCallActionDefaultTypeInternal _DequeueCallAction_default_instance_;
class DialCallAction;
class DialCallActionDefaultTypeInternal;
extern DialCallActionDefaultTypeInternal _DialCallAction_default_instance_;
class EmailMessageBody;
class EmailMessageBodyDefaultTypeInternal;
extern EmailMessageBodyDefaultTypeInternal _EmailMessageBody_default_instance_;
class EnqueueCallAction;
class EnqueueCallActionDefaultTypeInternal;
extern EnqueueCallActionDefaultTypeInternal _EnqueueCallAction_default_instance_;
class GetDigitsCallAction;
class GetDigitsCallActionDefaultTypeInternal;
extern GetDigitsCallActionDefaultTypeInternal _GetDigitsCallAction_default_instance_;
class GetRecordingCallAction;
class GetRecordingCallActionDefaultTypeInternal;
extern GetRecordingCallActionDefaultTypeInternal _GetRecordingCallAction_default_instance_;
class InboundMessageBody;
class InboundMessageBodyDefaultTypeInternal;
extern InboundMessageBodyDefaultTypeInternal _InboundMessageBody_default_instance_;
class LocationMessageBody;
class LocationMessageBodyDefaultTypeInternal;
extern LocationMessageBodyDefaultTypeInternal _LocationMessageBody_default_instance_;
class MediaMessageBody;
class MediaMessageBodyDefaultTypeInternal;
extern MediaMessageBodyDefaultTypeInternal _MediaMessageBody_default_instance_;
class MessagingChannelNumber;
class MessagingChannelNumberDefaultTypeInternal;
extern MessagingChannelNumberDefaultTypeInternal _MessagingChannelNumber_default_instance_;
class OutboundMessage;
class OutboundMessageDefaultTypeInternal;
extern OutboundMessageDefaultTypeInternal _OutboundMessage_default_instance_;
class OutboundMessageBody;
class OutboundMessageBodyDefaultTypeInternal;
extern OutboundMessageBodyDefaultTypeInternal _OutboundMessageBody_default_instance_;
class OutboundMessageReplyPrompt;
class OutboundMessageReplyPromptDefaultTypeInternal;
extern OutboundMessageReplyPromptDefaultTypeInternal _OutboundMessageReplyPrompt_default_instance_;
class PlayCallAction;
class PlayCallActionDefaultTypeInternal;
extern PlayCallActionDefaultTypeInternal _PlayCallAction_default_instance_;
class PromptMessageMenuItemBody;
class PromptMessageMenuItemBodyDefaultTypeInternal;
extern PromptMessageMenuItemBodyDefaultTypeInternal _PromptMessageMenuItemBody_default_instance_;
class RecordSessionCallAction;
class RecordSessionCallActionDefaultTypeInternal;
extern RecordSessionCallActionDefaultTypeInternal _RecordSessionCallAction_default_instance_;
class RedirectCallAction;
class RedirectCallActionDefaultTypeInternal;
extern RedirectCallActionDefaultTypeInternal _RedirectCallAction_default_instance_;
class RejectCallAction;
class RejectCallActionDefaultTypeInternal;
extern RejectCallActionDefaultTypeInternal _RejectCallAction_default_instance_;
class SayCallAction;
class SayCallActionDefaultTypeInternal;
extern SayCallActionDefaultTypeInternal _SayCallAction_default_instance_;
class TemplateMessageBody;
class TemplateMessageBodyDefaultTypeInternal;
extern TemplateMessageBodyDefaultTypeInternal _TemplateMessageBody_default_instance_;
class TemplateMessageBody_ParamsEntry_DoNotUse;
class TemplateMessageBody_ParamsEntry_DoNotUseDefaultTypeInternal;
extern TemplateMessageBody_ParamsEntry_DoNotUseDefaultTypeInternal _TemplateMessageBody_ParamsEntry_DoNotUse_default_instance_;
class UssdInputMessageBody;
class UssdInputMessageBodyDefaultTypeInternal;
extern UssdInputMessageBodyDefaultTypeInternal _UssdInputMessageBody_default_instance_;
class UssdMenuMessageBody;
class UssdMenuMessageBodyDefaultTypeInternal;
extern UssdMenuMessageBodyDefaultTypeInternal _UssdMenuMessageBody_default_instance_;
class VoiceCallAction;
class VoiceCallActionDefaultTypeInternal;
extern VoiceCallActionDefaultTypeInternal _VoiceCallAction_default_instance_;
class VoiceCallDialInput;
class VoiceCallDialInputDefaultTypeInternal;
extern VoiceCallDialInputDefaultTypeInternal _VoiceCallDialInput_default_instance_;
class VoiceCallDialplanMessageBody;
class VoiceCallDialplanMessageBodyDefaultTypeInternal;
extern VoiceCallDialplanMessageBodyDefaultTypeInternal _VoiceCallDialplanMessageBody_default_instance_;
class VoiceCallInputMessageBody;
class VoiceCallInputMessageBodyDefaultTypeInternal;
extern VoiceCallInputMessageBodyDefaultTypeInternal _VoiceCallInputMessageBody_default_instance_;
class VoiceCallQueueInput;
class VoiceCallQueueInputDefaultTypeInternal;
extern VoiceCallQueueInputDefaultTypeInternal _VoiceCallQueueInput_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::elarian::hera::proto::DequeueCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::DequeueCallAction>(Arena*);
template<> ::com::elarian::hera::proto::DialCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::DialCallAction>(Arena*);
template<> ::com::elarian::hera::proto::EmailMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::EmailMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::EnqueueCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::EnqueueCallAction>(Arena*);
template<> ::com::elarian::hera::proto::GetDigitsCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::GetDigitsCallAction>(Arena*);
template<> ::com::elarian::hera::proto::GetRecordingCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::GetRecordingCallAction>(Arena*);
template<> ::com::elarian::hera::proto::InboundMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::InboundMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::LocationMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::LocationMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::MediaMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::MediaMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::MessagingChannelNumber* Arena::CreateMaybeMessage<::com::elarian::hera::proto::MessagingChannelNumber>(Arena*);
template<> ::com::elarian::hera::proto::OutboundMessage* Arena::CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessage>(Arena*);
template<> ::com::elarian::hera::proto::OutboundMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::OutboundMessageReplyPrompt* Arena::CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessageReplyPrompt>(Arena*);
template<> ::com::elarian::hera::proto::PlayCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::PlayCallAction>(Arena*);
template<> ::com::elarian::hera::proto::PromptMessageMenuItemBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::PromptMessageMenuItemBody>(Arena*);
template<> ::com::elarian::hera::proto::RecordSessionCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::RecordSessionCallAction>(Arena*);
template<> ::com::elarian::hera::proto::RedirectCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::RedirectCallAction>(Arena*);
template<> ::com::elarian::hera::proto::RejectCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::RejectCallAction>(Arena*);
template<> ::com::elarian::hera::proto::SayCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::SayCallAction>(Arena*);
template<> ::com::elarian::hera::proto::TemplateMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::TemplateMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage<::com::elarian::hera::proto::TemplateMessageBody_ParamsEntry_DoNotUse>(Arena*);
template<> ::com::elarian::hera::proto::UssdInputMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::UssdInputMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::UssdMenuMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::UssdMenuMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::VoiceCallAction* Arena::CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallAction>(Arena*);
template<> ::com::elarian::hera::proto::VoiceCallDialInput* Arena::CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallDialInput>(Arena*);
template<> ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallDialplanMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::VoiceCallInputMessageBody* Arena::CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallInputMessageBody>(Arena*);
template<> ::com::elarian::hera::proto::VoiceCallQueueInput* Arena::CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallQueueInput>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace elarian {
namespace hera {
namespace proto {

enum MessagingChannel : int {
  MESSAGING_CHANNEL_UNSPECIFIED = 0,
  MESSAGING_CHANNEL_SMS = 1,
  MESSAGING_CHANNEL_VOICE = 2,
  MESSAGING_CHANNEL_USSD = 3,
  MESSAGING_CHANNEL_FB_MESSENGER = 4,
  MESSAGING_CHANNEL_TELEGRAM = 5,
  MESSAGING_CHANNEL_WHATSAPP = 6,
  MESSAGING_CHANNEL_EMAIL = 7,
  MessagingChannel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessagingChannel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessagingChannel_IsValid(int value);
constexpr MessagingChannel MessagingChannel_MIN = MESSAGING_CHANNEL_UNSPECIFIED;
constexpr MessagingChannel MessagingChannel_MAX = MESSAGING_CHANNEL_EMAIL;
constexpr int MessagingChannel_ARRAYSIZE = MessagingChannel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingChannel_descriptor();
template<typename T>
inline const std::string& MessagingChannel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessagingChannel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessagingChannel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessagingChannel_descriptor(), enum_t_value);
}
inline bool MessagingChannel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessagingChannel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessagingChannel>(
    MessagingChannel_descriptor(), name, value);
}
enum MessagingConsentUpdate : int {
  MESSAGING_CONSENT_UPDATE_UNSPECIFIED = 0,
  MESSAGING_CONSENT_UPDATE_ALLOW = 1,
  MESSAGING_CONSENT_UPDATE_BLOCK = 2,
  MessagingConsentUpdate_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessagingConsentUpdate_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessagingConsentUpdate_IsValid(int value);
constexpr MessagingConsentUpdate MessagingConsentUpdate_MIN = MESSAGING_CONSENT_UPDATE_UNSPECIFIED;
constexpr MessagingConsentUpdate MessagingConsentUpdate_MAX = MESSAGING_CONSENT_UPDATE_BLOCK;
constexpr int MessagingConsentUpdate_ARRAYSIZE = MessagingConsentUpdate_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingConsentUpdate_descriptor();
template<typename T>
inline const std::string& MessagingConsentUpdate_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessagingConsentUpdate>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessagingConsentUpdate_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessagingConsentUpdate_descriptor(), enum_t_value);
}
inline bool MessagingConsentUpdate_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessagingConsentUpdate* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessagingConsentUpdate>(
    MessagingConsentUpdate_descriptor(), name, value);
}
enum MessagingConsentUpdateStatus : int {
  MESSAGING_CONSENT_UPDATE_STATUS_UNSPECIFIED = 0,
  MESSAGING_CONSENT_UPDATE_STATUS_QUEUED = 100,
  MESSAGING_CONSENT_UPDATE_STATUS_COMPLETED = 300,
  MESSAGING_CONSENT_UPDATE_STATUS_INVALID_CHANNEL_NUMBER = 401,
  MESSAGING_CONSENT_UPDATE_STATUS_DECOMMISSIONED_CUSTOMER_ID = 402,
  MESSAGING_CONSENT_UPDATE_STATUS_APPLICATION_ERROR = 501,
  MessagingConsentUpdateStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessagingConsentUpdateStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessagingConsentUpdateStatus_IsValid(int value);
constexpr MessagingConsentUpdateStatus MessagingConsentUpdateStatus_MIN = MESSAGING_CONSENT_UPDATE_STATUS_UNSPECIFIED;
constexpr MessagingConsentUpdateStatus MessagingConsentUpdateStatus_MAX = MESSAGING_CONSENT_UPDATE_STATUS_APPLICATION_ERROR;
constexpr int MessagingConsentUpdateStatus_ARRAYSIZE = MessagingConsentUpdateStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingConsentUpdateStatus_descriptor();
template<typename T>
inline const std::string& MessagingConsentUpdateStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessagingConsentUpdateStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessagingConsentUpdateStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessagingConsentUpdateStatus_descriptor(), enum_t_value);
}
inline bool MessagingConsentUpdateStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessagingConsentUpdateStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessagingConsentUpdateStatus>(
    MessagingConsentUpdateStatus_descriptor(), name, value);
}
enum MessagingSessionEndReason : int {
  MESSAGING_SESSION_END_REASON_UNSPECIFIED = 0,
  MESSAGING_SESSION_END_REASON_NORMAL_CLEARING = 100,
  MESSAGING_SESSION_END_REASON_INACTIVITY = 200,
  MESSAGING_SESSION_END_REASON_FAILURE = 300,
  MessagingSessionEndReason_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessagingSessionEndReason_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessagingSessionEndReason_IsValid(int value);
constexpr MessagingSessionEndReason MessagingSessionEndReason_MIN = MESSAGING_SESSION_END_REASON_UNSPECIFIED;
constexpr MessagingSessionEndReason MessagingSessionEndReason_MAX = MESSAGING_SESSION_END_REASON_FAILURE;
constexpr int MessagingSessionEndReason_ARRAYSIZE = MessagingSessionEndReason_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessagingSessionEndReason_descriptor();
template<typename T>
inline const std::string& MessagingSessionEndReason_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessagingSessionEndReason>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessagingSessionEndReason_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessagingSessionEndReason_descriptor(), enum_t_value);
}
inline bool MessagingSessionEndReason_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessagingSessionEndReason* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessagingSessionEndReason>(
    MessagingSessionEndReason_descriptor(), name, value);
}
enum MessageReaction : int {
  MESSAGE_REACTION_UNSPECIFIED = 0,
  MESSAGE_REACTION_CLICKED = 100,
  MESSAGE_REACTION_UNSUBSCRIBED = 200,
  MESSAGE_REACTION_COMPLAINED = 201,
  MessageReaction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessageReaction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessageReaction_IsValid(int value);
constexpr MessageReaction MessageReaction_MIN = MESSAGE_REACTION_UNSPECIFIED;
constexpr MessageReaction MessageReaction_MAX = MESSAGE_REACTION_COMPLAINED;
constexpr int MessageReaction_ARRAYSIZE = MessageReaction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageReaction_descriptor();
template<typename T>
inline const std::string& MessageReaction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageReaction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageReaction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageReaction_descriptor(), enum_t_value);
}
inline bool MessageReaction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageReaction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageReaction>(
    MessageReaction_descriptor(), name, value);
}
enum PromptMessageReplyAction : int {
  PROMPT_MESSAGE_REPLY_ACTION_UNSPECIFIED = 0,
  PROMPT_MESSAGE_REPLY_ACTION_TEXT = 1,
  PROMPT_MESSAGE_REPLY_ACTION_PHONE_NUMBER = 2,
  PROMPT_MESSAGE_REPLY_ACTION_EMAIL = 3,
  PROMPT_MESSAGE_REPLY_ACTION_LOCATION = 4,
  PROMPT_MESSAGE_REPLY_ACTION_URL = 5,
  PromptMessageReplyAction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PromptMessageReplyAction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PromptMessageReplyAction_IsValid(int value);
constexpr PromptMessageReplyAction PromptMessageReplyAction_MIN = PROMPT_MESSAGE_REPLY_ACTION_UNSPECIFIED;
constexpr PromptMessageReplyAction PromptMessageReplyAction_MAX = PROMPT_MESSAGE_REPLY_ACTION_URL;
constexpr int PromptMessageReplyAction_ARRAYSIZE = PromptMessageReplyAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PromptMessageReplyAction_descriptor();
template<typename T>
inline const std::string& PromptMessageReplyAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PromptMessageReplyAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PromptMessageReplyAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PromptMessageReplyAction_descriptor(), enum_t_value);
}
inline bool PromptMessageReplyAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PromptMessageReplyAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PromptMessageReplyAction>(
    PromptMessageReplyAction_descriptor(), name, value);
}
enum MessageDeliveryStatus : int {
  MESSAGE_DELIVERY_STATUS_UNSPECIFIED = 0,
  MESSAGE_DELIVERY_STATUS_QUEUED = 100,
  MESSAGE_DELIVERY_STATUS_SENT = 101,
  MESSAGE_DELIVERY_STATUS_DELIVERED = 300,
  MESSAGE_DELIVERY_STATUS_READ = 301,
  MESSAGE_DELIVERY_STATUS_RECEIVED = 302,
  MESSAGE_DELIVERY_STATUS_SESSION_INITIATED = 303,
  MESSAGE_DELIVERY_STATUS_FAILED = 400,
  MESSAGE_DELIVERY_STATUS_NO_CONSENT = 401,
  MESSAGE_DELIVERY_STATUS_NO_CAPABILITY = 402,
  MESSAGE_DELIVERY_STATUS_EXPIRED = 403,
  MESSAGE_DELIVERY_STATUS_NO_SESSION_IN_PROGRESS = 404,
  MESSAGE_DELIVERY_STATUS_OTHER_SESSION_IN_PROGRESS = 405,
  MESSAGE_DELIVERY_STATUS_INVALID_REPLY_TOKEN = 406,
  MESSAGE_DELIVERY_STATUS_INVALID_CHANNEL_NUMBER = 407,
  MESSAGE_DELIVERY_STATUS_NOT_SUPPORTED = 408,
  MESSAGE_DELIVERY_STATUS_INVALID_REPLY_TO_MESSAGE_ID = 409,
  MESSAGE_DELIVERY_STATUS_INVALID_CUSTOMER_ID = 410,
  MESSAGE_DELIVERY_STATUS_DUPLICATE_REQUEST = 411,
  MESSAGE_DELIVERY_STATUS_TAG_NOT_FOUND = 412,
  MESSAGE_DELIVERY_STATUS_CUSTOMER_NUMBER_NOT_FOUND = 413,
  MESSAGE_DELIVERY_STATUS_DECOMMISSIONED_CUSTOMERID = 414,
  MESSAGE_DELIVERY_STATUS_REJECTED = 415,
  MESSAGE_DELIVERY_STATUS_INVALID_REQUEST = 416,
  MESSAGE_DELIVERY_STATUS_INSUFFICIENT_CREDITS = 417,
  MESSAGE_DELIVERY_STATUS_GATEWAY_ERROR = 418,
  MESSAGE_DELIVERY_STATUS_APPLICATION_ERROR = 501,
  MessageDeliveryStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MessageDeliveryStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MessageDeliveryStatus_IsValid(int value);
constexpr MessageDeliveryStatus MessageDeliveryStatus_MIN = MESSAGE_DELIVERY_STATUS_UNSPECIFIED;
constexpr MessageDeliveryStatus MessageDeliveryStatus_MAX = MESSAGE_DELIVERY_STATUS_APPLICATION_ERROR;
constexpr int MessageDeliveryStatus_ARRAYSIZE = MessageDeliveryStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageDeliveryStatus_descriptor();
template<typename T>
inline const std::string& MessageDeliveryStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MessageDeliveryStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MessageDeliveryStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MessageDeliveryStatus_descriptor(), enum_t_value);
}
inline bool MessageDeliveryStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MessageDeliveryStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MessageDeliveryStatus>(
    MessageDeliveryStatus_descriptor(), name, value);
}
enum VoiceCallStatus : int {
  VOICE_CALL_STATUS_UNSPECIFIED = 0,
  VOICE_CALL_STATUS_QUEUED = 100,
  VOICE_CALL_STATUS_ANSWERED = 101,
  VOICE_CALL_STATUS_RINGING = 102,
  VOICE_CALL_STATUS_ACTIVE = 200,
  VOICE_CALL_STATUS_DIALING = 201,
  VOICE_CALL_STATUS_DIAL_COMPLETED = 202,
  VOICE_CALL_STATUS_BRIDGED = 203,
  VOICE_CALL_STATUS_ENQUEUED = 204,
  VOICE_CALL_STATUS_DEQUEUED = 205,
  VOICE_CALL_STATUS_TRANSFERRED = 206,
  VOICE_CALL_STATUS_TRANSFER_COMPLETED = 207,
  VOICE_CALL_STATUS_COMPLETED = 300,
  VOICE_CALL_STATUS_INSUFFICIENT_CREDIT = 400,
  VOICE_CALL_STATUS_NOT_ANSWERED = 401,
  VOICE_CALL_STATUS_INVALID_PHONE_NUMBER = 402,
  VOICE_CALL_STATUS_DESTINATION_NOT_SUPPORTED = 403,
  VOICE_CALL_STATUS_DECOMMISSIONED_CUSTOMERID = 404,
  VOICE_CALL_STATUS_EXPIRED = 405,
  VOICE_CALL_STATUS_INVALID_CHANNEL_NUMBER = 406,
  VOICE_CALL_STATUS_GATEWAY_ERROR = 407,
  VOICE_CALL_STATUS_APPLICATION_ERROR = 501,
  VoiceCallStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  VoiceCallStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool VoiceCallStatus_IsValid(int value);
constexpr VoiceCallStatus VoiceCallStatus_MIN = VOICE_CALL_STATUS_UNSPECIFIED;
constexpr VoiceCallStatus VoiceCallStatus_MAX = VOICE_CALL_STATUS_APPLICATION_ERROR;
constexpr int VoiceCallStatus_ARRAYSIZE = VoiceCallStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoiceCallStatus_descriptor();
template<typename T>
inline const std::string& VoiceCallStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, VoiceCallStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function VoiceCallStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    VoiceCallStatus_descriptor(), enum_t_value);
}
inline bool VoiceCallStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, VoiceCallStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<VoiceCallStatus>(
    VoiceCallStatus_descriptor(), name, value);
}
enum VoiceCallHangupCause : int {
  VOICE_CALL_HANGUP_CAUSE_UNSPECIFIED = 0,
  VOICE_CALL_HANGUP_CAUSE_UNALLOCATED_NUMBER = 1,
  VOICE_CALL_HANGUP_CAUSE_USER_BUSY = 17,
  VOICE_CALL_HANGUP_CAUSE_NORMAL_CLEARING = 16,
  VOICE_CALL_HANGUP_CAUSE_NO_USER_RESPONSE = 18,
  VOICE_CALL_HANGUP_CAUSE_NO_ANSWER = 19,
  VOICE_CALL_HANGUP_CAUSE_SUBSCRIBER_ABSENT = 20,
  VOICE_CALL_HANGUP_CAUSE_CALL_REJECTED = 21,
  VOICE_CALL_HANGUP_CAUSE_NORMAL_UNSPECIFIED = 31,
  VOICE_CALL_HANGUP_CAUSE_NORMAL_TEMPORARY_FAILURE = 41,
  VOICE_CALL_HANGUP_CAUSE_SERVICE_UNAVAILABLE = 63,
  VOICE_CALL_HANGUP_CAUSE_RECOVERY_ON_TIMER_EXPIRE = 102,
  VOICE_CALL_HANGUP_CAUSE_ORIGINATOR_CANCEL = 487,
  VOICE_CALL_HANGUP_CAUSE_LOSE_RACE = 502,
  VOICE_CALL_HANGUP_CAUSE_USER_NOT_REGISTERED = 606,
  VoiceCallHangupCause_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  VoiceCallHangupCause_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool VoiceCallHangupCause_IsValid(int value);
constexpr VoiceCallHangupCause VoiceCallHangupCause_MIN = VOICE_CALL_HANGUP_CAUSE_UNSPECIFIED;
constexpr VoiceCallHangupCause VoiceCallHangupCause_MAX = VOICE_CALL_HANGUP_CAUSE_USER_NOT_REGISTERED;
constexpr int VoiceCallHangupCause_ARRAYSIZE = VoiceCallHangupCause_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoiceCallHangupCause_descriptor();
template<typename T>
inline const std::string& VoiceCallHangupCause_Name(T enum_t_value) {
  static_assert(::std::is_same<T, VoiceCallHangupCause>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function VoiceCallHangupCause_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    VoiceCallHangupCause_descriptor(), enum_t_value);
}
inline bool VoiceCallHangupCause_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, VoiceCallHangupCause* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<VoiceCallHangupCause>(
    VoiceCallHangupCause_descriptor(), name, value);
}
enum UssdSessionStatus : int {
  USSD_SESSION_STATUS_UNSPECIFIED = 0,
  USSD_SESSION_STATUS_ACTIVE = 100,
  USSD_SESSION_STATUS_INCOMPLETE = 200,
  USSD_SESSION_STATUS_COMPLETED = 201,
  USSD_SESSION_STATUS_APP_ERROR = 300,
  UssdSessionStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  UssdSessionStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool UssdSessionStatus_IsValid(int value);
constexpr UssdSessionStatus UssdSessionStatus_MIN = USSD_SESSION_STATUS_UNSPECIFIED;
constexpr UssdSessionStatus UssdSessionStatus_MAX = USSD_SESSION_STATUS_APP_ERROR;
constexpr int UssdSessionStatus_ARRAYSIZE = UssdSessionStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UssdSessionStatus_descriptor();
template<typename T>
inline const std::string& UssdSessionStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, UssdSessionStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function UssdSessionStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    UssdSessionStatus_descriptor(), enum_t_value);
}
inline bool UssdSessionStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, UssdSessionStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<UssdSessionStatus>(
    UssdSessionStatus_descriptor(), name, value);
}
enum TextToSpeechVoice : int {
  TEXT_TO_SPEECH_VOICE_UNSPECIFIED = 0,
  TEXT_TO_SPEECH_VOICE_MALE = 1,
  TEXT_TO_SPEECH_VOICE_FEMALE = 2,
  TextToSpeechVoice_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  TextToSpeechVoice_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool TextToSpeechVoice_IsValid(int value);
constexpr TextToSpeechVoice TextToSpeechVoice_MIN = TEXT_TO_SPEECH_VOICE_UNSPECIFIED;
constexpr TextToSpeechVoice TextToSpeechVoice_MAX = TEXT_TO_SPEECH_VOICE_FEMALE;
constexpr int TextToSpeechVoice_ARRAYSIZE = TextToSpeechVoice_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TextToSpeechVoice_descriptor();
template<typename T>
inline const std::string& TextToSpeechVoice_Name(T enum_t_value) {
  static_assert(::std::is_same<T, TextToSpeechVoice>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function TextToSpeechVoice_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    TextToSpeechVoice_descriptor(), enum_t_value);
}
inline bool TextToSpeechVoice_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, TextToSpeechVoice* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<TextToSpeechVoice>(
    TextToSpeechVoice_descriptor(), name, value);
}
// ===================================================================

class MessagingChannelNumber PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.MessagingChannelNumber) */ {
 public:
  inline MessagingChannelNumber() : MessagingChannelNumber(nullptr) {}
  virtual ~MessagingChannelNumber();

  MessagingChannelNumber(const MessagingChannelNumber& from);
  MessagingChannelNumber(MessagingChannelNumber&& from) noexcept
    : MessagingChannelNumber() {
    *this = ::std::move(from);
  }

  inline MessagingChannelNumber& operator=(const MessagingChannelNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessagingChannelNumber& operator=(MessagingChannelNumber&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MessagingChannelNumber& default_instance();

  static inline const MessagingChannelNumber* internal_default_instance() {
    return reinterpret_cast<const MessagingChannelNumber*>(
               &_MessagingChannelNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessagingChannelNumber& a, MessagingChannelNumber& b) {
    a.Swap(&b);
  }
  inline void Swap(MessagingChannelNumber* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessagingChannelNumber* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MessagingChannelNumber* New() const final {
    return CreateMaybeMessage<MessagingChannelNumber>(nullptr);
  }

  MessagingChannelNumber* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessagingChannelNumber>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MessagingChannelNumber& from);
  void MergeFrom(const MessagingChannelNumber& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessagingChannelNumber* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.MessagingChannelNumber";
  }
  protected:
  explicit MessagingChannelNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumberFieldNumber = 2,
    kChannelFieldNumber = 1,
  };
  // string number = 2;
  void clear_number();
  const std::string& number() const;
  void set_number(const std::string& value);
  void set_number(std::string&& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  std::string* mutable_number();
  std::string* release_number();
  void set_allocated_number(std::string* number);
  private:
  const std::string& _internal_number() const;
  void _internal_set_number(const std::string& value);
  std::string* _internal_mutable_number();
  public:

  // .com.elarian.hera.proto.MessagingChannel channel = 1;
  void clear_channel();
  ::com::elarian::hera::proto::MessagingChannel channel() const;
  void set_channel(::com::elarian::hera::proto::MessagingChannel value);
  private:
  ::com::elarian::hera::proto::MessagingChannel _internal_channel() const;
  void _internal_set_channel(::com::elarian::hera::proto::MessagingChannel value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.MessagingChannelNumber)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr number_;
  int channel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class MediaMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.MediaMessageBody) */ {
 public:
  inline MediaMessageBody() : MediaMessageBody(nullptr) {}
  virtual ~MediaMessageBody();

  MediaMessageBody(const MediaMessageBody& from);
  MediaMessageBody(MediaMessageBody&& from) noexcept
    : MediaMessageBody() {
    *this = ::std::move(from);
  }

  inline MediaMessageBody& operator=(const MediaMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline MediaMessageBody& operator=(MediaMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MediaMessageBody& default_instance();

  static inline const MediaMessageBody* internal_default_instance() {
    return reinterpret_cast<const MediaMessageBody*>(
               &_MediaMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MediaMessageBody& a, MediaMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(MediaMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MediaMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MediaMessageBody* New() const final {
    return CreateMaybeMessage<MediaMessageBody>(nullptr);
  }

  MediaMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MediaMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MediaMessageBody& from);
  void MergeFrom(const MediaMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MediaMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.MediaMessageBody";
  }
  protected:
  explicit MediaMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
    kMediaFieldNumber = 2,
  };
  // string url = 1;
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // .com.elarian.hera.proto.MediaType media = 2;
  void clear_media();
  ::com::elarian::hera::proto::MediaType media() const;
  void set_media(::com::elarian::hera::proto::MediaType value);
  private:
  ::com::elarian::hera::proto::MediaType _internal_media() const;
  void _internal_set_media(::com::elarian::hera::proto::MediaType value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.MediaMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  int media_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class LocationMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.LocationMessageBody) */ {
 public:
  inline LocationMessageBody() : LocationMessageBody(nullptr) {}
  virtual ~LocationMessageBody();

  LocationMessageBody(const LocationMessageBody& from);
  LocationMessageBody(LocationMessageBody&& from) noexcept
    : LocationMessageBody() {
    *this = ::std::move(from);
  }

  inline LocationMessageBody& operator=(const LocationMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocationMessageBody& operator=(LocationMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocationMessageBody& default_instance();

  static inline const LocationMessageBody* internal_default_instance() {
    return reinterpret_cast<const LocationMessageBody*>(
               &_LocationMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LocationMessageBody& a, LocationMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(LocationMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocationMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocationMessageBody* New() const final {
    return CreateMaybeMessage<LocationMessageBody>(nullptr);
  }

  LocationMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocationMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocationMessageBody& from);
  void MergeFrom(const LocationMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.LocationMessageBody";
  }
  protected:
  explicit LocationMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLabelFieldNumber = 3,
    kAddressFieldNumber = 4,
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // .google.protobuf.StringValue label = 3;
  bool has_label() const;
  private:
  bool _internal_has_label() const;
  public:
  void clear_label();
  const PROTOBUF_NAMESPACE_ID::StringValue& label() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_label();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_label();
  void set_allocated_label(PROTOBUF_NAMESPACE_ID::StringValue* label);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_label() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_label();
  public:
  void unsafe_arena_set_allocated_label(
      PROTOBUF_NAMESPACE_ID::StringValue* label);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_label();

  // .google.protobuf.StringValue address = 4;
  bool has_address() const;
  private:
  bool _internal_has_address() const;
  public:
  void clear_address();
  const PROTOBUF_NAMESPACE_ID::StringValue& address() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_address();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_address();
  void set_allocated_address(PROTOBUF_NAMESPACE_ID::StringValue* address);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_address() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_address();
  public:
  void unsafe_arena_set_allocated_address(
      PROTOBUF_NAMESPACE_ID::StringValue* address);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_address();

  // double latitude = 1;
  void clear_latitude();
  double latitude() const;
  void set_latitude(double value);
  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);
  public:

  // double longitude = 2;
  void clear_longitude();
  double longitude() const;
  void set_longitude(double value);
  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.LocationMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::StringValue* label_;
  PROTOBUF_NAMESPACE_ID::StringValue* address_;
  double latitude_;
  double longitude_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class EmailMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.EmailMessageBody) */ {
 public:
  inline EmailMessageBody() : EmailMessageBody(nullptr) {}
  virtual ~EmailMessageBody();

  EmailMessageBody(const EmailMessageBody& from);
  EmailMessageBody(EmailMessageBody&& from) noexcept
    : EmailMessageBody() {
    *this = ::std::move(from);
  }

  inline EmailMessageBody& operator=(const EmailMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailMessageBody& operator=(EmailMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EmailMessageBody& default_instance();

  static inline const EmailMessageBody* internal_default_instance() {
    return reinterpret_cast<const EmailMessageBody*>(
               &_EmailMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EmailMessageBody& a, EmailMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EmailMessageBody* New() const final {
    return CreateMaybeMessage<EmailMessageBody>(nullptr);
  }

  EmailMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EmailMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EmailMessageBody& from);
  void MergeFrom(const EmailMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EmailMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.EmailMessageBody";
  }
  protected:
  explicit EmailMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCcListFieldNumber = 4,
    kBccListFieldNumber = 5,
    kSubjectFieldNumber = 1,
    kBodyPlainFieldNumber = 2,
    kBodyHtmlFieldNumber = 3,
  };
  // repeated string cc_list = 4;
  int cc_list_size() const;
  private:
  int _internal_cc_list_size() const;
  public:
  void clear_cc_list();
  const std::string& cc_list(int index) const;
  std::string* mutable_cc_list(int index);
  void set_cc_list(int index, const std::string& value);
  void set_cc_list(int index, std::string&& value);
  void set_cc_list(int index, const char* value);
  void set_cc_list(int index, const char* value, size_t size);
  std::string* add_cc_list();
  void add_cc_list(const std::string& value);
  void add_cc_list(std::string&& value);
  void add_cc_list(const char* value);
  void add_cc_list(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cc_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cc_list();
  private:
  const std::string& _internal_cc_list(int index) const;
  std::string* _internal_add_cc_list();
  public:

  // repeated string bcc_list = 5;
  int bcc_list_size() const;
  private:
  int _internal_bcc_list_size() const;
  public:
  void clear_bcc_list();
  const std::string& bcc_list(int index) const;
  std::string* mutable_bcc_list(int index);
  void set_bcc_list(int index, const std::string& value);
  void set_bcc_list(int index, std::string&& value);
  void set_bcc_list(int index, const char* value);
  void set_bcc_list(int index, const char* value, size_t size);
  std::string* add_bcc_list();
  void add_bcc_list(const std::string& value);
  void add_bcc_list(std::string&& value);
  void add_bcc_list(const char* value);
  void add_bcc_list(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& bcc_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_bcc_list();
  private:
  const std::string& _internal_bcc_list(int index) const;
  std::string* _internal_add_bcc_list();
  public:

  // string subject = 1;
  void clear_subject();
  const std::string& subject() const;
  void set_subject(const std::string& value);
  void set_subject(std::string&& value);
  void set_subject(const char* value);
  void set_subject(const char* value, size_t size);
  std::string* mutable_subject();
  std::string* release_subject();
  void set_allocated_subject(std::string* subject);
  private:
  const std::string& _internal_subject() const;
  void _internal_set_subject(const std::string& value);
  std::string* _internal_mutable_subject();
  public:

  // string body_plain = 2;
  void clear_body_plain();
  const std::string& body_plain() const;
  void set_body_plain(const std::string& value);
  void set_body_plain(std::string&& value);
  void set_body_plain(const char* value);
  void set_body_plain(const char* value, size_t size);
  std::string* mutable_body_plain();
  std::string* release_body_plain();
  void set_allocated_body_plain(std::string* body_plain);
  private:
  const std::string& _internal_body_plain() const;
  void _internal_set_body_plain(const std::string& value);
  std::string* _internal_mutable_body_plain();
  public:

  // string body_html = 3;
  void clear_body_html();
  const std::string& body_html() const;
  void set_body_html(const std::string& value);
  void set_body_html(std::string&& value);
  void set_body_html(const char* value);
  void set_body_html(const char* value, size_t size);
  std::string* mutable_body_html();
  std::string* release_body_html();
  void set_allocated_body_html(std::string* body_html);
  private:
  const std::string& _internal_body_html() const;
  void _internal_set_body_html(const std::string& value);
  std::string* _internal_mutable_body_html();
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.EmailMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cc_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> bcc_list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subject_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr body_plain_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr body_html_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class TemplateMessageBody_ParamsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TemplateMessageBody_ParamsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<TemplateMessageBody_ParamsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  TemplateMessageBody_ParamsEntry_DoNotUse();
  explicit TemplateMessageBody_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const TemplateMessageBody_ParamsEntry_DoNotUse& other);
  static const TemplateMessageBody_ParamsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TemplateMessageBody_ParamsEntry_DoNotUse*>(&_TemplateMessageBody_ParamsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "com.elarian.hera.proto.TemplateMessageBody.ParamsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "com.elarian.hera.proto.TemplateMessageBody.ParamsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class TemplateMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.TemplateMessageBody) */ {
 public:
  inline TemplateMessageBody() : TemplateMessageBody(nullptr) {}
  virtual ~TemplateMessageBody();

  TemplateMessageBody(const TemplateMessageBody& from);
  TemplateMessageBody(TemplateMessageBody&& from) noexcept
    : TemplateMessageBody() {
    *this = ::std::move(from);
  }

  inline TemplateMessageBody& operator=(const TemplateMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline TemplateMessageBody& operator=(TemplateMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TemplateMessageBody& default_instance();

  static inline const TemplateMessageBody* internal_default_instance() {
    return reinterpret_cast<const TemplateMessageBody*>(
               &_TemplateMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(TemplateMessageBody& a, TemplateMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(TemplateMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TemplateMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TemplateMessageBody* New() const final {
    return CreateMaybeMessage<TemplateMessageBody>(nullptr);
  }

  TemplateMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TemplateMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TemplateMessageBody& from);
  void MergeFrom(const TemplateMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TemplateMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.TemplateMessageBody";
  }
  protected:
  explicit TemplateMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // map<string, string> params = 2;
  int params_size() const;
  private:
  int _internal_params_size() const;
  public:
  void clear_params();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_params() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_params();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      params() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_params();

  // string id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.TemplateMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      TemplateMessageBody_ParamsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class SayCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.SayCallAction) */ {
 public:
  inline SayCallAction() : SayCallAction(nullptr) {}
  virtual ~SayCallAction();

  SayCallAction(const SayCallAction& from);
  SayCallAction(SayCallAction&& from) noexcept
    : SayCallAction() {
    *this = ::std::move(from);
  }

  inline SayCallAction& operator=(const SayCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline SayCallAction& operator=(SayCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SayCallAction& default_instance();

  static inline const SayCallAction* internal_default_instance() {
    return reinterpret_cast<const SayCallAction*>(
               &_SayCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SayCallAction& a, SayCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(SayCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SayCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SayCallAction* New() const final {
    return CreateMaybeMessage<SayCallAction>(nullptr);
  }

  SayCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SayCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SayCallAction& from);
  void MergeFrom(const SayCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SayCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.SayCallAction";
  }
  protected:
  explicit SayCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kVoiceFieldNumber = 2,
    kPlayBeepFieldNumber = 3,
  };
  // string text = 1;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // .com.elarian.hera.proto.TextToSpeechVoice voice = 2;
  void clear_voice();
  ::com::elarian::hera::proto::TextToSpeechVoice voice() const;
  void set_voice(::com::elarian::hera::proto::TextToSpeechVoice value);
  private:
  ::com::elarian::hera::proto::TextToSpeechVoice _internal_voice() const;
  void _internal_set_voice(::com::elarian::hera::proto::TextToSpeechVoice value);
  public:

  // bool play_beep = 3;
  void clear_play_beep();
  bool play_beep() const;
  void set_play_beep(bool value);
  private:
  bool _internal_play_beep() const;
  void _internal_set_play_beep(bool value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.SayCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  int voice_;
  bool play_beep_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class PlayCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.PlayCallAction) */ {
 public:
  inline PlayCallAction() : PlayCallAction(nullptr) {}
  virtual ~PlayCallAction();

  PlayCallAction(const PlayCallAction& from);
  PlayCallAction(PlayCallAction&& from) noexcept
    : PlayCallAction() {
    *this = ::std::move(from);
  }

  inline PlayCallAction& operator=(const PlayCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayCallAction& operator=(PlayCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayCallAction& default_instance();

  static inline const PlayCallAction* internal_default_instance() {
    return reinterpret_cast<const PlayCallAction*>(
               &_PlayCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PlayCallAction& a, PlayCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayCallAction* New() const final {
    return CreateMaybeMessage<PlayCallAction>(nullptr);
  }

  PlayCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayCallAction& from);
  void MergeFrom(const PlayCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.PlayCallAction";
  }
  protected:
  explicit PlayCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.PlayCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class GetDigitsCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.GetDigitsCallAction) */ {
 public:
  inline GetDigitsCallAction() : GetDigitsCallAction(nullptr) {}
  virtual ~GetDigitsCallAction();

  GetDigitsCallAction(const GetDigitsCallAction& from);
  GetDigitsCallAction(GetDigitsCallAction&& from) noexcept
    : GetDigitsCallAction() {
    *this = ::std::move(from);
  }

  inline GetDigitsCallAction& operator=(const GetDigitsCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDigitsCallAction& operator=(GetDigitsCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetDigitsCallAction& default_instance();

  enum PromptCase {
    kSay = 1,
    kPlay = 2,
    PROMPT_NOT_SET = 0,
  };

  static inline const GetDigitsCallAction* internal_default_instance() {
    return reinterpret_cast<const GetDigitsCallAction*>(
               &_GetDigitsCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GetDigitsCallAction& a, GetDigitsCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDigitsCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDigitsCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDigitsCallAction* New() const final {
    return CreateMaybeMessage<GetDigitsCallAction>(nullptr);
  }

  GetDigitsCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDigitsCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetDigitsCallAction& from);
  void MergeFrom(const GetDigitsCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDigitsCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.GetDigitsCallAction";
  }
  protected:
  explicit GetDigitsCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeoutFieldNumber = 3,
    kFinishOnKeyFieldNumber = 4,
    kNumDigitsFieldNumber = 5,
    kSayFieldNumber = 1,
    kPlayFieldNumber = 2,
  };
  // .google.protobuf.Duration timeout = 3;
  bool has_timeout() const;
  private:
  bool _internal_has_timeout() const;
  public:
  void clear_timeout();
  const PROTOBUF_NAMESPACE_ID::Duration& timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_timeout();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_timeout();
  void set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_timeout();
  public:
  void unsafe_arena_set_allocated_timeout(
      PROTOBUF_NAMESPACE_ID::Duration* timeout);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_timeout();

  // .google.protobuf.StringValue finish_on_key = 4;
  bool has_finish_on_key() const;
  private:
  bool _internal_has_finish_on_key() const;
  public:
  void clear_finish_on_key();
  const PROTOBUF_NAMESPACE_ID::StringValue& finish_on_key() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_finish_on_key();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_finish_on_key();
  void set_allocated_finish_on_key(PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_finish_on_key() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_finish_on_key();
  public:
  void unsafe_arena_set_allocated_finish_on_key(
      PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_finish_on_key();

  // .google.protobuf.Int32Value num_digits = 5;
  bool has_num_digits() const;
  private:
  bool _internal_has_num_digits() const;
  public:
  void clear_num_digits();
  const PROTOBUF_NAMESPACE_ID::Int32Value& num_digits() const;
  PROTOBUF_NAMESPACE_ID::Int32Value* release_num_digits();
  PROTOBUF_NAMESPACE_ID::Int32Value* mutable_num_digits();
  void set_allocated_num_digits(PROTOBUF_NAMESPACE_ID::Int32Value* num_digits);
  private:
  const PROTOBUF_NAMESPACE_ID::Int32Value& _internal_num_digits() const;
  PROTOBUF_NAMESPACE_ID::Int32Value* _internal_mutable_num_digits();
  public:
  void unsafe_arena_set_allocated_num_digits(
      PROTOBUF_NAMESPACE_ID::Int32Value* num_digits);
  PROTOBUF_NAMESPACE_ID::Int32Value* unsafe_arena_release_num_digits();

  // .com.elarian.hera.proto.SayCallAction say = 1;
  bool has_say() const;
  private:
  bool _internal_has_say() const;
  public:
  void clear_say();
  const ::com::elarian::hera::proto::SayCallAction& say() const;
  ::com::elarian::hera::proto::SayCallAction* release_say();
  ::com::elarian::hera::proto::SayCallAction* mutable_say();
  void set_allocated_say(::com::elarian::hera::proto::SayCallAction* say);
  private:
  const ::com::elarian::hera::proto::SayCallAction& _internal_say() const;
  ::com::elarian::hera::proto::SayCallAction* _internal_mutable_say();
  public:
  void unsafe_arena_set_allocated_say(
      ::com::elarian::hera::proto::SayCallAction* say);
  ::com::elarian::hera::proto::SayCallAction* unsafe_arena_release_say();

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  bool has_play() const;
  private:
  bool _internal_has_play() const;
  public:
  void clear_play();
  const ::com::elarian::hera::proto::PlayCallAction& play() const;
  ::com::elarian::hera::proto::PlayCallAction* release_play();
  ::com::elarian::hera::proto::PlayCallAction* mutable_play();
  void set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play);
  private:
  const ::com::elarian::hera::proto::PlayCallAction& _internal_play() const;
  ::com::elarian::hera::proto::PlayCallAction* _internal_mutable_play();
  public:
  void unsafe_arena_set_allocated_play(
      ::com::elarian::hera::proto::PlayCallAction* play);
  ::com::elarian::hera::proto::PlayCallAction* unsafe_arena_release_play();

  void clear_prompt();
  PromptCase prompt_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.GetDigitsCallAction)
 private:
  class _Internal;
  void set_has_say();
  void set_has_play();

  inline bool has_prompt() const;
  inline void clear_has_prompt();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Duration* timeout_;
  PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key_;
  PROTOBUF_NAMESPACE_ID::Int32Value* num_digits_;
  union PromptUnion {
    PromptUnion() {}
    ::com::elarian::hera::proto::SayCallAction* say_;
    ::com::elarian::hera::proto::PlayCallAction* play_;
  } prompt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class GetRecordingCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.GetRecordingCallAction) */ {
 public:
  inline GetRecordingCallAction() : GetRecordingCallAction(nullptr) {}
  virtual ~GetRecordingCallAction();

  GetRecordingCallAction(const GetRecordingCallAction& from);
  GetRecordingCallAction(GetRecordingCallAction&& from) noexcept
    : GetRecordingCallAction() {
    *this = ::std::move(from);
  }

  inline GetRecordingCallAction& operator=(const GetRecordingCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecordingCallAction& operator=(GetRecordingCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRecordingCallAction& default_instance();

  enum PromptCase {
    kSay = 1,
    kPlay = 2,
    PROMPT_NOT_SET = 0,
  };

  static inline const GetRecordingCallAction* internal_default_instance() {
    return reinterpret_cast<const GetRecordingCallAction*>(
               &_GetRecordingCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetRecordingCallAction& a, GetRecordingCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRecordingCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecordingCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetRecordingCallAction* New() const final {
    return CreateMaybeMessage<GetRecordingCallAction>(nullptr);
  }

  GetRecordingCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRecordingCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRecordingCallAction& from);
  void MergeFrom(const GetRecordingCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRecordingCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.GetRecordingCallAction";
  }
  protected:
  explicit GetRecordingCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeoutFieldNumber = 3,
    kMaxLengthFieldNumber = 4,
    kFinishOnKeyFieldNumber = 5,
    kPlayBeepFieldNumber = 6,
    kTrimSilenceFieldNumber = 7,
    kSayFieldNumber = 1,
    kPlayFieldNumber = 2,
  };
  // .google.protobuf.Duration timeout = 3;
  bool has_timeout() const;
  private:
  bool _internal_has_timeout() const;
  public:
  void clear_timeout();
  const PROTOBUF_NAMESPACE_ID::Duration& timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_timeout();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_timeout();
  void set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_timeout();
  public:
  void unsafe_arena_set_allocated_timeout(
      PROTOBUF_NAMESPACE_ID::Duration* timeout);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_timeout();

  // .google.protobuf.Duration max_length = 4;
  bool has_max_length() const;
  private:
  bool _internal_has_max_length() const;
  public:
  void clear_max_length();
  const PROTOBUF_NAMESPACE_ID::Duration& max_length() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_max_length();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_max_length();
  void set_allocated_max_length(PROTOBUF_NAMESPACE_ID::Duration* max_length);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_max_length() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_max_length();
  public:
  void unsafe_arena_set_allocated_max_length(
      PROTOBUF_NAMESPACE_ID::Duration* max_length);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_max_length();

  // .google.protobuf.StringValue finish_on_key = 5;
  bool has_finish_on_key() const;
  private:
  bool _internal_has_finish_on_key() const;
  public:
  void clear_finish_on_key();
  const PROTOBUF_NAMESPACE_ID::StringValue& finish_on_key() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_finish_on_key();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_finish_on_key();
  void set_allocated_finish_on_key(PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_finish_on_key() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_finish_on_key();
  public:
  void unsafe_arena_set_allocated_finish_on_key(
      PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_finish_on_key();

  // bool play_beep = 6;
  void clear_play_beep();
  bool play_beep() const;
  void set_play_beep(bool value);
  private:
  bool _internal_play_beep() const;
  void _internal_set_play_beep(bool value);
  public:

  // bool trim_silence = 7;
  void clear_trim_silence();
  bool trim_silence() const;
  void set_trim_silence(bool value);
  private:
  bool _internal_trim_silence() const;
  void _internal_set_trim_silence(bool value);
  public:

  // .com.elarian.hera.proto.SayCallAction say = 1;
  bool has_say() const;
  private:
  bool _internal_has_say() const;
  public:
  void clear_say();
  const ::com::elarian::hera::proto::SayCallAction& say() const;
  ::com::elarian::hera::proto::SayCallAction* release_say();
  ::com::elarian::hera::proto::SayCallAction* mutable_say();
  void set_allocated_say(::com::elarian::hera::proto::SayCallAction* say);
  private:
  const ::com::elarian::hera::proto::SayCallAction& _internal_say() const;
  ::com::elarian::hera::proto::SayCallAction* _internal_mutable_say();
  public:
  void unsafe_arena_set_allocated_say(
      ::com::elarian::hera::proto::SayCallAction* say);
  ::com::elarian::hera::proto::SayCallAction* unsafe_arena_release_say();

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  bool has_play() const;
  private:
  bool _internal_has_play() const;
  public:
  void clear_play();
  const ::com::elarian::hera::proto::PlayCallAction& play() const;
  ::com::elarian::hera::proto::PlayCallAction* release_play();
  ::com::elarian::hera::proto::PlayCallAction* mutable_play();
  void set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play);
  private:
  const ::com::elarian::hera::proto::PlayCallAction& _internal_play() const;
  ::com::elarian::hera::proto::PlayCallAction* _internal_mutable_play();
  public:
  void unsafe_arena_set_allocated_play(
      ::com::elarian::hera::proto::PlayCallAction* play);
  ::com::elarian::hera::proto::PlayCallAction* unsafe_arena_release_play();

  void clear_prompt();
  PromptCase prompt_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.GetRecordingCallAction)
 private:
  class _Internal;
  void set_has_say();
  void set_has_play();

  inline bool has_prompt() const;
  inline void clear_has_prompt();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Duration* timeout_;
  PROTOBUF_NAMESPACE_ID::Duration* max_length_;
  PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key_;
  bool play_beep_;
  bool trim_silence_;
  union PromptUnion {
    PromptUnion() {}
    ::com::elarian::hera::proto::SayCallAction* say_;
    ::com::elarian::hera::proto::PlayCallAction* play_;
  } prompt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class RecordSessionCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.RecordSessionCallAction) */ {
 public:
  inline RecordSessionCallAction() : RecordSessionCallAction(nullptr) {}
  virtual ~RecordSessionCallAction();

  RecordSessionCallAction(const RecordSessionCallAction& from);
  RecordSessionCallAction(RecordSessionCallAction&& from) noexcept
    : RecordSessionCallAction() {
    *this = ::std::move(from);
  }

  inline RecordSessionCallAction& operator=(const RecordSessionCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecordSessionCallAction& operator=(RecordSessionCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecordSessionCallAction& default_instance();

  static inline const RecordSessionCallAction* internal_default_instance() {
    return reinterpret_cast<const RecordSessionCallAction*>(
               &_RecordSessionCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RecordSessionCallAction& a, RecordSessionCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(RecordSessionCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecordSessionCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RecordSessionCallAction* New() const final {
    return CreateMaybeMessage<RecordSessionCallAction>(nullptr);
  }

  RecordSessionCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecordSessionCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecordSessionCallAction& from);
  void MergeFrom(const RecordSessionCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecordSessionCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.RecordSessionCallAction";
  }
  protected:
  explicit RecordSessionCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.RecordSessionCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DialCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.DialCallAction) */ {
 public:
  inline DialCallAction() : DialCallAction(nullptr) {}
  virtual ~DialCallAction();

  DialCallAction(const DialCallAction& from);
  DialCallAction(DialCallAction&& from) noexcept
    : DialCallAction() {
    *this = ::std::move(from);
  }

  inline DialCallAction& operator=(const DialCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline DialCallAction& operator=(DialCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DialCallAction& default_instance();

  static inline const DialCallAction* internal_default_instance() {
    return reinterpret_cast<const DialCallAction*>(
               &_DialCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(DialCallAction& a, DialCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(DialCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DialCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DialCallAction* New() const final {
    return CreateMaybeMessage<DialCallAction>(nullptr);
  }

  DialCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DialCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DialCallAction& from);
  void MergeFrom(const DialCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DialCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.DialCallAction";
  }
  protected:
  explicit DialCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomerNumbersFieldNumber = 1,
    kRingbackToneFieldNumber = 4,
    kCallerIdFieldNumber = 5,
    kMaxDurationFieldNumber = 6,
    kRecordFieldNumber = 2,
    kSequentialFieldNumber = 3,
  };
  // repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 1;
  int customer_numbers_size() const;
  private:
  int _internal_customer_numbers_size() const;
  public:
  void clear_customer_numbers();
  ::com::elarian::hera::proto::CustomerNumber* mutable_customer_numbers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >*
      mutable_customer_numbers();
  private:
  const ::com::elarian::hera::proto::CustomerNumber& _internal_customer_numbers(int index) const;
  ::com::elarian::hera::proto::CustomerNumber* _internal_add_customer_numbers();
  public:
  const ::com::elarian::hera::proto::CustomerNumber& customer_numbers(int index) const;
  ::com::elarian::hera::proto::CustomerNumber* add_customer_numbers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >&
      customer_numbers() const;

  // .google.protobuf.StringValue ringback_tone = 4;
  bool has_ringback_tone() const;
  private:
  bool _internal_has_ringback_tone() const;
  public:
  void clear_ringback_tone();
  const PROTOBUF_NAMESPACE_ID::StringValue& ringback_tone() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_ringback_tone();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_ringback_tone();
  void set_allocated_ringback_tone(PROTOBUF_NAMESPACE_ID::StringValue* ringback_tone);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_ringback_tone() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_ringback_tone();
  public:
  void unsafe_arena_set_allocated_ringback_tone(
      PROTOBUF_NAMESPACE_ID::StringValue* ringback_tone);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_ringback_tone();

  // .google.protobuf.StringValue caller_id = 5;
  bool has_caller_id() const;
  private:
  bool _internal_has_caller_id() const;
  public:
  void clear_caller_id();
  const PROTOBUF_NAMESPACE_ID::StringValue& caller_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_caller_id();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_caller_id();
  void set_allocated_caller_id(PROTOBUF_NAMESPACE_ID::StringValue* caller_id);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_caller_id() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_caller_id();
  public:
  void unsafe_arena_set_allocated_caller_id(
      PROTOBUF_NAMESPACE_ID::StringValue* caller_id);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_caller_id();

  // .google.protobuf.Int32Value max_duration = 6;
  bool has_max_duration() const;
  private:
  bool _internal_has_max_duration() const;
  public:
  void clear_max_duration();
  const PROTOBUF_NAMESPACE_ID::Int32Value& max_duration() const;
  PROTOBUF_NAMESPACE_ID::Int32Value* release_max_duration();
  PROTOBUF_NAMESPACE_ID::Int32Value* mutable_max_duration();
  void set_allocated_max_duration(PROTOBUF_NAMESPACE_ID::Int32Value* max_duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Int32Value& _internal_max_duration() const;
  PROTOBUF_NAMESPACE_ID::Int32Value* _internal_mutable_max_duration();
  public:
  void unsafe_arena_set_allocated_max_duration(
      PROTOBUF_NAMESPACE_ID::Int32Value* max_duration);
  PROTOBUF_NAMESPACE_ID::Int32Value* unsafe_arena_release_max_duration();

  // bool record = 2;
  void clear_record();
  bool record() const;
  void set_record(bool value);
  private:
  bool _internal_record() const;
  void _internal_set_record(bool value);
  public:

  // bool sequential = 3;
  void clear_sequential();
  bool sequential() const;
  void set_sequential(bool value);
  private:
  bool _internal_sequential() const;
  void _internal_set_sequential(bool value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.DialCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber > customer_numbers_;
  PROTOBUF_NAMESPACE_ID::StringValue* ringback_tone_;
  PROTOBUF_NAMESPACE_ID::StringValue* caller_id_;
  PROTOBUF_NAMESPACE_ID::Int32Value* max_duration_;
  bool record_;
  bool sequential_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class EnqueueCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.EnqueueCallAction) */ {
 public:
  inline EnqueueCallAction() : EnqueueCallAction(nullptr) {}
  virtual ~EnqueueCallAction();

  EnqueueCallAction(const EnqueueCallAction& from);
  EnqueueCallAction(EnqueueCallAction&& from) noexcept
    : EnqueueCallAction() {
    *this = ::std::move(from);
  }

  inline EnqueueCallAction& operator=(const EnqueueCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnqueueCallAction& operator=(EnqueueCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EnqueueCallAction& default_instance();

  static inline const EnqueueCallAction* internal_default_instance() {
    return reinterpret_cast<const EnqueueCallAction*>(
               &_EnqueueCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(EnqueueCallAction& a, EnqueueCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(EnqueueCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnqueueCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EnqueueCallAction* New() const final {
    return CreateMaybeMessage<EnqueueCallAction>(nullptr);
  }

  EnqueueCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EnqueueCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EnqueueCallAction& from);
  void MergeFrom(const EnqueueCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnqueueCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.EnqueueCallAction";
  }
  protected:
  explicit EnqueueCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHoldMusicFieldNumber = 1,
    kQueueNameFieldNumber = 2,
  };
  // .google.protobuf.StringValue hold_music = 1;
  bool has_hold_music() const;
  private:
  bool _internal_has_hold_music() const;
  public:
  void clear_hold_music();
  const PROTOBUF_NAMESPACE_ID::StringValue& hold_music() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_hold_music();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_hold_music();
  void set_allocated_hold_music(PROTOBUF_NAMESPACE_ID::StringValue* hold_music);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_hold_music() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_hold_music();
  public:
  void unsafe_arena_set_allocated_hold_music(
      PROTOBUF_NAMESPACE_ID::StringValue* hold_music);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_hold_music();

  // .google.protobuf.StringValue queue_name = 2;
  bool has_queue_name() const;
  private:
  bool _internal_has_queue_name() const;
  public:
  void clear_queue_name();
  const PROTOBUF_NAMESPACE_ID::StringValue& queue_name() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_queue_name();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_queue_name();
  void set_allocated_queue_name(PROTOBUF_NAMESPACE_ID::StringValue* queue_name);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_queue_name() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_queue_name();
  public:
  void unsafe_arena_set_allocated_queue_name(
      PROTOBUF_NAMESPACE_ID::StringValue* queue_name);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_queue_name();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.EnqueueCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::StringValue* hold_music_;
  PROTOBUF_NAMESPACE_ID::StringValue* queue_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class DequeueCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.DequeueCallAction) */ {
 public:
  inline DequeueCallAction() : DequeueCallAction(nullptr) {}
  virtual ~DequeueCallAction();

  DequeueCallAction(const DequeueCallAction& from);
  DequeueCallAction(DequeueCallAction&& from) noexcept
    : DequeueCallAction() {
    *this = ::std::move(from);
  }

  inline DequeueCallAction& operator=(const DequeueCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline DequeueCallAction& operator=(DequeueCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DequeueCallAction& default_instance();

  static inline const DequeueCallAction* internal_default_instance() {
    return reinterpret_cast<const DequeueCallAction*>(
               &_DequeueCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DequeueCallAction& a, DequeueCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(DequeueCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DequeueCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DequeueCallAction* New() const final {
    return CreateMaybeMessage<DequeueCallAction>(nullptr);
  }

  DequeueCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DequeueCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DequeueCallAction& from);
  void MergeFrom(const DequeueCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DequeueCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.DequeueCallAction";
  }
  protected:
  explicit DequeueCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelNumberFieldNumber = 1,
    kQueueNameFieldNumber = 3,
    kRecordFieldNumber = 2,
  };
  // .com.elarian.hera.proto.MessagingChannelNumber channel_number = 1;
  bool has_channel_number() const;
  private:
  bool _internal_has_channel_number() const;
  public:
  void clear_channel_number();
  const ::com::elarian::hera::proto::MessagingChannelNumber& channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* release_channel_number();
  ::com::elarian::hera::proto::MessagingChannelNumber* mutable_channel_number();
  void set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  private:
  const ::com::elarian::hera::proto::MessagingChannelNumber& _internal_channel_number() const;
  ::com::elarian::hera::proto::MessagingChannelNumber* _internal_mutable_channel_number();
  public:
  void unsafe_arena_set_allocated_channel_number(
      ::com::elarian::hera::proto::MessagingChannelNumber* channel_number);
  ::com::elarian::hera::proto::MessagingChannelNumber* unsafe_arena_release_channel_number();

  // .google.protobuf.StringValue queue_name = 3;
  bool has_queue_name() const;
  private:
  bool _internal_has_queue_name() const;
  public:
  void clear_queue_name();
  const PROTOBUF_NAMESPACE_ID::StringValue& queue_name() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_queue_name();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_queue_name();
  void set_allocated_queue_name(PROTOBUF_NAMESPACE_ID::StringValue* queue_name);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_queue_name() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_queue_name();
  public:
  void unsafe_arena_set_allocated_queue_name(
      PROTOBUF_NAMESPACE_ID::StringValue* queue_name);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_queue_name();

  // bool record = 2;
  void clear_record();
  bool record() const;
  void set_record(bool value);
  private:
  bool _internal_record() const;
  void _internal_set_record(bool value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.DequeueCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::com::elarian::hera::proto::MessagingChannelNumber* channel_number_;
  PROTOBUF_NAMESPACE_ID::StringValue* queue_name_;
  bool record_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class RejectCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.RejectCallAction) */ {
 public:
  inline RejectCallAction() : RejectCallAction(nullptr) {}
  virtual ~RejectCallAction();

  RejectCallAction(const RejectCallAction& from);
  RejectCallAction(RejectCallAction&& from) noexcept
    : RejectCallAction() {
    *this = ::std::move(from);
  }

  inline RejectCallAction& operator=(const RejectCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RejectCallAction& operator=(RejectCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RejectCallAction& default_instance();

  static inline const RejectCallAction* internal_default_instance() {
    return reinterpret_cast<const RejectCallAction*>(
               &_RejectCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RejectCallAction& a, RejectCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(RejectCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RejectCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RejectCallAction* New() const final {
    return CreateMaybeMessage<RejectCallAction>(nullptr);
  }

  RejectCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RejectCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RejectCallAction& from);
  void MergeFrom(const RejectCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RejectCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.RejectCallAction";
  }
  protected:
  explicit RejectCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.RejectCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class RedirectCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.RedirectCallAction) */ {
 public:
  inline RedirectCallAction() : RedirectCallAction(nullptr) {}
  virtual ~RedirectCallAction();

  RedirectCallAction(const RedirectCallAction& from);
  RedirectCallAction(RedirectCallAction&& from) noexcept
    : RedirectCallAction() {
    *this = ::std::move(from);
  }

  inline RedirectCallAction& operator=(const RedirectCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RedirectCallAction& operator=(RedirectCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RedirectCallAction& default_instance();

  static inline const RedirectCallAction* internal_default_instance() {
    return reinterpret_cast<const RedirectCallAction*>(
               &_RedirectCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(RedirectCallAction& a, RedirectCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(RedirectCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RedirectCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RedirectCallAction* New() const final {
    return CreateMaybeMessage<RedirectCallAction>(nullptr);
  }

  RedirectCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RedirectCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RedirectCallAction& from);
  void MergeFrom(const RedirectCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RedirectCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.RedirectCallAction";
  }
  protected:
  explicit RedirectCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.RedirectCallAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class VoiceCallAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.VoiceCallAction) */ {
 public:
  inline VoiceCallAction() : VoiceCallAction(nullptr) {}
  virtual ~VoiceCallAction();

  VoiceCallAction(const VoiceCallAction& from);
  VoiceCallAction(VoiceCallAction&& from) noexcept
    : VoiceCallAction() {
    *this = ::std::move(from);
  }

  inline VoiceCallAction& operator=(const VoiceCallAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceCallAction& operator=(VoiceCallAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceCallAction& default_instance();

  enum EntryCase {
    kSay = 1,
    kPlay = 2,
    kGetDigits = 3,
    kDial = 4,
    kRecordSession = 5,
    kGetRecording = 6,
    kEnqueue = 7,
    kDequeue = 8,
    kReject = 9,
    kRedirect = 10,
    ENTRY_NOT_SET = 0,
  };

  static inline const VoiceCallAction* internal_default_instance() {
    return reinterpret_cast<const VoiceCallAction*>(
               &_VoiceCallAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(VoiceCallAction& a, VoiceCallAction& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceCallAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceCallAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceCallAction* New() const final {
    return CreateMaybeMessage<VoiceCallAction>(nullptr);
  }

  VoiceCallAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceCallAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceCallAction& from);
  void MergeFrom(const VoiceCallAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceCallAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.VoiceCallAction";
  }
  protected:
  explicit VoiceCallAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSayFieldNumber = 1,
    kPlayFieldNumber = 2,
    kGetDigitsFieldNumber = 3,
    kDialFieldNumber = 4,
    kRecordSessionFieldNumber = 5,
    kGetRecordingFieldNumber = 6,
    kEnqueueFieldNumber = 7,
    kDequeueFieldNumber = 8,
    kRejectFieldNumber = 9,
    kRedirectFieldNumber = 10,
  };
  // .com.elarian.hera.proto.SayCallAction say = 1;
  bool has_say() const;
  private:
  bool _internal_has_say() const;
  public:
  void clear_say();
  const ::com::elarian::hera::proto::SayCallAction& say() const;
  ::com::elarian::hera::proto::SayCallAction* release_say();
  ::com::elarian::hera::proto::SayCallAction* mutable_say();
  void set_allocated_say(::com::elarian::hera::proto::SayCallAction* say);
  private:
  const ::com::elarian::hera::proto::SayCallAction& _internal_say() const;
  ::com::elarian::hera::proto::SayCallAction* _internal_mutable_say();
  public:
  void unsafe_arena_set_allocated_say(
      ::com::elarian::hera::proto::SayCallAction* say);
  ::com::elarian::hera::proto::SayCallAction* unsafe_arena_release_say();

  // .com.elarian.hera.proto.PlayCallAction play = 2;
  bool has_play() const;
  private:
  bool _internal_has_play() const;
  public:
  void clear_play();
  const ::com::elarian::hera::proto::PlayCallAction& play() const;
  ::com::elarian::hera::proto::PlayCallAction* release_play();
  ::com::elarian::hera::proto::PlayCallAction* mutable_play();
  void set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play);
  private:
  const ::com::elarian::hera::proto::PlayCallAction& _internal_play() const;
  ::com::elarian::hera::proto::PlayCallAction* _internal_mutable_play();
  public:
  void unsafe_arena_set_allocated_play(
      ::com::elarian::hera::proto::PlayCallAction* play);
  ::com::elarian::hera::proto::PlayCallAction* unsafe_arena_release_play();

  // .com.elarian.hera.proto.GetDigitsCallAction get_digits = 3;
  bool has_get_digits() const;
  private:
  bool _internal_has_get_digits() const;
  public:
  void clear_get_digits();
  const ::com::elarian::hera::proto::GetDigitsCallAction& get_digits() const;
  ::com::elarian::hera::proto::GetDigitsCallAction* release_get_digits();
  ::com::elarian::hera::proto::GetDigitsCallAction* mutable_get_digits();
  void set_allocated_get_digits(::com::elarian::hera::proto::GetDigitsCallAction* get_digits);
  private:
  const ::com::elarian::hera::proto::GetDigitsCallAction& _internal_get_digits() const;
  ::com::elarian::hera::proto::GetDigitsCallAction* _internal_mutable_get_digits();
  public:
  void unsafe_arena_set_allocated_get_digits(
      ::com::elarian::hera::proto::GetDigitsCallAction* get_digits);
  ::com::elarian::hera::proto::GetDigitsCallAction* unsafe_arena_release_get_digits();

  // .com.elarian.hera.proto.DialCallAction dial = 4;
  bool has_dial() const;
  private:
  bool _internal_has_dial() const;
  public:
  void clear_dial();
  const ::com::elarian::hera::proto::DialCallAction& dial() const;
  ::com::elarian::hera::proto::DialCallAction* release_dial();
  ::com::elarian::hera::proto::DialCallAction* mutable_dial();
  void set_allocated_dial(::com::elarian::hera::proto::DialCallAction* dial);
  private:
  const ::com::elarian::hera::proto::DialCallAction& _internal_dial() const;
  ::com::elarian::hera::proto::DialCallAction* _internal_mutable_dial();
  public:
  void unsafe_arena_set_allocated_dial(
      ::com::elarian::hera::proto::DialCallAction* dial);
  ::com::elarian::hera::proto::DialCallAction* unsafe_arena_release_dial();

  // .com.elarian.hera.proto.RecordSessionCallAction record_session = 5;
  bool has_record_session() const;
  private:
  bool _internal_has_record_session() const;
  public:
  void clear_record_session();
  const ::com::elarian::hera::proto::RecordSessionCallAction& record_session() const;
  ::com::elarian::hera::proto::RecordSessionCallAction* release_record_session();
  ::com::elarian::hera::proto::RecordSessionCallAction* mutable_record_session();
  void set_allocated_record_session(::com::elarian::hera::proto::RecordSessionCallAction* record_session);
  private:
  const ::com::elarian::hera::proto::RecordSessionCallAction& _internal_record_session() const;
  ::com::elarian::hera::proto::RecordSessionCallAction* _internal_mutable_record_session();
  public:
  void unsafe_arena_set_allocated_record_session(
      ::com::elarian::hera::proto::RecordSessionCallAction* record_session);
  ::com::elarian::hera::proto::RecordSessionCallAction* unsafe_arena_release_record_session();

  // .com.elarian.hera.proto.GetRecordingCallAction get_recording = 6;
  bool has_get_recording() const;
  private:
  bool _internal_has_get_recording() const;
  public:
  void clear_get_recording();
  const ::com::elarian::hera::proto::GetRecordingCallAction& get_recording() const;
  ::com::elarian::hera::proto::GetRecordingCallAction* release_get_recording();
  ::com::elarian::hera::proto::GetRecordingCallAction* mutable_get_recording();
  void set_allocated_get_recording(::com::elarian::hera::proto::GetRecordingCallAction* get_recording);
  private:
  const ::com::elarian::hera::proto::GetRecordingCallAction& _internal_get_recording() const;
  ::com::elarian::hera::proto::GetRecordingCallAction* _internal_mutable_get_recording();
  public:
  void unsafe_arena_set_allocated_get_recording(
      ::com::elarian::hera::proto::GetRecordingCallAction* get_recording);
  ::com::elarian::hera::proto::GetRecordingCallAction* unsafe_arena_release_get_recording();

  // .com.elarian.hera.proto.EnqueueCallAction enqueue = 7;
  bool has_enqueue() const;
  private:
  bool _internal_has_enqueue() const;
  public:
  void clear_enqueue();
  const ::com::elarian::hera::proto::EnqueueCallAction& enqueue() const;
  ::com::elarian::hera::proto::EnqueueCallAction* release_enqueue();
  ::com::elarian::hera::proto::EnqueueCallAction* mutable_enqueue();
  void set_allocated_enqueue(::com::elarian::hera::proto::EnqueueCallAction* enqueue);
  private:
  const ::com::elarian::hera::proto::EnqueueCallAction& _internal_enqueue() const;
  ::com::elarian::hera::proto::EnqueueCallAction* _internal_mutable_enqueue();
  public:
  void unsafe_arena_set_allocated_enqueue(
      ::com::elarian::hera::proto::EnqueueCallAction* enqueue);
  ::com::elarian::hera::proto::EnqueueCallAction* unsafe_arena_release_enqueue();

  // .com.elarian.hera.proto.DequeueCallAction dequeue = 8;
  bool has_dequeue() const;
  private:
  bool _internal_has_dequeue() const;
  public:
  void clear_dequeue();
  const ::com::elarian::hera::proto::DequeueCallAction& dequeue() const;
  ::com::elarian::hera::proto::DequeueCallAction* release_dequeue();
  ::com::elarian::hera::proto::DequeueCallAction* mutable_dequeue();
  void set_allocated_dequeue(::com::elarian::hera::proto::DequeueCallAction* dequeue);
  private:
  const ::com::elarian::hera::proto::DequeueCallAction& _internal_dequeue() const;
  ::com::elarian::hera::proto::DequeueCallAction* _internal_mutable_dequeue();
  public:
  void unsafe_arena_set_allocated_dequeue(
      ::com::elarian::hera::proto::DequeueCallAction* dequeue);
  ::com::elarian::hera::proto::DequeueCallAction* unsafe_arena_release_dequeue();

  // .com.elarian.hera.proto.RejectCallAction reject = 9;
  bool has_reject() const;
  private:
  bool _internal_has_reject() const;
  public:
  void clear_reject();
  const ::com::elarian::hera::proto::RejectCallAction& reject() const;
  ::com::elarian::hera::proto::RejectCallAction* release_reject();
  ::com::elarian::hera::proto::RejectCallAction* mutable_reject();
  void set_allocated_reject(::com::elarian::hera::proto::RejectCallAction* reject);
  private:
  const ::com::elarian::hera::proto::RejectCallAction& _internal_reject() const;
  ::com::elarian::hera::proto::RejectCallAction* _internal_mutable_reject();
  public:
  void unsafe_arena_set_allocated_reject(
      ::com::elarian::hera::proto::RejectCallAction* reject);
  ::com::elarian::hera::proto::RejectCallAction* unsafe_arena_release_reject();

  // .com.elarian.hera.proto.RedirectCallAction redirect = 10;
  bool has_redirect() const;
  private:
  bool _internal_has_redirect() const;
  public:
  void clear_redirect();
  const ::com::elarian::hera::proto::RedirectCallAction& redirect() const;
  ::com::elarian::hera::proto::RedirectCallAction* release_redirect();
  ::com::elarian::hera::proto::RedirectCallAction* mutable_redirect();
  void set_allocated_redirect(::com::elarian::hera::proto::RedirectCallAction* redirect);
  private:
  const ::com::elarian::hera::proto::RedirectCallAction& _internal_redirect() const;
  ::com::elarian::hera::proto::RedirectCallAction* _internal_mutable_redirect();
  public:
  void unsafe_arena_set_allocated_redirect(
      ::com::elarian::hera::proto::RedirectCallAction* redirect);
  ::com::elarian::hera::proto::RedirectCallAction* unsafe_arena_release_redirect();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.VoiceCallAction)
 private:
  class _Internal;
  void set_has_say();
  void set_has_play();
  void set_has_get_digits();
  void set_has_dial();
  void set_has_record_session();
  void set_has_get_recording();
  void set_has_enqueue();
  void set_has_dequeue();
  void set_has_reject();
  void set_has_redirect();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::com::elarian::hera::proto::SayCallAction* say_;
    ::com::elarian::hera::proto::PlayCallAction* play_;
    ::com::elarian::hera::proto::GetDigitsCallAction* get_digits_;
    ::com::elarian::hera::proto::DialCallAction* dial_;
    ::com::elarian::hera::proto::RecordSessionCallAction* record_session_;
    ::com::elarian::hera::proto::GetRecordingCallAction* get_recording_;
    ::com::elarian::hera::proto::EnqueueCallAction* enqueue_;
    ::com::elarian::hera::proto::DequeueCallAction* dequeue_;
    ::com::elarian::hera::proto::RejectCallAction* reject_;
    ::com::elarian::hera::proto::RedirectCallAction* redirect_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class VoiceCallDialplanMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.VoiceCallDialplanMessageBody) */ {
 public:
  inline VoiceCallDialplanMessageBody() : VoiceCallDialplanMessageBody(nullptr) {}
  virtual ~VoiceCallDialplanMessageBody();

  VoiceCallDialplanMessageBody(const VoiceCallDialplanMessageBody& from);
  VoiceCallDialplanMessageBody(VoiceCallDialplanMessageBody&& from) noexcept
    : VoiceCallDialplanMessageBody() {
    *this = ::std::move(from);
  }

  inline VoiceCallDialplanMessageBody& operator=(const VoiceCallDialplanMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceCallDialplanMessageBody& operator=(VoiceCallDialplanMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceCallDialplanMessageBody& default_instance();

  static inline const VoiceCallDialplanMessageBody* internal_default_instance() {
    return reinterpret_cast<const VoiceCallDialplanMessageBody*>(
               &_VoiceCallDialplanMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(VoiceCallDialplanMessageBody& a, VoiceCallDialplanMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceCallDialplanMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceCallDialplanMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceCallDialplanMessageBody* New() const final {
    return CreateMaybeMessage<VoiceCallDialplanMessageBody>(nullptr);
  }

  VoiceCallDialplanMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceCallDialplanMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceCallDialplanMessageBody& from);
  void MergeFrom(const VoiceCallDialplanMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceCallDialplanMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.VoiceCallDialplanMessageBody";
  }
  protected:
  explicit VoiceCallDialplanMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 1,
  };
  // repeated .com.elarian.hera.proto.VoiceCallAction actions = 1;
  int actions_size() const;
  private:
  int _internal_actions_size() const;
  public:
  void clear_actions();
  ::com::elarian::hera::proto::VoiceCallAction* mutable_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::VoiceCallAction >*
      mutable_actions();
  private:
  const ::com::elarian::hera::proto::VoiceCallAction& _internal_actions(int index) const;
  ::com::elarian::hera::proto::VoiceCallAction* _internal_add_actions();
  public:
  const ::com::elarian::hera::proto::VoiceCallAction& actions(int index) const;
  ::com::elarian::hera::proto::VoiceCallAction* add_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::VoiceCallAction >&
      actions() const;

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.VoiceCallDialplanMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::VoiceCallAction > actions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class VoiceCallDialInput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.VoiceCallDialInput) */ {
 public:
  inline VoiceCallDialInput() : VoiceCallDialInput(nullptr) {}
  virtual ~VoiceCallDialInput();

  VoiceCallDialInput(const VoiceCallDialInput& from);
  VoiceCallDialInput(VoiceCallDialInput&& from) noexcept
    : VoiceCallDialInput() {
    *this = ::std::move(from);
  }

  inline VoiceCallDialInput& operator=(const VoiceCallDialInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceCallDialInput& operator=(VoiceCallDialInput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceCallDialInput& default_instance();

  static inline const VoiceCallDialInput* internal_default_instance() {
    return reinterpret_cast<const VoiceCallDialInput*>(
               &_VoiceCallDialInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(VoiceCallDialInput& a, VoiceCallDialInput& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceCallDialInput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceCallDialInput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceCallDialInput* New() const final {
    return CreateMaybeMessage<VoiceCallDialInput>(nullptr);
  }

  VoiceCallDialInput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceCallDialInput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceCallDialInput& from);
  void MergeFrom(const VoiceCallDialInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceCallDialInput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.VoiceCallDialInput";
  }
  protected:
  explicit VoiceCallDialInput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDestinationNumberFieldNumber = 1,
    kStartedAtFieldNumber = 2,
    kDurationFieldNumber = 3,
  };
  // string destination_number = 1;
  void clear_destination_number();
  const std::string& destination_number() const;
  void set_destination_number(const std::string& value);
  void set_destination_number(std::string&& value);
  void set_destination_number(const char* value);
  void set_destination_number(const char* value, size_t size);
  std::string* mutable_destination_number();
  std::string* release_destination_number();
  void set_allocated_destination_number(std::string* destination_number);
  private:
  const std::string& _internal_destination_number() const;
  void _internal_set_destination_number(const std::string& value);
  std::string* _internal_mutable_destination_number();
  public:

  // .google.protobuf.Timestamp started_at = 2;
  bool has_started_at() const;
  private:
  bool _internal_has_started_at() const;
  public:
  void clear_started_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& started_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_started_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_started_at();
  void set_allocated_started_at(PROTOBUF_NAMESPACE_ID::Timestamp* started_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_started_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_started_at();
  public:
  void unsafe_arena_set_allocated_started_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* started_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_started_at();

  // .google.protobuf.Duration duration = 3;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  const PROTOBUF_NAMESPACE_ID::Duration& duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_duration();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_duration();
  void set_allocated_duration(PROTOBUF_NAMESPACE_ID::Duration* duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_duration();
  public:
  void unsafe_arena_set_allocated_duration(
      PROTOBUF_NAMESPACE_ID::Duration* duration);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_duration();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.VoiceCallDialInput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr destination_number_;
  PROTOBUF_NAMESPACE_ID::Timestamp* started_at_;
  PROTOBUF_NAMESPACE_ID::Duration* duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class VoiceCallQueueInput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.VoiceCallQueueInput) */ {
 public:
  inline VoiceCallQueueInput() : VoiceCallQueueInput(nullptr) {}
  virtual ~VoiceCallQueueInput();

  VoiceCallQueueInput(const VoiceCallQueueInput& from);
  VoiceCallQueueInput(VoiceCallQueueInput&& from) noexcept
    : VoiceCallQueueInput() {
    *this = ::std::move(from);
  }

  inline VoiceCallQueueInput& operator=(const VoiceCallQueueInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceCallQueueInput& operator=(VoiceCallQueueInput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceCallQueueInput& default_instance();

  static inline const VoiceCallQueueInput* internal_default_instance() {
    return reinterpret_cast<const VoiceCallQueueInput*>(
               &_VoiceCallQueueInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(VoiceCallQueueInput& a, VoiceCallQueueInput& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceCallQueueInput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceCallQueueInput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceCallQueueInput* New() const final {
    return CreateMaybeMessage<VoiceCallQueueInput>(nullptr);
  }

  VoiceCallQueueInput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceCallQueueInput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceCallQueueInput& from);
  void MergeFrom(const VoiceCallQueueInput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceCallQueueInput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.VoiceCallQueueInput";
  }
  protected:
  explicit VoiceCallQueueInput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnqueuedAtFieldNumber = 1,
    kDequeuedAtFieldNumber = 2,
    kDequeuedToNumberFieldNumber = 3,
    kDequeuedToSessionIdFieldNumber = 4,
    kQueueDurationFieldNumber = 5,
  };
  // .google.protobuf.Timestamp enqueued_at = 1;
  bool has_enqueued_at() const;
  private:
  bool _internal_has_enqueued_at() const;
  public:
  void clear_enqueued_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& enqueued_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_enqueued_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_enqueued_at();
  void set_allocated_enqueued_at(PROTOBUF_NAMESPACE_ID::Timestamp* enqueued_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_enqueued_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_enqueued_at();
  public:
  void unsafe_arena_set_allocated_enqueued_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* enqueued_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_enqueued_at();

  // .google.protobuf.Timestamp dequeued_at = 2;
  bool has_dequeued_at() const;
  private:
  bool _internal_has_dequeued_at() const;
  public:
  void clear_dequeued_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& dequeued_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_dequeued_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_dequeued_at();
  void set_allocated_dequeued_at(PROTOBUF_NAMESPACE_ID::Timestamp* dequeued_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_dequeued_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_dequeued_at();
  public:
  void unsafe_arena_set_allocated_dequeued_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* dequeued_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_dequeued_at();

  // .google.protobuf.StringValue dequeued_to_number = 3;
  bool has_dequeued_to_number() const;
  private:
  bool _internal_has_dequeued_to_number() const;
  public:
  void clear_dequeued_to_number();
  const PROTOBUF_NAMESPACE_ID::StringValue& dequeued_to_number() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_dequeued_to_number();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_dequeued_to_number();
  void set_allocated_dequeued_to_number(PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_number);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_dequeued_to_number() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_dequeued_to_number();
  public:
  void unsafe_arena_set_allocated_dequeued_to_number(
      PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_number);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_dequeued_to_number();

  // .google.protobuf.StringValue dequeued_to_sessionId = 4;
  bool has_dequeued_to_sessionid() const;
  private:
  bool _internal_has_dequeued_to_sessionid() const;
  public:
  void clear_dequeued_to_sessionid();
  const PROTOBUF_NAMESPACE_ID::StringValue& dequeued_to_sessionid() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_dequeued_to_sessionid();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_dequeued_to_sessionid();
  void set_allocated_dequeued_to_sessionid(PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_sessionid);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_dequeued_to_sessionid() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_dequeued_to_sessionid();
  public:
  void unsafe_arena_set_allocated_dequeued_to_sessionid(
      PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_sessionid);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_dequeued_to_sessionid();

  // .google.protobuf.Duration queue_duration = 5;
  bool has_queue_duration() const;
  private:
  bool _internal_has_queue_duration() const;
  public:
  void clear_queue_duration();
  const PROTOBUF_NAMESPACE_ID::Duration& queue_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_queue_duration();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_queue_duration();
  void set_allocated_queue_duration(PROTOBUF_NAMESPACE_ID::Duration* queue_duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_queue_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_queue_duration();
  public:
  void unsafe_arena_set_allocated_queue_duration(
      PROTOBUF_NAMESPACE_ID::Duration* queue_duration);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_queue_duration();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.VoiceCallQueueInput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Timestamp* enqueued_at_;
  PROTOBUF_NAMESPACE_ID::Timestamp* dequeued_at_;
  PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_number_;
  PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_sessionid_;
  PROTOBUF_NAMESPACE_ID::Duration* queue_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class VoiceCallInputMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.VoiceCallInputMessageBody) */ {
 public:
  inline VoiceCallInputMessageBody() : VoiceCallInputMessageBody(nullptr) {}
  virtual ~VoiceCallInputMessageBody();

  VoiceCallInputMessageBody(const VoiceCallInputMessageBody& from);
  VoiceCallInputMessageBody(VoiceCallInputMessageBody&& from) noexcept
    : VoiceCallInputMessageBody() {
    *this = ::std::move(from);
  }

  inline VoiceCallInputMessageBody& operator=(const VoiceCallInputMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline VoiceCallInputMessageBody& operator=(VoiceCallInputMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VoiceCallInputMessageBody& default_instance();

  static inline const VoiceCallInputMessageBody* internal_default_instance() {
    return reinterpret_cast<const VoiceCallInputMessageBody*>(
               &_VoiceCallInputMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(VoiceCallInputMessageBody& a, VoiceCallInputMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(VoiceCallInputMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VoiceCallInputMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VoiceCallInputMessageBody* New() const final {
    return CreateMaybeMessage<VoiceCallInputMessageBody>(nullptr);
  }

  VoiceCallInputMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VoiceCallInputMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VoiceCallInputMessageBody& from);
  void MergeFrom(const VoiceCallInputMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoiceCallInputMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.VoiceCallInputMessageBody";
  }
  protected:
  explicit VoiceCallInputMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartedAtFieldNumber = 3,
    kDtmfDigitsFieldNumber = 5,
    kRecordingUrlFieldNumber = 6,
    kDialDataFieldNumber = 7,
    kQueueDataFieldNumber = 8,
    kDirectionFieldNumber = 1,
    kStatusFieldNumber = 2,
    kHangupCauseFieldNumber = 4,
  };
  // .google.protobuf.Timestamp started_at = 3;
  bool has_started_at() const;
  private:
  bool _internal_has_started_at() const;
  public:
  void clear_started_at();
  const PROTOBUF_NAMESPACE_ID::Timestamp& started_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_started_at();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_started_at();
  void set_allocated_started_at(PROTOBUF_NAMESPACE_ID::Timestamp* started_at);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_started_at() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_started_at();
  public:
  void unsafe_arena_set_allocated_started_at(
      PROTOBUF_NAMESPACE_ID::Timestamp* started_at);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_started_at();

  // .google.protobuf.StringValue dtmf_digits = 5;
  bool has_dtmf_digits() const;
  private:
  bool _internal_has_dtmf_digits() const;
  public:
  void clear_dtmf_digits();
  const PROTOBUF_NAMESPACE_ID::StringValue& dtmf_digits() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_dtmf_digits();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_dtmf_digits();
  void set_allocated_dtmf_digits(PROTOBUF_NAMESPACE_ID::StringValue* dtmf_digits);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_dtmf_digits() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_dtmf_digits();
  public:
  void unsafe_arena_set_allocated_dtmf_digits(
      PROTOBUF_NAMESPACE_ID::StringValue* dtmf_digits);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_dtmf_digits();

  // .google.protobuf.StringValue recording_url = 6;
  bool has_recording_url() const;
  private:
  bool _internal_has_recording_url() const;
  public:
  void clear_recording_url();
  const PROTOBUF_NAMESPACE_ID::StringValue& recording_url() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_recording_url();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_recording_url();
  void set_allocated_recording_url(PROTOBUF_NAMESPACE_ID::StringValue* recording_url);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_recording_url() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_recording_url();
  public:
  void unsafe_arena_set_allocated_recording_url(
      PROTOBUF_NAMESPACE_ID::StringValue* recording_url);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_recording_url();

  // .com.elarian.hera.proto.VoiceCallDialInput dial_data = 7;
  bool has_dial_data() const;
  private:
  bool _internal_has_dial_data() const;
  public:
  void clear_dial_data();
  const ::com::elarian::hera::proto::VoiceCallDialInput& dial_data() const;
  ::com::elarian::hera::proto::VoiceCallDialInput* release_dial_data();
  ::com::elarian::hera::proto::VoiceCallDialInput* mutable_dial_data();
  void set_allocated_dial_data(::com::elarian::hera::proto::VoiceCallDialInput* dial_data);
  private:
  const ::com::elarian::hera::proto::VoiceCallDialInput& _internal_dial_data() const;
  ::com::elarian::hera::proto::VoiceCallDialInput* _internal_mutable_dial_data();
  public:
  void unsafe_arena_set_allocated_dial_data(
      ::com::elarian::hera::proto::VoiceCallDialInput* dial_data);
  ::com::elarian::hera::proto::VoiceCallDialInput* unsafe_arena_release_dial_data();

  // .com.elarian.hera.proto.VoiceCallQueueInput queue_data = 8;
  bool has_queue_data() const;
  private:
  bool _internal_has_queue_data() const;
  public:
  void clear_queue_data();
  const ::com::elarian::hera::proto::VoiceCallQueueInput& queue_data() const;
  ::com::elarian::hera::proto::VoiceCallQueueInput* release_queue_data();
  ::com::elarian::hera::proto::VoiceCallQueueInput* mutable_queue_data();
  void set_allocated_queue_data(::com::elarian::hera::proto::VoiceCallQueueInput* queue_data);
  private:
  const ::com::elarian::hera::proto::VoiceCallQueueInput& _internal_queue_data() const;
  ::com::elarian::hera::proto::VoiceCallQueueInput* _internal_mutable_queue_data();
  public:
  void unsafe_arena_set_allocated_queue_data(
      ::com::elarian::hera::proto::VoiceCallQueueInput* queue_data);
  ::com::elarian::hera::proto::VoiceCallQueueInput* unsafe_arena_release_queue_data();

  // .com.elarian.hera.proto.CustomerEventDirection direction = 1;
  void clear_direction();
  ::com::elarian::hera::proto::CustomerEventDirection direction() const;
  void set_direction(::com::elarian::hera::proto::CustomerEventDirection value);
  private:
  ::com::elarian::hera::proto::CustomerEventDirection _internal_direction() const;
  void _internal_set_direction(::com::elarian::hera::proto::CustomerEventDirection value);
  public:

  // .com.elarian.hera.proto.VoiceCallStatus status = 2;
  void clear_status();
  ::com::elarian::hera::proto::VoiceCallStatus status() const;
  void set_status(::com::elarian::hera::proto::VoiceCallStatus value);
  private:
  ::com::elarian::hera::proto::VoiceCallStatus _internal_status() const;
  void _internal_set_status(::com::elarian::hera::proto::VoiceCallStatus value);
  public:

  // .com.elarian.hera.proto.VoiceCallHangupCause hangup_cause = 4;
  void clear_hangup_cause();
  ::com::elarian::hera::proto::VoiceCallHangupCause hangup_cause() const;
  void set_hangup_cause(::com::elarian::hera::proto::VoiceCallHangupCause value);
  private:
  ::com::elarian::hera::proto::VoiceCallHangupCause _internal_hangup_cause() const;
  void _internal_set_hangup_cause(::com::elarian::hera::proto::VoiceCallHangupCause value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.VoiceCallInputMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::Timestamp* started_at_;
  PROTOBUF_NAMESPACE_ID::StringValue* dtmf_digits_;
  PROTOBUF_NAMESPACE_ID::StringValue* recording_url_;
  ::com::elarian::hera::proto::VoiceCallDialInput* dial_data_;
  ::com::elarian::hera::proto::VoiceCallQueueInput* queue_data_;
  int direction_;
  int status_;
  int hangup_cause_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class UssdInputMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.UssdInputMessageBody) */ {
 public:
  inline UssdInputMessageBody() : UssdInputMessageBody(nullptr) {}
  virtual ~UssdInputMessageBody();

  UssdInputMessageBody(const UssdInputMessageBody& from);
  UssdInputMessageBody(UssdInputMessageBody&& from) noexcept
    : UssdInputMessageBody() {
    *this = ::std::move(from);
  }

  inline UssdInputMessageBody& operator=(const UssdInputMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline UssdInputMessageBody& operator=(UssdInputMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UssdInputMessageBody& default_instance();

  static inline const UssdInputMessageBody* internal_default_instance() {
    return reinterpret_cast<const UssdInputMessageBody*>(
               &_UssdInputMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(UssdInputMessageBody& a, UssdInputMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(UssdInputMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UssdInputMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UssdInputMessageBody* New() const final {
    return CreateMaybeMessage<UssdInputMessageBody>(nullptr);
  }

  UssdInputMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UssdInputMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UssdInputMessageBody& from);
  void MergeFrom(const UssdInputMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UssdInputMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.UssdInputMessageBody";
  }
  protected:
  explicit UssdInputMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // .google.protobuf.StringValue text = 2;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const PROTOBUF_NAMESPACE_ID::StringValue& text() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_text();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_text();
  void set_allocated_text(PROTOBUF_NAMESPACE_ID::StringValue* text);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_text() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_text();
  public:
  void unsafe_arena_set_allocated_text(
      PROTOBUF_NAMESPACE_ID::StringValue* text);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_text();

  // .com.elarian.hera.proto.UssdSessionStatus status = 1;
  void clear_status();
  ::com::elarian::hera::proto::UssdSessionStatus status() const;
  void set_status(::com::elarian::hera::proto::UssdSessionStatus value);
  private:
  ::com::elarian::hera::proto::UssdSessionStatus _internal_status() const;
  void _internal_set_status(::com::elarian::hera::proto::UssdSessionStatus value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.UssdInputMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  PROTOBUF_NAMESPACE_ID::StringValue* text_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class UssdMenuMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.UssdMenuMessageBody) */ {
 public:
  inline UssdMenuMessageBody() : UssdMenuMessageBody(nullptr) {}
  virtual ~UssdMenuMessageBody();

  UssdMenuMessageBody(const UssdMenuMessageBody& from);
  UssdMenuMessageBody(UssdMenuMessageBody&& from) noexcept
    : UssdMenuMessageBody() {
    *this = ::std::move(from);
  }

  inline UssdMenuMessageBody& operator=(const UssdMenuMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline UssdMenuMessageBody& operator=(UssdMenuMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UssdMenuMessageBody& default_instance();

  static inline const UssdMenuMessageBody* internal_default_instance() {
    return reinterpret_cast<const UssdMenuMessageBody*>(
               &_UssdMenuMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(UssdMenuMessageBody& a, UssdMenuMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(UssdMenuMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UssdMenuMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UssdMenuMessageBody* New() const final {
    return CreateMaybeMessage<UssdMenuMessageBody>(nullptr);
  }

  UssdMenuMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UssdMenuMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UssdMenuMessageBody& from);
  void MergeFrom(const UssdMenuMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UssdMenuMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.UssdMenuMessageBody";
  }
  protected:
  explicit UssdMenuMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kIsTerminalFieldNumber = 2,
  };
  // string text = 1;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // bool is_terminal = 2;
  void clear_is_terminal();
  bool is_terminal() const;
  void set_is_terminal(bool value);
  private:
  bool _internal_is_terminal() const;
  void _internal_set_is_terminal(bool value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.UssdMenuMessageBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  bool is_terminal_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class OutboundMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.OutboundMessageBody) */ {
 public:
  inline OutboundMessageBody() : OutboundMessageBody(nullptr) {}
  virtual ~OutboundMessageBody();

  OutboundMessageBody(const OutboundMessageBody& from);
  OutboundMessageBody(OutboundMessageBody&& from) noexcept
    : OutboundMessageBody() {
    *this = ::std::move(from);
  }

  inline OutboundMessageBody& operator=(const OutboundMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutboundMessageBody& operator=(OutboundMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OutboundMessageBody& default_instance();

  enum EntryCase {
    kText = 1,
    kMedia = 2,
    kLocation = 3,
    kEmail = 4,
    kTemplate = 5,
    kUrl = 6,
    kVoice = 7,
    kUssd = 8,
    ENTRY_NOT_SET = 0,
  };

  static inline const OutboundMessageBody* internal_default_instance() {
    return reinterpret_cast<const OutboundMessageBody*>(
               &_OutboundMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(OutboundMessageBody& a, OutboundMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(OutboundMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutboundMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OutboundMessageBody* New() const final {
    return CreateMaybeMessage<OutboundMessageBody>(nullptr);
  }

  OutboundMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OutboundMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OutboundMessageBody& from);
  void MergeFrom(const OutboundMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OutboundMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.OutboundMessageBody";
  }
  protected:
  explicit OutboundMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kMediaFieldNumber = 2,
    kLocationFieldNumber = 3,
    kEmailFieldNumber = 4,
    kTemplateFieldNumber = 5,
    kUrlFieldNumber = 6,
    kVoiceFieldNumber = 7,
    kUssdFieldNumber = 8,
  };
  // string text = 1;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // .com.elarian.hera.proto.MediaMessageBody media = 2;
  bool has_media() const;
  private:
  bool _internal_has_media() const;
  public:
  void clear_media();
  const ::com::elarian::hera::proto::MediaMessageBody& media() const;
  ::com::elarian::hera::proto::MediaMessageBody* release_media();
  ::com::elarian::hera::proto::MediaMessageBody* mutable_media();
  void set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media);
  private:
  const ::com::elarian::hera::proto::MediaMessageBody& _internal_media() const;
  ::com::elarian::hera::proto::MediaMessageBody* _internal_mutable_media();
  public:
  void unsafe_arena_set_allocated_media(
      ::com::elarian::hera::proto::MediaMessageBody* media);
  ::com::elarian::hera::proto::MediaMessageBody* unsafe_arena_release_media();

  // .com.elarian.hera.proto.LocationMessageBody location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::com::elarian::hera::proto::LocationMessageBody& location() const;
  ::com::elarian::hera::proto::LocationMessageBody* release_location();
  ::com::elarian::hera::proto::LocationMessageBody* mutable_location();
  void set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location);
  private:
  const ::com::elarian::hera::proto::LocationMessageBody& _internal_location() const;
  ::com::elarian::hera::proto::LocationMessageBody* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::com::elarian::hera::proto::LocationMessageBody* location);
  ::com::elarian::hera::proto::LocationMessageBody* unsafe_arena_release_location();

  // .com.elarian.hera.proto.EmailMessageBody email = 4;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const ::com::elarian::hera::proto::EmailMessageBody& email() const;
  ::com::elarian::hera::proto::EmailMessageBody* release_email();
  ::com::elarian::hera::proto::EmailMessageBody* mutable_email();
  void set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email);
  private:
  const ::com::elarian::hera::proto::EmailMessageBody& _internal_email() const;
  ::com::elarian::hera::proto::EmailMessageBody* _internal_mutable_email();
  public:
  void unsafe_arena_set_allocated_email(
      ::com::elarian::hera::proto::EmailMessageBody* email);
  ::com::elarian::hera::proto::EmailMessageBody* unsafe_arena_release_email();

  // .com.elarian.hera.proto.TemplateMessageBody template = 5;
  bool has_template_() const;
  private:
  bool _internal_has_template_() const;
  public:
  void clear_template_();
  const ::com::elarian::hera::proto::TemplateMessageBody& template_() const;
  ::com::elarian::hera::proto::TemplateMessageBody* release_template_();
  ::com::elarian::hera::proto::TemplateMessageBody* mutable_template_();
  void set_allocated_template_(::com::elarian::hera::proto::TemplateMessageBody* template_);
  private:
  const ::com::elarian::hera::proto::TemplateMessageBody& _internal_template_() const;
  ::com::elarian::hera::proto::TemplateMessageBody* _internal_mutable_template_();
  public:
  void unsafe_arena_set_allocated_template_(
      ::com::elarian::hera::proto::TemplateMessageBody* template_);
  ::com::elarian::hera::proto::TemplateMessageBody* unsafe_arena_release_template_();

  // string url = 6;
  private:
  bool _internal_has_url() const;
  public:
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // .com.elarian.hera.proto.VoiceCallDialplanMessageBody voice = 7;
  bool has_voice() const;
  private:
  bool _internal_has_voice() const;
  public:
  void clear_voice();
  const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody& voice() const;
  ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* release_voice();
  ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* mutable_voice();
  void set_allocated_voice(::com::elarian::hera::proto::VoiceCallDialplanMessageBody* voice);
  private:
  const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody& _internal_voice() const;
  ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* _internal_mutable_voice();
  public:
  void unsafe_arena_set_allocated_voice(
      ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* voice);
  ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* unsafe_arena_release_voice();

  // .com.elarian.hera.proto.UssdMenuMessageBody ussd = 8;
  bool has_ussd() const;
  private:
  bool _internal_has_ussd() const;
  public:
  void clear_ussd();
  const ::com::elarian::hera::proto::UssdMenuMessageBody& ussd() const;
  ::com::elarian::hera::proto::UssdMenuMessageBody* release_ussd();
  ::com::elarian::hera::proto::UssdMenuMessageBody* mutable_ussd();
  void set_allocated_ussd(::com::elarian::hera::proto::UssdMenuMessageBody* ussd);
  private:
  const ::com::elarian::hera::proto::UssdMenuMessageBody& _internal_ussd() const;
  ::com::elarian::hera::proto::UssdMenuMessageBody* _internal_mutable_ussd();
  public:
  void unsafe_arena_set_allocated_ussd(
      ::com::elarian::hera::proto::UssdMenuMessageBody* ussd);
  ::com::elarian::hera::proto::UssdMenuMessageBody* unsafe_arena_release_ussd();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.OutboundMessageBody)
 private:
  class _Internal;
  void set_has_text();
  void set_has_media();
  void set_has_location();
  void set_has_email();
  void set_has_template_();
  void set_has_url();
  void set_has_voice();
  void set_has_ussd();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
    ::com::elarian::hera::proto::MediaMessageBody* media_;
    ::com::elarian::hera::proto::LocationMessageBody* location_;
    ::com::elarian::hera::proto::EmailMessageBody* email_;
    ::com::elarian::hera::proto::TemplateMessageBody* template__;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
    ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* voice_;
    ::com::elarian::hera::proto::UssdMenuMessageBody* ussd_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class PromptMessageMenuItemBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.PromptMessageMenuItemBody) */ {
 public:
  inline PromptMessageMenuItemBody() : PromptMessageMenuItemBody(nullptr) {}
  virtual ~PromptMessageMenuItemBody();

  PromptMessageMenuItemBody(const PromptMessageMenuItemBody& from);
  PromptMessageMenuItemBody(PromptMessageMenuItemBody&& from) noexcept
    : PromptMessageMenuItemBody() {
    *this = ::std::move(from);
  }

  inline PromptMessageMenuItemBody& operator=(const PromptMessageMenuItemBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline PromptMessageMenuItemBody& operator=(PromptMessageMenuItemBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PromptMessageMenuItemBody& default_instance();

  enum EntryCase {
    kText = 2,
    kMedia = 3,
    ENTRY_NOT_SET = 0,
  };

  static inline const PromptMessageMenuItemBody* internal_default_instance() {
    return reinterpret_cast<const PromptMessageMenuItemBody*>(
               &_PromptMessageMenuItemBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(PromptMessageMenuItemBody& a, PromptMessageMenuItemBody& b) {
    a.Swap(&b);
  }
  inline void Swap(PromptMessageMenuItemBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PromptMessageMenuItemBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PromptMessageMenuItemBody* New() const final {
    return CreateMaybeMessage<PromptMessageMenuItemBody>(nullptr);
  }

  PromptMessageMenuItemBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PromptMessageMenuItemBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PromptMessageMenuItemBody& from);
  void MergeFrom(const PromptMessageMenuItemBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PromptMessageMenuItemBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.PromptMessageMenuItemBody";
  }
  protected:
  explicit PromptMessageMenuItemBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kMediaFieldNumber = 3,
  };
  // string text = 2;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // .com.elarian.hera.proto.MediaMessageBody media = 3;
  bool has_media() const;
  private:
  bool _internal_has_media() const;
  public:
  void clear_media();
  const ::com::elarian::hera::proto::MediaMessageBody& media() const;
  ::com::elarian::hera::proto::MediaMessageBody* release_media();
  ::com::elarian::hera::proto::MediaMessageBody* mutable_media();
  void set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media);
  private:
  const ::com::elarian::hera::proto::MediaMessageBody& _internal_media() const;
  ::com::elarian::hera::proto::MediaMessageBody* _internal_mutable_media();
  public:
  void unsafe_arena_set_allocated_media(
      ::com::elarian::hera::proto::MediaMessageBody* media);
  ::com::elarian::hera::proto::MediaMessageBody* unsafe_arena_release_media();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.PromptMessageMenuItemBody)
 private:
  class _Internal;
  void set_has_text();
  void set_has_media();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
    ::com::elarian::hera::proto::MediaMessageBody* media_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class InboundMessageBody PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.InboundMessageBody) */ {
 public:
  inline InboundMessageBody() : InboundMessageBody(nullptr) {}
  virtual ~InboundMessageBody();

  InboundMessageBody(const InboundMessageBody& from);
  InboundMessageBody(InboundMessageBody&& from) noexcept
    : InboundMessageBody() {
    *this = ::std::move(from);
  }

  inline InboundMessageBody& operator=(const InboundMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline InboundMessageBody& operator=(InboundMessageBody&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InboundMessageBody& default_instance();

  enum EntryCase {
    kText = 1,
    kMedia = 2,
    kLocation = 3,
    kEmail = 4,
    kVoice = 5,
    kUssd = 6,
    ENTRY_NOT_SET = 0,
  };

  static inline const InboundMessageBody* internal_default_instance() {
    return reinterpret_cast<const InboundMessageBody*>(
               &_InboundMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(InboundMessageBody& a, InboundMessageBody& b) {
    a.Swap(&b);
  }
  inline void Swap(InboundMessageBody* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InboundMessageBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InboundMessageBody* New() const final {
    return CreateMaybeMessage<InboundMessageBody>(nullptr);
  }

  InboundMessageBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InboundMessageBody>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InboundMessageBody& from);
  void MergeFrom(const InboundMessageBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InboundMessageBody* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.InboundMessageBody";
  }
  protected:
  explicit InboundMessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kMediaFieldNumber = 2,
    kLocationFieldNumber = 3,
    kEmailFieldNumber = 4,
    kVoiceFieldNumber = 5,
    kUssdFieldNumber = 6,
  };
  // string text = 1;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // .com.elarian.hera.proto.MediaMessageBody media = 2;
  bool has_media() const;
  private:
  bool _internal_has_media() const;
  public:
  void clear_media();
  const ::com::elarian::hera::proto::MediaMessageBody& media() const;
  ::com::elarian::hera::proto::MediaMessageBody* release_media();
  ::com::elarian::hera::proto::MediaMessageBody* mutable_media();
  void set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media);
  private:
  const ::com::elarian::hera::proto::MediaMessageBody& _internal_media() const;
  ::com::elarian::hera::proto::MediaMessageBody* _internal_mutable_media();
  public:
  void unsafe_arena_set_allocated_media(
      ::com::elarian::hera::proto::MediaMessageBody* media);
  ::com::elarian::hera::proto::MediaMessageBody* unsafe_arena_release_media();

  // .com.elarian.hera.proto.LocationMessageBody location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::com::elarian::hera::proto::LocationMessageBody& location() const;
  ::com::elarian::hera::proto::LocationMessageBody* release_location();
  ::com::elarian::hera::proto::LocationMessageBody* mutable_location();
  void set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location);
  private:
  const ::com::elarian::hera::proto::LocationMessageBody& _internal_location() const;
  ::com::elarian::hera::proto::LocationMessageBody* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::com::elarian::hera::proto::LocationMessageBody* location);
  ::com::elarian::hera::proto::LocationMessageBody* unsafe_arena_release_location();

  // .com.elarian.hera.proto.EmailMessageBody email = 4;
  bool has_email() const;
  private:
  bool _internal_has_email() const;
  public:
  void clear_email();
  const ::com::elarian::hera::proto::EmailMessageBody& email() const;
  ::com::elarian::hera::proto::EmailMessageBody* release_email();
  ::com::elarian::hera::proto::EmailMessageBody* mutable_email();
  void set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email);
  private:
  const ::com::elarian::hera::proto::EmailMessageBody& _internal_email() const;
  ::com::elarian::hera::proto::EmailMessageBody* _internal_mutable_email();
  public:
  void unsafe_arena_set_allocated_email(
      ::com::elarian::hera::proto::EmailMessageBody* email);
  ::com::elarian::hera::proto::EmailMessageBody* unsafe_arena_release_email();

  // .com.elarian.hera.proto.VoiceCallInputMessageBody voice = 5;
  bool has_voice() const;
  private:
  bool _internal_has_voice() const;
  public:
  void clear_voice();
  const ::com::elarian::hera::proto::VoiceCallInputMessageBody& voice() const;
  ::com::elarian::hera::proto::VoiceCallInputMessageBody* release_voice();
  ::com::elarian::hera::proto::VoiceCallInputMessageBody* mutable_voice();
  void set_allocated_voice(::com::elarian::hera::proto::VoiceCallInputMessageBody* voice);
  private:
  const ::com::elarian::hera::proto::VoiceCallInputMessageBody& _internal_voice() const;
  ::com::elarian::hera::proto::VoiceCallInputMessageBody* _internal_mutable_voice();
  public:
  void unsafe_arena_set_allocated_voice(
      ::com::elarian::hera::proto::VoiceCallInputMessageBody* voice);
  ::com::elarian::hera::proto::VoiceCallInputMessageBody* unsafe_arena_release_voice();

  // .com.elarian.hera.proto.UssdInputMessageBody ussd = 6;
  bool has_ussd() const;
  private:
  bool _internal_has_ussd() const;
  public:
  void clear_ussd();
  const ::com::elarian::hera::proto::UssdInputMessageBody& ussd() const;
  ::com::elarian::hera::proto::UssdInputMessageBody* release_ussd();
  ::com::elarian::hera::proto::UssdInputMessageBody* mutable_ussd();
  void set_allocated_ussd(::com::elarian::hera::proto::UssdInputMessageBody* ussd);
  private:
  const ::com::elarian::hera::proto::UssdInputMessageBody& _internal_ussd() const;
  ::com::elarian::hera::proto::UssdInputMessageBody* _internal_mutable_ussd();
  public:
  void unsafe_arena_set_allocated_ussd(
      ::com::elarian::hera::proto::UssdInputMessageBody* ussd);
  ::com::elarian::hera::proto::UssdInputMessageBody* unsafe_arena_release_ussd();

  void clear_entry();
  EntryCase entry_case() const;
  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.InboundMessageBody)
 private:
  class _Internal;
  void set_has_text();
  void set_has_media();
  void set_has_location();
  void set_has_email();
  void set_has_voice();
  void set_has_ussd();

  inline bool has_entry() const;
  inline void clear_has_entry();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union EntryUnion {
    EntryUnion() {}
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
    ::com::elarian::hera::proto::MediaMessageBody* media_;
    ::com::elarian::hera::proto::LocationMessageBody* location_;
    ::com::elarian::hera::proto::EmailMessageBody* email_;
    ::com::elarian::hera::proto::VoiceCallInputMessageBody* voice_;
    ::com::elarian::hera::proto::UssdInputMessageBody* ussd_;
  } entry_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class OutboundMessageReplyPrompt PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.OutboundMessageReplyPrompt) */ {
 public:
  inline OutboundMessageReplyPrompt() : OutboundMessageReplyPrompt(nullptr) {}
  virtual ~OutboundMessageReplyPrompt();

  OutboundMessageReplyPrompt(const OutboundMessageReplyPrompt& from);
  OutboundMessageReplyPrompt(OutboundMessageReplyPrompt&& from) noexcept
    : OutboundMessageReplyPrompt() {
    *this = ::std::move(from);
  }

  inline OutboundMessageReplyPrompt& operator=(const OutboundMessageReplyPrompt& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutboundMessageReplyPrompt& operator=(OutboundMessageReplyPrompt&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OutboundMessageReplyPrompt& default_instance();

  static inline const OutboundMessageReplyPrompt* internal_default_instance() {
    return reinterpret_cast<const OutboundMessageReplyPrompt*>(
               &_OutboundMessageReplyPrompt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(OutboundMessageReplyPrompt& a, OutboundMessageReplyPrompt& b) {
    a.Swap(&b);
  }
  inline void Swap(OutboundMessageReplyPrompt* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutboundMessageReplyPrompt* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OutboundMessageReplyPrompt* New() const final {
    return CreateMaybeMessage<OutboundMessageReplyPrompt>(nullptr);
  }

  OutboundMessageReplyPrompt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OutboundMessageReplyPrompt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OutboundMessageReplyPrompt& from);
  void MergeFrom(const OutboundMessageReplyPrompt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OutboundMessageReplyPrompt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.OutboundMessageReplyPrompt";
  }
  protected:
  explicit OutboundMessageReplyPrompt(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMenuFieldNumber = 2,
    kActionFieldNumber = 1,
  };
  // repeated .com.elarian.hera.proto.PromptMessageMenuItemBody menu = 2;
  int menu_size() const;
  private:
  int _internal_menu_size() const;
  public:
  void clear_menu();
  ::com::elarian::hera::proto::PromptMessageMenuItemBody* mutable_menu(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::PromptMessageMenuItemBody >*
      mutable_menu();
  private:
  const ::com::elarian::hera::proto::PromptMessageMenuItemBody& _internal_menu(int index) const;
  ::com::elarian::hera::proto::PromptMessageMenuItemBody* _internal_add_menu();
  public:
  const ::com::elarian::hera::proto::PromptMessageMenuItemBody& menu(int index) const;
  ::com::elarian::hera::proto::PromptMessageMenuItemBody* add_menu();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::PromptMessageMenuItemBody >&
      menu() const;

  // .com.elarian.hera.proto.PromptMessageReplyAction action = 1;
  void clear_action();
  ::com::elarian::hera::proto::PromptMessageReplyAction action() const;
  void set_action(::com::elarian::hera::proto::PromptMessageReplyAction value);
  private:
  ::com::elarian::hera::proto::PromptMessageReplyAction _internal_action() const;
  void _internal_set_action(::com::elarian::hera::proto::PromptMessageReplyAction value);
  public:

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.OutboundMessageReplyPrompt)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::PromptMessageMenuItemBody > menu_;
  int action_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// -------------------------------------------------------------------

class OutboundMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.elarian.hera.proto.OutboundMessage) */ {
 public:
  inline OutboundMessage() : OutboundMessage(nullptr) {}
  virtual ~OutboundMessage();

  OutboundMessage(const OutboundMessage& from);
  OutboundMessage(OutboundMessage&& from) noexcept
    : OutboundMessage() {
    *this = ::std::move(from);
  }

  inline OutboundMessage& operator=(const OutboundMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutboundMessage& operator=(OutboundMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OutboundMessage& default_instance();

  static inline const OutboundMessage* internal_default_instance() {
    return reinterpret_cast<const OutboundMessage*>(
               &_OutboundMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(OutboundMessage& a, OutboundMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(OutboundMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutboundMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OutboundMessage* New() const final {
    return CreateMaybeMessage<OutboundMessage>(nullptr);
  }

  OutboundMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OutboundMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OutboundMessage& from);
  void MergeFrom(const OutboundMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OutboundMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.elarian.hera.proto.OutboundMessage";
  }
  protected:
  explicit OutboundMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messaging_5fmodel_2eproto);
    return ::descriptor_table_messaging_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLabelsFieldNumber = 2,
    kBodyFieldNumber = 1,
    kProviderTagFieldNumber = 3,
    kReplyTokenFieldNumber = 4,
    kReplyPromptFieldNumber = 5,
  };
  // repeated string labels = 2;
  int labels_size() const;
  private:
  int _internal_labels_size() const;
  public:
  void clear_labels();
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  void set_labels(int index, const std::string& value);
  void set_labels(int index, std::string&& value);
  void set_labels(int index, const char* value);
  void set_labels(int index, const char* value, size_t size);
  std::string* add_labels();
  void add_labels(const std::string& value);
  void add_labels(std::string&& value);
  void add_labels(const char* value);
  void add_labels(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& labels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_labels();
  private:
  const std::string& _internal_labels(int index) const;
  std::string* _internal_add_labels();
  public:

  // .com.elarian.hera.proto.OutboundMessageBody body = 1;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const ::com::elarian::hera::proto::OutboundMessageBody& body() const;
  ::com::elarian::hera::proto::OutboundMessageBody* release_body();
  ::com::elarian::hera::proto::OutboundMessageBody* mutable_body();
  void set_allocated_body(::com::elarian::hera::proto::OutboundMessageBody* body);
  private:
  const ::com::elarian::hera::proto::OutboundMessageBody& _internal_body() const;
  ::com::elarian::hera::proto::OutboundMessageBody* _internal_mutable_body();
  public:
  void unsafe_arena_set_allocated_body(
      ::com::elarian::hera::proto::OutboundMessageBody* body);
  ::com::elarian::hera::proto::OutboundMessageBody* unsafe_arena_release_body();

  // .google.protobuf.StringValue provider_tag = 3;
  bool has_provider_tag() const;
  private:
  bool _internal_has_provider_tag() const;
  public:
  void clear_provider_tag();
  const PROTOBUF_NAMESPACE_ID::StringValue& provider_tag() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_provider_tag();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_provider_tag();
  void set_allocated_provider_tag(PROTOBUF_NAMESPACE_ID::StringValue* provider_tag);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_provider_tag() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_provider_tag();
  public:
  void unsafe_arena_set_allocated_provider_tag(
      PROTOBUF_NAMESPACE_ID::StringValue* provider_tag);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_provider_tag();

  // .google.protobuf.StringValue reply_token = 4;
  bool has_reply_token() const;
  private:
  bool _internal_has_reply_token() const;
  public:
  void clear_reply_token();
  const PROTOBUF_NAMESPACE_ID::StringValue& reply_token() const;
  PROTOBUF_NAMESPACE_ID::StringValue* release_reply_token();
  PROTOBUF_NAMESPACE_ID::StringValue* mutable_reply_token();
  void set_allocated_reply_token(PROTOBUF_NAMESPACE_ID::StringValue* reply_token);
  private:
  const PROTOBUF_NAMESPACE_ID::StringValue& _internal_reply_token() const;
  PROTOBUF_NAMESPACE_ID::StringValue* _internal_mutable_reply_token();
  public:
  void unsafe_arena_set_allocated_reply_token(
      PROTOBUF_NAMESPACE_ID::StringValue* reply_token);
  PROTOBUF_NAMESPACE_ID::StringValue* unsafe_arena_release_reply_token();

  // .com.elarian.hera.proto.OutboundMessageReplyPrompt reply_prompt = 5;
  bool has_reply_prompt() const;
  private:
  bool _internal_has_reply_prompt() const;
  public:
  void clear_reply_prompt();
  const ::com::elarian::hera::proto::OutboundMessageReplyPrompt& reply_prompt() const;
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* release_reply_prompt();
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* mutable_reply_prompt();
  void set_allocated_reply_prompt(::com::elarian::hera::proto::OutboundMessageReplyPrompt* reply_prompt);
  private:
  const ::com::elarian::hera::proto::OutboundMessageReplyPrompt& _internal_reply_prompt() const;
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* _internal_mutable_reply_prompt();
  public:
  void unsafe_arena_set_allocated_reply_prompt(
      ::com::elarian::hera::proto::OutboundMessageReplyPrompt* reply_prompt);
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* unsafe_arena_release_reply_prompt();

  // @@protoc_insertion_point(class_scope:com.elarian.hera.proto.OutboundMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> labels_;
  ::com::elarian::hera::proto::OutboundMessageBody* body_;
  PROTOBUF_NAMESPACE_ID::StringValue* provider_tag_;
  PROTOBUF_NAMESPACE_ID::StringValue* reply_token_;
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* reply_prompt_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messaging_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessagingChannelNumber

// .com.elarian.hera.proto.MessagingChannel channel = 1;
inline void MessagingChannelNumber::clear_channel() {
  channel_ = 0;
}
inline ::com::elarian::hera::proto::MessagingChannel MessagingChannelNumber::_internal_channel() const {
  return static_cast< ::com::elarian::hera::proto::MessagingChannel >(channel_);
}
inline ::com::elarian::hera::proto::MessagingChannel MessagingChannelNumber::channel() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MessagingChannelNumber.channel)
  return _internal_channel();
}
inline void MessagingChannelNumber::_internal_set_channel(::com::elarian::hera::proto::MessagingChannel value) {
  
  channel_ = value;
}
inline void MessagingChannelNumber::set_channel(::com::elarian::hera::proto::MessagingChannel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MessagingChannelNumber.channel)
}

// string number = 2;
inline void MessagingChannelNumber::clear_number() {
  number_.ClearToEmpty();
}
inline const std::string& MessagingChannelNumber::number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MessagingChannelNumber.number)
  return _internal_number();
}
inline void MessagingChannelNumber::set_number(const std::string& value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MessagingChannelNumber.number)
}
inline std::string* MessagingChannelNumber::mutable_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MessagingChannelNumber.number)
  return _internal_mutable_number();
}
inline const std::string& MessagingChannelNumber::_internal_number() const {
  return number_.Get();
}
inline void MessagingChannelNumber::_internal_set_number(const std::string& value) {
  
  number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MessagingChannelNumber::set_number(std::string&& value) {
  
  number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.MessagingChannelNumber.number)
}
inline void MessagingChannelNumber::set_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.MessagingChannelNumber.number)
}
inline void MessagingChannelNumber::set_number(const char* value,
    size_t size) {
  
  number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.MessagingChannelNumber.number)
}
inline std::string* MessagingChannelNumber::_internal_mutable_number() {
  
  return number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MessagingChannelNumber::release_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MessagingChannelNumber.number)
  return number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MessagingChannelNumber::set_allocated_number(std::string* number) {
  if (number != nullptr) {
    
  } else {
    
  }
  number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MessagingChannelNumber.number)
}

// -------------------------------------------------------------------

// MediaMessageBody

// string url = 1;
inline void MediaMessageBody::clear_url() {
  url_.ClearToEmpty();
}
inline const std::string& MediaMessageBody::url() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MediaMessageBody.url)
  return _internal_url();
}
inline void MediaMessageBody::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MediaMessageBody.url)
}
inline std::string* MediaMessageBody::mutable_url() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.MediaMessageBody.url)
  return _internal_mutable_url();
}
inline const std::string& MediaMessageBody::_internal_url() const {
  return url_.Get();
}
inline void MediaMessageBody::_internal_set_url(const std::string& value) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MediaMessageBody::set_url(std::string&& value) {
  
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.MediaMessageBody.url)
}
inline void MediaMessageBody::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.MediaMessageBody.url)
}
inline void MediaMessageBody::set_url(const char* value,
    size_t size) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.MediaMessageBody.url)
}
inline std::string* MediaMessageBody::_internal_mutable_url() {
  
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MediaMessageBody::release_url() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.MediaMessageBody.url)
  return url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MediaMessageBody::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.MediaMessageBody.url)
}

// .com.elarian.hera.proto.MediaType media = 2;
inline void MediaMessageBody::clear_media() {
  media_ = 0;
}
inline ::com::elarian::hera::proto::MediaType MediaMessageBody::_internal_media() const {
  return static_cast< ::com::elarian::hera::proto::MediaType >(media_);
}
inline ::com::elarian::hera::proto::MediaType MediaMessageBody::media() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.MediaMessageBody.media)
  return _internal_media();
}
inline void MediaMessageBody::_internal_set_media(::com::elarian::hera::proto::MediaType value) {
  
  media_ = value;
}
inline void MediaMessageBody::set_media(::com::elarian::hera::proto::MediaType value) {
  _internal_set_media(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.MediaMessageBody.media)
}

// -------------------------------------------------------------------

// LocationMessageBody

// double latitude = 1;
inline void LocationMessageBody::clear_latitude() {
  latitude_ = 0;
}
inline double LocationMessageBody::_internal_latitude() const {
  return latitude_;
}
inline double LocationMessageBody::latitude() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.LocationMessageBody.latitude)
  return _internal_latitude();
}
inline void LocationMessageBody::_internal_set_latitude(double value) {
  
  latitude_ = value;
}
inline void LocationMessageBody::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.LocationMessageBody.latitude)
}

// double longitude = 2;
inline void LocationMessageBody::clear_longitude() {
  longitude_ = 0;
}
inline double LocationMessageBody::_internal_longitude() const {
  return longitude_;
}
inline double LocationMessageBody::longitude() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.LocationMessageBody.longitude)
  return _internal_longitude();
}
inline void LocationMessageBody::_internal_set_longitude(double value) {
  
  longitude_ = value;
}
inline void LocationMessageBody::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.LocationMessageBody.longitude)
}

// .google.protobuf.StringValue label = 3;
inline bool LocationMessageBody::_internal_has_label() const {
  return this != internal_default_instance() && label_ != nullptr;
}
inline bool LocationMessageBody::has_label() const {
  return _internal_has_label();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& LocationMessageBody::_internal_label() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = label_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& LocationMessageBody::label() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.LocationMessageBody.label)
  return _internal_label();
}
inline void LocationMessageBody::unsafe_arena_set_allocated_label(
    PROTOBUF_NAMESPACE_ID::StringValue* label) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_);
  }
  label_ = label;
  if (label) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.LocationMessageBody.label)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::release_label() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = label_;
  label_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::unsafe_arena_release_label() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.LocationMessageBody.label)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = label_;
  label_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::_internal_mutable_label() {
  
  if (label_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    label_ = p;
  }
  return label_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::mutable_label() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.LocationMessageBody.label)
  return _internal_mutable_label();
}
inline void LocationMessageBody::set_allocated_label(PROTOBUF_NAMESPACE_ID::StringValue* label) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(label_);
  }
  if (label) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(label)->GetArena();
    if (message_arena != submessage_arena) {
      label = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label, submessage_arena);
    }
    
  } else {
    
  }
  label_ = label;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.LocationMessageBody.label)
}

// .google.protobuf.StringValue address = 4;
inline bool LocationMessageBody::_internal_has_address() const {
  return this != internal_default_instance() && address_ != nullptr;
}
inline bool LocationMessageBody::has_address() const {
  return _internal_has_address();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& LocationMessageBody::_internal_address() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = address_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& LocationMessageBody::address() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.LocationMessageBody.address)
  return _internal_address();
}
inline void LocationMessageBody::unsafe_arena_set_allocated_address(
    PROTOBUF_NAMESPACE_ID::StringValue* address) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.LocationMessageBody.address)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::release_address() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = address_;
  address_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::unsafe_arena_release_address() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.LocationMessageBody.address)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = address_;
  address_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::_internal_mutable_address() {
  
  if (address_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    address_ = p;
  }
  return address_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* LocationMessageBody::mutable_address() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.LocationMessageBody.address)
  return _internal_mutable_address();
}
inline void LocationMessageBody::set_allocated_address(PROTOBUF_NAMESPACE_ID::StringValue* address) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(address_);
  }
  if (address) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(address)->GetArena();
    if (message_arena != submessage_arena) {
      address = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.LocationMessageBody.address)
}

// -------------------------------------------------------------------

// EmailMessageBody

// string subject = 1;
inline void EmailMessageBody::clear_subject() {
  subject_.ClearToEmpty();
}
inline const std::string& EmailMessageBody::subject() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EmailMessageBody.subject)
  return _internal_subject();
}
inline void EmailMessageBody::set_subject(const std::string& value) {
  _internal_set_subject(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.subject)
}
inline std::string* EmailMessageBody::mutable_subject() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EmailMessageBody.subject)
  return _internal_mutable_subject();
}
inline const std::string& EmailMessageBody::_internal_subject() const {
  return subject_.Get();
}
inline void EmailMessageBody::_internal_set_subject(const std::string& value) {
  
  subject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void EmailMessageBody::set_subject(std::string&& value) {
  
  subject_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.EmailMessageBody.subject)
}
inline void EmailMessageBody::set_subject(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  subject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.EmailMessageBody.subject)
}
inline void EmailMessageBody::set_subject(const char* value,
    size_t size) {
  
  subject_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.EmailMessageBody.subject)
}
inline std::string* EmailMessageBody::_internal_mutable_subject() {
  
  return subject_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* EmailMessageBody::release_subject() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.EmailMessageBody.subject)
  return subject_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void EmailMessageBody::set_allocated_subject(std::string* subject) {
  if (subject != nullptr) {
    
  } else {
    
  }
  subject_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subject,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.EmailMessageBody.subject)
}

// string body_plain = 2;
inline void EmailMessageBody::clear_body_plain() {
  body_plain_.ClearToEmpty();
}
inline const std::string& EmailMessageBody::body_plain() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EmailMessageBody.body_plain)
  return _internal_body_plain();
}
inline void EmailMessageBody::set_body_plain(const std::string& value) {
  _internal_set_body_plain(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.body_plain)
}
inline std::string* EmailMessageBody::mutable_body_plain() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EmailMessageBody.body_plain)
  return _internal_mutable_body_plain();
}
inline const std::string& EmailMessageBody::_internal_body_plain() const {
  return body_plain_.Get();
}
inline void EmailMessageBody::_internal_set_body_plain(const std::string& value) {
  
  body_plain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void EmailMessageBody::set_body_plain(std::string&& value) {
  
  body_plain_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.EmailMessageBody.body_plain)
}
inline void EmailMessageBody::set_body_plain(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  body_plain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.EmailMessageBody.body_plain)
}
inline void EmailMessageBody::set_body_plain(const char* value,
    size_t size) {
  
  body_plain_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.EmailMessageBody.body_plain)
}
inline std::string* EmailMessageBody::_internal_mutable_body_plain() {
  
  return body_plain_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* EmailMessageBody::release_body_plain() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.EmailMessageBody.body_plain)
  return body_plain_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void EmailMessageBody::set_allocated_body_plain(std::string* body_plain) {
  if (body_plain != nullptr) {
    
  } else {
    
  }
  body_plain_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), body_plain,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.EmailMessageBody.body_plain)
}

// string body_html = 3;
inline void EmailMessageBody::clear_body_html() {
  body_html_.ClearToEmpty();
}
inline const std::string& EmailMessageBody::body_html() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EmailMessageBody.body_html)
  return _internal_body_html();
}
inline void EmailMessageBody::set_body_html(const std::string& value) {
  _internal_set_body_html(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.body_html)
}
inline std::string* EmailMessageBody::mutable_body_html() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EmailMessageBody.body_html)
  return _internal_mutable_body_html();
}
inline const std::string& EmailMessageBody::_internal_body_html() const {
  return body_html_.Get();
}
inline void EmailMessageBody::_internal_set_body_html(const std::string& value) {
  
  body_html_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void EmailMessageBody::set_body_html(std::string&& value) {
  
  body_html_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.EmailMessageBody.body_html)
}
inline void EmailMessageBody::set_body_html(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  body_html_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.EmailMessageBody.body_html)
}
inline void EmailMessageBody::set_body_html(const char* value,
    size_t size) {
  
  body_html_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.EmailMessageBody.body_html)
}
inline std::string* EmailMessageBody::_internal_mutable_body_html() {
  
  return body_html_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* EmailMessageBody::release_body_html() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.EmailMessageBody.body_html)
  return body_html_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void EmailMessageBody::set_allocated_body_html(std::string* body_html) {
  if (body_html != nullptr) {
    
  } else {
    
  }
  body_html_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), body_html,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.EmailMessageBody.body_html)
}

// repeated string cc_list = 4;
inline int EmailMessageBody::_internal_cc_list_size() const {
  return cc_list_.size();
}
inline int EmailMessageBody::cc_list_size() const {
  return _internal_cc_list_size();
}
inline void EmailMessageBody::clear_cc_list() {
  cc_list_.Clear();
}
inline std::string* EmailMessageBody::add_cc_list() {
  // @@protoc_insertion_point(field_add_mutable:com.elarian.hera.proto.EmailMessageBody.cc_list)
  return _internal_add_cc_list();
}
inline const std::string& EmailMessageBody::_internal_cc_list(int index) const {
  return cc_list_.Get(index);
}
inline const std::string& EmailMessageBody::cc_list(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EmailMessageBody.cc_list)
  return _internal_cc_list(index);
}
inline std::string* EmailMessageBody::mutable_cc_list(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EmailMessageBody.cc_list)
  return cc_list_.Mutable(index);
}
inline void EmailMessageBody::set_cc_list(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.cc_list)
  cc_list_.Mutable(index)->assign(value);
}
inline void EmailMessageBody::set_cc_list(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.cc_list)
  cc_list_.Mutable(index)->assign(std::move(value));
}
inline void EmailMessageBody::set_cc_list(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cc_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline void EmailMessageBody::set_cc_list(int index, const char* value, size_t size) {
  cc_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline std::string* EmailMessageBody::_internal_add_cc_list() {
  return cc_list_.Add();
}
inline void EmailMessageBody::add_cc_list(const std::string& value) {
  cc_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline void EmailMessageBody::add_cc_list(std::string&& value) {
  cc_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline void EmailMessageBody::add_cc_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cc_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline void EmailMessageBody::add_cc_list(const char* value, size_t size) {
  cc_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.elarian.hera.proto.EmailMessageBody.cc_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
EmailMessageBody::cc_list() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.EmailMessageBody.cc_list)
  return cc_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
EmailMessageBody::mutable_cc_list() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.EmailMessageBody.cc_list)
  return &cc_list_;
}

// repeated string bcc_list = 5;
inline int EmailMessageBody::_internal_bcc_list_size() const {
  return bcc_list_.size();
}
inline int EmailMessageBody::bcc_list_size() const {
  return _internal_bcc_list_size();
}
inline void EmailMessageBody::clear_bcc_list() {
  bcc_list_.Clear();
}
inline std::string* EmailMessageBody::add_bcc_list() {
  // @@protoc_insertion_point(field_add_mutable:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  return _internal_add_bcc_list();
}
inline const std::string& EmailMessageBody::_internal_bcc_list(int index) const {
  return bcc_list_.Get(index);
}
inline const std::string& EmailMessageBody::bcc_list(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  return _internal_bcc_list(index);
}
inline std::string* EmailMessageBody::mutable_bcc_list(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  return bcc_list_.Mutable(index);
}
inline void EmailMessageBody::set_bcc_list(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  bcc_list_.Mutable(index)->assign(value);
}
inline void EmailMessageBody::set_bcc_list(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  bcc_list_.Mutable(index)->assign(std::move(value));
}
inline void EmailMessageBody::set_bcc_list(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bcc_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline void EmailMessageBody::set_bcc_list(int index, const char* value, size_t size) {
  bcc_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline std::string* EmailMessageBody::_internal_add_bcc_list() {
  return bcc_list_.Add();
}
inline void EmailMessageBody::add_bcc_list(const std::string& value) {
  bcc_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline void EmailMessageBody::add_bcc_list(std::string&& value) {
  bcc_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline void EmailMessageBody::add_bcc_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  bcc_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline void EmailMessageBody::add_bcc_list(const char* value, size_t size) {
  bcc_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.elarian.hera.proto.EmailMessageBody.bcc_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
EmailMessageBody::bcc_list() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  return bcc_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
EmailMessageBody::mutable_bcc_list() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.EmailMessageBody.bcc_list)
  return &bcc_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TemplateMessageBody

// string id = 1;
inline void TemplateMessageBody::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& TemplateMessageBody::id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.TemplateMessageBody.id)
  return _internal_id();
}
inline void TemplateMessageBody::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.TemplateMessageBody.id)
}
inline std::string* TemplateMessageBody::mutable_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.TemplateMessageBody.id)
  return _internal_mutable_id();
}
inline const std::string& TemplateMessageBody::_internal_id() const {
  return id_.Get();
}
inline void TemplateMessageBody::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void TemplateMessageBody::set_id(std::string&& value) {
  
  id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.TemplateMessageBody.id)
}
inline void TemplateMessageBody::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.TemplateMessageBody.id)
}
inline void TemplateMessageBody::set_id(const char* value,
    size_t size) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.TemplateMessageBody.id)
}
inline std::string* TemplateMessageBody::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* TemplateMessageBody::release_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.TemplateMessageBody.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void TemplateMessageBody::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.TemplateMessageBody.id)
}

// map<string, string> params = 2;
inline int TemplateMessageBody::_internal_params_size() const {
  return params_.size();
}
inline int TemplateMessageBody::params_size() const {
  return _internal_params_size();
}
inline void TemplateMessageBody::clear_params() {
  params_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TemplateMessageBody::_internal_params() const {
  return params_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
TemplateMessageBody::params() const {
  // @@protoc_insertion_point(field_map:com.elarian.hera.proto.TemplateMessageBody.params)
  return _internal_params();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TemplateMessageBody::_internal_mutable_params() {
  return params_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
TemplateMessageBody::mutable_params() {
  // @@protoc_insertion_point(field_mutable_map:com.elarian.hera.proto.TemplateMessageBody.params)
  return _internal_mutable_params();
}

// -------------------------------------------------------------------

// SayCallAction

// string text = 1;
inline void SayCallAction::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& SayCallAction::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SayCallAction.text)
  return _internal_text();
}
inline void SayCallAction::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SayCallAction.text)
}
inline std::string* SayCallAction::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.SayCallAction.text)
  return _internal_mutable_text();
}
inline const std::string& SayCallAction::_internal_text() const {
  return text_.Get();
}
inline void SayCallAction::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void SayCallAction::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.SayCallAction.text)
}
inline void SayCallAction::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.SayCallAction.text)
}
inline void SayCallAction::set_text(const char* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.SayCallAction.text)
}
inline std::string* SayCallAction::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* SayCallAction::release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.SayCallAction.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void SayCallAction::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.SayCallAction.text)
}

// .com.elarian.hera.proto.TextToSpeechVoice voice = 2;
inline void SayCallAction::clear_voice() {
  voice_ = 0;
}
inline ::com::elarian::hera::proto::TextToSpeechVoice SayCallAction::_internal_voice() const {
  return static_cast< ::com::elarian::hera::proto::TextToSpeechVoice >(voice_);
}
inline ::com::elarian::hera::proto::TextToSpeechVoice SayCallAction::voice() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SayCallAction.voice)
  return _internal_voice();
}
inline void SayCallAction::_internal_set_voice(::com::elarian::hera::proto::TextToSpeechVoice value) {
  
  voice_ = value;
}
inline void SayCallAction::set_voice(::com::elarian::hera::proto::TextToSpeechVoice value) {
  _internal_set_voice(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SayCallAction.voice)
}

// bool play_beep = 3;
inline void SayCallAction::clear_play_beep() {
  play_beep_ = false;
}
inline bool SayCallAction::_internal_play_beep() const {
  return play_beep_;
}
inline bool SayCallAction::play_beep() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.SayCallAction.play_beep)
  return _internal_play_beep();
}
inline void SayCallAction::_internal_set_play_beep(bool value) {
  
  play_beep_ = value;
}
inline void SayCallAction::set_play_beep(bool value) {
  _internal_set_play_beep(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.SayCallAction.play_beep)
}

// -------------------------------------------------------------------

// PlayCallAction

// string url = 1;
inline void PlayCallAction::clear_url() {
  url_.ClearToEmpty();
}
inline const std::string& PlayCallAction::url() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.PlayCallAction.url)
  return _internal_url();
}
inline void PlayCallAction::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.PlayCallAction.url)
}
inline std::string* PlayCallAction::mutable_url() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.PlayCallAction.url)
  return _internal_mutable_url();
}
inline const std::string& PlayCallAction::_internal_url() const {
  return url_.Get();
}
inline void PlayCallAction::_internal_set_url(const std::string& value) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void PlayCallAction::set_url(std::string&& value) {
  
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.PlayCallAction.url)
}
inline void PlayCallAction::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.PlayCallAction.url)
}
inline void PlayCallAction::set_url(const char* value,
    size_t size) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.PlayCallAction.url)
}
inline std::string* PlayCallAction::_internal_mutable_url() {
  
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* PlayCallAction::release_url() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.PlayCallAction.url)
  return url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayCallAction::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PlayCallAction.url)
}

// -------------------------------------------------------------------

// GetDigitsCallAction

// .com.elarian.hera.proto.SayCallAction say = 1;
inline bool GetDigitsCallAction::_internal_has_say() const {
  return prompt_case() == kSay;
}
inline bool GetDigitsCallAction::has_say() const {
  return _internal_has_say();
}
inline void GetDigitsCallAction::set_has_say() {
  _oneof_case_[0] = kSay;
}
inline void GetDigitsCallAction::clear_say() {
  if (_internal_has_say()) {
    if (GetArena() == nullptr) {
      delete prompt_.say_;
    }
    clear_has_prompt();
  }
}
inline ::com::elarian::hera::proto::SayCallAction* GetDigitsCallAction::release_say() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetDigitsCallAction.say)
  if (_internal_has_say()) {
    clear_has_prompt();
      ::com::elarian::hera::proto::SayCallAction* temp = prompt_.say_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    prompt_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SayCallAction& GetDigitsCallAction::_internal_say() const {
  return _internal_has_say()
      ? *prompt_.say_
      : reinterpret_cast< ::com::elarian::hera::proto::SayCallAction&>(::com::elarian::hera::proto::_SayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::SayCallAction& GetDigitsCallAction::say() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetDigitsCallAction.say)
  return _internal_say();
}
inline ::com::elarian::hera::proto::SayCallAction* GetDigitsCallAction::unsafe_arena_release_say() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.GetDigitsCallAction.say)
  if (_internal_has_say()) {
    clear_has_prompt();
    ::com::elarian::hera::proto::SayCallAction* temp = prompt_.say_;
    prompt_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetDigitsCallAction::unsafe_arena_set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  clear_prompt();
  if (say) {
    set_has_say();
    prompt_.say_ = say;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.say)
}
inline ::com::elarian::hera::proto::SayCallAction* GetDigitsCallAction::_internal_mutable_say() {
  if (!_internal_has_say()) {
    clear_prompt();
    set_has_say();
    prompt_.say_ = CreateMaybeMessage< ::com::elarian::hera::proto::SayCallAction >(GetArena());
  }
  return prompt_.say_;
}
inline ::com::elarian::hera::proto::SayCallAction* GetDigitsCallAction::mutable_say() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetDigitsCallAction.say)
  return _internal_mutable_say();
}

// .com.elarian.hera.proto.PlayCallAction play = 2;
inline bool GetDigitsCallAction::_internal_has_play() const {
  return prompt_case() == kPlay;
}
inline bool GetDigitsCallAction::has_play() const {
  return _internal_has_play();
}
inline void GetDigitsCallAction::set_has_play() {
  _oneof_case_[0] = kPlay;
}
inline void GetDigitsCallAction::clear_play() {
  if (_internal_has_play()) {
    if (GetArena() == nullptr) {
      delete prompt_.play_;
    }
    clear_has_prompt();
  }
}
inline ::com::elarian::hera::proto::PlayCallAction* GetDigitsCallAction::release_play() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetDigitsCallAction.play)
  if (_internal_has_play()) {
    clear_has_prompt();
      ::com::elarian::hera::proto::PlayCallAction* temp = prompt_.play_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    prompt_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PlayCallAction& GetDigitsCallAction::_internal_play() const {
  return _internal_has_play()
      ? *prompt_.play_
      : reinterpret_cast< ::com::elarian::hera::proto::PlayCallAction&>(::com::elarian::hera::proto::_PlayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::PlayCallAction& GetDigitsCallAction::play() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetDigitsCallAction.play)
  return _internal_play();
}
inline ::com::elarian::hera::proto::PlayCallAction* GetDigitsCallAction::unsafe_arena_release_play() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.GetDigitsCallAction.play)
  if (_internal_has_play()) {
    clear_has_prompt();
    ::com::elarian::hera::proto::PlayCallAction* temp = prompt_.play_;
    prompt_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetDigitsCallAction::unsafe_arena_set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  clear_prompt();
  if (play) {
    set_has_play();
    prompt_.play_ = play;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.play)
}
inline ::com::elarian::hera::proto::PlayCallAction* GetDigitsCallAction::_internal_mutable_play() {
  if (!_internal_has_play()) {
    clear_prompt();
    set_has_play();
    prompt_.play_ = CreateMaybeMessage< ::com::elarian::hera::proto::PlayCallAction >(GetArena());
  }
  return prompt_.play_;
}
inline ::com::elarian::hera::proto::PlayCallAction* GetDigitsCallAction::mutable_play() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetDigitsCallAction.play)
  return _internal_mutable_play();
}

// .google.protobuf.Duration timeout = 3;
inline bool GetDigitsCallAction::_internal_has_timeout() const {
  return this != internal_default_instance() && timeout_ != nullptr;
}
inline bool GetDigitsCallAction::has_timeout() const {
  return _internal_has_timeout();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetDigitsCallAction::_internal_timeout() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = timeout_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetDigitsCallAction::timeout() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetDigitsCallAction.timeout)
  return _internal_timeout();
}
inline void GetDigitsCallAction::unsafe_arena_set_allocated_timeout(
    PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.timeout)
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetDigitsCallAction::release_timeout() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetDigitsCallAction::unsafe_arena_release_timeout() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetDigitsCallAction.timeout)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetDigitsCallAction::_internal_mutable_timeout() {
  
  if (timeout_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    timeout_ = p;
  }
  return timeout_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetDigitsCallAction::mutable_timeout() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetDigitsCallAction.timeout)
  return _internal_mutable_timeout();
}
inline void GetDigitsCallAction::set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout)->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.timeout)
}

// .google.protobuf.StringValue finish_on_key = 4;
inline bool GetDigitsCallAction::_internal_has_finish_on_key() const {
  return this != internal_default_instance() && finish_on_key_ != nullptr;
}
inline bool GetDigitsCallAction::has_finish_on_key() const {
  return _internal_has_finish_on_key();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& GetDigitsCallAction::_internal_finish_on_key() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = finish_on_key_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& GetDigitsCallAction::finish_on_key() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetDigitsCallAction.finish_on_key)
  return _internal_finish_on_key();
}
inline void GetDigitsCallAction::unsafe_arena_set_allocated_finish_on_key(
    PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key_);
  }
  finish_on_key_ = finish_on_key;
  if (finish_on_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.finish_on_key)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetDigitsCallAction::release_finish_on_key() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = finish_on_key_;
  finish_on_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetDigitsCallAction::unsafe_arena_release_finish_on_key() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetDigitsCallAction.finish_on_key)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = finish_on_key_;
  finish_on_key_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetDigitsCallAction::_internal_mutable_finish_on_key() {
  
  if (finish_on_key_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    finish_on_key_ = p;
  }
  return finish_on_key_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetDigitsCallAction::mutable_finish_on_key() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetDigitsCallAction.finish_on_key)
  return _internal_mutable_finish_on_key();
}
inline void GetDigitsCallAction::set_allocated_finish_on_key(PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key_);
  }
  if (finish_on_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key)->GetArena();
    if (message_arena != submessage_arena) {
      finish_on_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, finish_on_key, submessage_arena);
    }
    
  } else {
    
  }
  finish_on_key_ = finish_on_key;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.finish_on_key)
}

// .google.protobuf.Int32Value num_digits = 5;
inline bool GetDigitsCallAction::_internal_has_num_digits() const {
  return this != internal_default_instance() && num_digits_ != nullptr;
}
inline bool GetDigitsCallAction::has_num_digits() const {
  return _internal_has_num_digits();
}
inline const PROTOBUF_NAMESPACE_ID::Int32Value& GetDigitsCallAction::_internal_num_digits() const {
  const PROTOBUF_NAMESPACE_ID::Int32Value* p = num_digits_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Int32Value&>(
      PROTOBUF_NAMESPACE_ID::_Int32Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Int32Value& GetDigitsCallAction::num_digits() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetDigitsCallAction.num_digits)
  return _internal_num_digits();
}
inline void GetDigitsCallAction::unsafe_arena_set_allocated_num_digits(
    PROTOBUF_NAMESPACE_ID::Int32Value* num_digits) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(num_digits_);
  }
  num_digits_ = num_digits;
  if (num_digits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.num_digits)
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* GetDigitsCallAction::release_num_digits() {
  
  PROTOBUF_NAMESPACE_ID::Int32Value* temp = num_digits_;
  num_digits_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* GetDigitsCallAction::unsafe_arena_release_num_digits() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetDigitsCallAction.num_digits)
  
  PROTOBUF_NAMESPACE_ID::Int32Value* temp = num_digits_;
  num_digits_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* GetDigitsCallAction::_internal_mutable_num_digits() {
  
  if (num_digits_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Int32Value>(GetArena());
    num_digits_ = p;
  }
  return num_digits_;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* GetDigitsCallAction::mutable_num_digits() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetDigitsCallAction.num_digits)
  return _internal_mutable_num_digits();
}
inline void GetDigitsCallAction::set_allocated_num_digits(PROTOBUF_NAMESPACE_ID::Int32Value* num_digits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(num_digits_);
  }
  if (num_digits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(num_digits)->GetArena();
    if (message_arena != submessage_arena) {
      num_digits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, num_digits, submessage_arena);
    }
    
  } else {
    
  }
  num_digits_ = num_digits;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetDigitsCallAction.num_digits)
}

inline bool GetDigitsCallAction::has_prompt() const {
  return prompt_case() != PROMPT_NOT_SET;
}
inline void GetDigitsCallAction::clear_has_prompt() {
  _oneof_case_[0] = PROMPT_NOT_SET;
}
inline GetDigitsCallAction::PromptCase GetDigitsCallAction::prompt_case() const {
  return GetDigitsCallAction::PromptCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetRecordingCallAction

// .com.elarian.hera.proto.SayCallAction say = 1;
inline bool GetRecordingCallAction::_internal_has_say() const {
  return prompt_case() == kSay;
}
inline bool GetRecordingCallAction::has_say() const {
  return _internal_has_say();
}
inline void GetRecordingCallAction::set_has_say() {
  _oneof_case_[0] = kSay;
}
inline void GetRecordingCallAction::clear_say() {
  if (_internal_has_say()) {
    if (GetArena() == nullptr) {
      delete prompt_.say_;
    }
    clear_has_prompt();
  }
}
inline ::com::elarian::hera::proto::SayCallAction* GetRecordingCallAction::release_say() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetRecordingCallAction.say)
  if (_internal_has_say()) {
    clear_has_prompt();
      ::com::elarian::hera::proto::SayCallAction* temp = prompt_.say_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    prompt_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SayCallAction& GetRecordingCallAction::_internal_say() const {
  return _internal_has_say()
      ? *prompt_.say_
      : reinterpret_cast< ::com::elarian::hera::proto::SayCallAction&>(::com::elarian::hera::proto::_SayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::SayCallAction& GetRecordingCallAction::say() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.say)
  return _internal_say();
}
inline ::com::elarian::hera::proto::SayCallAction* GetRecordingCallAction::unsafe_arena_release_say() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.GetRecordingCallAction.say)
  if (_internal_has_say()) {
    clear_has_prompt();
    ::com::elarian::hera::proto::SayCallAction* temp = prompt_.say_;
    prompt_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetRecordingCallAction::unsafe_arena_set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  clear_prompt();
  if (say) {
    set_has_say();
    prompt_.say_ = say;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.say)
}
inline ::com::elarian::hera::proto::SayCallAction* GetRecordingCallAction::_internal_mutable_say() {
  if (!_internal_has_say()) {
    clear_prompt();
    set_has_say();
    prompt_.say_ = CreateMaybeMessage< ::com::elarian::hera::proto::SayCallAction >(GetArena());
  }
  return prompt_.say_;
}
inline ::com::elarian::hera::proto::SayCallAction* GetRecordingCallAction::mutable_say() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetRecordingCallAction.say)
  return _internal_mutable_say();
}

// .com.elarian.hera.proto.PlayCallAction play = 2;
inline bool GetRecordingCallAction::_internal_has_play() const {
  return prompt_case() == kPlay;
}
inline bool GetRecordingCallAction::has_play() const {
  return _internal_has_play();
}
inline void GetRecordingCallAction::set_has_play() {
  _oneof_case_[0] = kPlay;
}
inline void GetRecordingCallAction::clear_play() {
  if (_internal_has_play()) {
    if (GetArena() == nullptr) {
      delete prompt_.play_;
    }
    clear_has_prompt();
  }
}
inline ::com::elarian::hera::proto::PlayCallAction* GetRecordingCallAction::release_play() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetRecordingCallAction.play)
  if (_internal_has_play()) {
    clear_has_prompt();
      ::com::elarian::hera::proto::PlayCallAction* temp = prompt_.play_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    prompt_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PlayCallAction& GetRecordingCallAction::_internal_play() const {
  return _internal_has_play()
      ? *prompt_.play_
      : reinterpret_cast< ::com::elarian::hera::proto::PlayCallAction&>(::com::elarian::hera::proto::_PlayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::PlayCallAction& GetRecordingCallAction::play() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.play)
  return _internal_play();
}
inline ::com::elarian::hera::proto::PlayCallAction* GetRecordingCallAction::unsafe_arena_release_play() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.GetRecordingCallAction.play)
  if (_internal_has_play()) {
    clear_has_prompt();
    ::com::elarian::hera::proto::PlayCallAction* temp = prompt_.play_;
    prompt_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetRecordingCallAction::unsafe_arena_set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  clear_prompt();
  if (play) {
    set_has_play();
    prompt_.play_ = play;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.play)
}
inline ::com::elarian::hera::proto::PlayCallAction* GetRecordingCallAction::_internal_mutable_play() {
  if (!_internal_has_play()) {
    clear_prompt();
    set_has_play();
    prompt_.play_ = CreateMaybeMessage< ::com::elarian::hera::proto::PlayCallAction >(GetArena());
  }
  return prompt_.play_;
}
inline ::com::elarian::hera::proto::PlayCallAction* GetRecordingCallAction::mutable_play() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetRecordingCallAction.play)
  return _internal_mutable_play();
}

// .google.protobuf.Duration timeout = 3;
inline bool GetRecordingCallAction::_internal_has_timeout() const {
  return this != internal_default_instance() && timeout_ != nullptr;
}
inline bool GetRecordingCallAction::has_timeout() const {
  return _internal_has_timeout();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetRecordingCallAction::_internal_timeout() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = timeout_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetRecordingCallAction::timeout() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.timeout)
  return _internal_timeout();
}
inline void GetRecordingCallAction::unsafe_arena_set_allocated_timeout(
    PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.timeout)
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::release_timeout() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::unsafe_arena_release_timeout() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetRecordingCallAction.timeout)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::_internal_mutable_timeout() {
  
  if (timeout_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    timeout_ = p;
  }
  return timeout_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::mutable_timeout() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetRecordingCallAction.timeout)
  return _internal_mutable_timeout();
}
inline void GetRecordingCallAction::set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout)->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.timeout)
}

// .google.protobuf.Duration max_length = 4;
inline bool GetRecordingCallAction::_internal_has_max_length() const {
  return this != internal_default_instance() && max_length_ != nullptr;
}
inline bool GetRecordingCallAction::has_max_length() const {
  return _internal_has_max_length();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetRecordingCallAction::_internal_max_length() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = max_length_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& GetRecordingCallAction::max_length() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.max_length)
  return _internal_max_length();
}
inline void GetRecordingCallAction::unsafe_arena_set_allocated_max_length(
    PROTOBUF_NAMESPACE_ID::Duration* max_length) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_length_);
  }
  max_length_ = max_length;
  if (max_length) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.max_length)
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::release_max_length() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = max_length_;
  max_length_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::unsafe_arena_release_max_length() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetRecordingCallAction.max_length)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = max_length_;
  max_length_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::_internal_mutable_max_length() {
  
  if (max_length_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    max_length_ = p;
  }
  return max_length_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* GetRecordingCallAction::mutable_max_length() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetRecordingCallAction.max_length)
  return _internal_mutable_max_length();
}
inline void GetRecordingCallAction::set_allocated_max_length(PROTOBUF_NAMESPACE_ID::Duration* max_length) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_length_);
  }
  if (max_length) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_length)->GetArena();
    if (message_arena != submessage_arena) {
      max_length = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_length, submessage_arena);
    }
    
  } else {
    
  }
  max_length_ = max_length;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.max_length)
}

// .google.protobuf.StringValue finish_on_key = 5;
inline bool GetRecordingCallAction::_internal_has_finish_on_key() const {
  return this != internal_default_instance() && finish_on_key_ != nullptr;
}
inline bool GetRecordingCallAction::has_finish_on_key() const {
  return _internal_has_finish_on_key();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& GetRecordingCallAction::_internal_finish_on_key() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = finish_on_key_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& GetRecordingCallAction::finish_on_key() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.finish_on_key)
  return _internal_finish_on_key();
}
inline void GetRecordingCallAction::unsafe_arena_set_allocated_finish_on_key(
    PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key_);
  }
  finish_on_key_ = finish_on_key;
  if (finish_on_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.finish_on_key)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetRecordingCallAction::release_finish_on_key() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = finish_on_key_;
  finish_on_key_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetRecordingCallAction::unsafe_arena_release_finish_on_key() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.GetRecordingCallAction.finish_on_key)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = finish_on_key_;
  finish_on_key_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetRecordingCallAction::_internal_mutable_finish_on_key() {
  
  if (finish_on_key_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    finish_on_key_ = p;
  }
  return finish_on_key_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* GetRecordingCallAction::mutable_finish_on_key() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.GetRecordingCallAction.finish_on_key)
  return _internal_mutable_finish_on_key();
}
inline void GetRecordingCallAction::set_allocated_finish_on_key(PROTOBUF_NAMESPACE_ID::StringValue* finish_on_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key_);
  }
  if (finish_on_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(finish_on_key)->GetArena();
    if (message_arena != submessage_arena) {
      finish_on_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, finish_on_key, submessage_arena);
    }
    
  } else {
    
  }
  finish_on_key_ = finish_on_key;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.GetRecordingCallAction.finish_on_key)
}

// bool play_beep = 6;
inline void GetRecordingCallAction::clear_play_beep() {
  play_beep_ = false;
}
inline bool GetRecordingCallAction::_internal_play_beep() const {
  return play_beep_;
}
inline bool GetRecordingCallAction::play_beep() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.play_beep)
  return _internal_play_beep();
}
inline void GetRecordingCallAction::_internal_set_play_beep(bool value) {
  
  play_beep_ = value;
}
inline void GetRecordingCallAction::set_play_beep(bool value) {
  _internal_set_play_beep(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.GetRecordingCallAction.play_beep)
}

// bool trim_silence = 7;
inline void GetRecordingCallAction::clear_trim_silence() {
  trim_silence_ = false;
}
inline bool GetRecordingCallAction::_internal_trim_silence() const {
  return trim_silence_;
}
inline bool GetRecordingCallAction::trim_silence() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.GetRecordingCallAction.trim_silence)
  return _internal_trim_silence();
}
inline void GetRecordingCallAction::_internal_set_trim_silence(bool value) {
  
  trim_silence_ = value;
}
inline void GetRecordingCallAction::set_trim_silence(bool value) {
  _internal_set_trim_silence(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.GetRecordingCallAction.trim_silence)
}

inline bool GetRecordingCallAction::has_prompt() const {
  return prompt_case() != PROMPT_NOT_SET;
}
inline void GetRecordingCallAction::clear_has_prompt() {
  _oneof_case_[0] = PROMPT_NOT_SET;
}
inline GetRecordingCallAction::PromptCase GetRecordingCallAction::prompt_case() const {
  return GetRecordingCallAction::PromptCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RecordSessionCallAction

// -------------------------------------------------------------------

// DialCallAction

// repeated .com.elarian.hera.proto.CustomerNumber customer_numbers = 1;
inline int DialCallAction::_internal_customer_numbers_size() const {
  return customer_numbers_.size();
}
inline int DialCallAction::customer_numbers_size() const {
  return _internal_customer_numbers_size();
}
inline ::com::elarian::hera::proto::CustomerNumber* DialCallAction::mutable_customer_numbers(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DialCallAction.customer_numbers)
  return customer_numbers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >*
DialCallAction::mutable_customer_numbers() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.DialCallAction.customer_numbers)
  return &customer_numbers_;
}
inline const ::com::elarian::hera::proto::CustomerNumber& DialCallAction::_internal_customer_numbers(int index) const {
  return customer_numbers_.Get(index);
}
inline const ::com::elarian::hera::proto::CustomerNumber& DialCallAction::customer_numbers(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.customer_numbers)
  return _internal_customer_numbers(index);
}
inline ::com::elarian::hera::proto::CustomerNumber* DialCallAction::_internal_add_customer_numbers() {
  return customer_numbers_.Add();
}
inline ::com::elarian::hera::proto::CustomerNumber* DialCallAction::add_customer_numbers() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.DialCallAction.customer_numbers)
  return _internal_add_customer_numbers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::CustomerNumber >&
DialCallAction::customer_numbers() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.DialCallAction.customer_numbers)
  return customer_numbers_;
}

// bool record = 2;
inline void DialCallAction::clear_record() {
  record_ = false;
}
inline bool DialCallAction::_internal_record() const {
  return record_;
}
inline bool DialCallAction::record() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.record)
  return _internal_record();
}
inline void DialCallAction::_internal_set_record(bool value) {
  
  record_ = value;
}
inline void DialCallAction::set_record(bool value) {
  _internal_set_record(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.DialCallAction.record)
}

// bool sequential = 3;
inline void DialCallAction::clear_sequential() {
  sequential_ = false;
}
inline bool DialCallAction::_internal_sequential() const {
  return sequential_;
}
inline bool DialCallAction::sequential() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.sequential)
  return _internal_sequential();
}
inline void DialCallAction::_internal_set_sequential(bool value) {
  
  sequential_ = value;
}
inline void DialCallAction::set_sequential(bool value) {
  _internal_set_sequential(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.DialCallAction.sequential)
}

// .google.protobuf.StringValue ringback_tone = 4;
inline bool DialCallAction::_internal_has_ringback_tone() const {
  return this != internal_default_instance() && ringback_tone_ != nullptr;
}
inline bool DialCallAction::has_ringback_tone() const {
  return _internal_has_ringback_tone();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DialCallAction::_internal_ringback_tone() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = ringback_tone_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DialCallAction::ringback_tone() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.ringback_tone)
  return _internal_ringback_tone();
}
inline void DialCallAction::unsafe_arena_set_allocated_ringback_tone(
    PROTOBUF_NAMESPACE_ID::StringValue* ringback_tone) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ringback_tone_);
  }
  ringback_tone_ = ringback_tone;
  if (ringback_tone) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.DialCallAction.ringback_tone)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::release_ringback_tone() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = ringback_tone_;
  ringback_tone_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::unsafe_arena_release_ringback_tone() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.DialCallAction.ringback_tone)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = ringback_tone_;
  ringback_tone_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::_internal_mutable_ringback_tone() {
  
  if (ringback_tone_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    ringback_tone_ = p;
  }
  return ringback_tone_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::mutable_ringback_tone() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DialCallAction.ringback_tone)
  return _internal_mutable_ringback_tone();
}
inline void DialCallAction::set_allocated_ringback_tone(PROTOBUF_NAMESPACE_ID::StringValue* ringback_tone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ringback_tone_);
  }
  if (ringback_tone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ringback_tone)->GetArena();
    if (message_arena != submessage_arena) {
      ringback_tone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ringback_tone, submessage_arena);
    }
    
  } else {
    
  }
  ringback_tone_ = ringback_tone;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.DialCallAction.ringback_tone)
}

// .google.protobuf.StringValue caller_id = 5;
inline bool DialCallAction::_internal_has_caller_id() const {
  return this != internal_default_instance() && caller_id_ != nullptr;
}
inline bool DialCallAction::has_caller_id() const {
  return _internal_has_caller_id();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DialCallAction::_internal_caller_id() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = caller_id_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DialCallAction::caller_id() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.caller_id)
  return _internal_caller_id();
}
inline void DialCallAction::unsafe_arena_set_allocated_caller_id(
    PROTOBUF_NAMESPACE_ID::StringValue* caller_id) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_id_);
  }
  caller_id_ = caller_id;
  if (caller_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.DialCallAction.caller_id)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::release_caller_id() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = caller_id_;
  caller_id_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::unsafe_arena_release_caller_id() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.DialCallAction.caller_id)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = caller_id_;
  caller_id_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::_internal_mutable_caller_id() {
  
  if (caller_id_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    caller_id_ = p;
  }
  return caller_id_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DialCallAction::mutable_caller_id() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DialCallAction.caller_id)
  return _internal_mutable_caller_id();
}
inline void DialCallAction::set_allocated_caller_id(PROTOBUF_NAMESPACE_ID::StringValue* caller_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_id_);
  }
  if (caller_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(caller_id)->GetArena();
    if (message_arena != submessage_arena) {
      caller_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, caller_id, submessage_arena);
    }
    
  } else {
    
  }
  caller_id_ = caller_id;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.DialCallAction.caller_id)
}

// .google.protobuf.Int32Value max_duration = 6;
inline bool DialCallAction::_internal_has_max_duration() const {
  return this != internal_default_instance() && max_duration_ != nullptr;
}
inline bool DialCallAction::has_max_duration() const {
  return _internal_has_max_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Int32Value& DialCallAction::_internal_max_duration() const {
  const PROTOBUF_NAMESPACE_ID::Int32Value* p = max_duration_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Int32Value&>(
      PROTOBUF_NAMESPACE_ID::_Int32Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Int32Value& DialCallAction::max_duration() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DialCallAction.max_duration)
  return _internal_max_duration();
}
inline void DialCallAction::unsafe_arena_set_allocated_max_duration(
    PROTOBUF_NAMESPACE_ID::Int32Value* max_duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_duration_);
  }
  max_duration_ = max_duration;
  if (max_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.DialCallAction.max_duration)
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* DialCallAction::release_max_duration() {
  
  PROTOBUF_NAMESPACE_ID::Int32Value* temp = max_duration_;
  max_duration_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* DialCallAction::unsafe_arena_release_max_duration() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.DialCallAction.max_duration)
  
  PROTOBUF_NAMESPACE_ID::Int32Value* temp = max_duration_;
  max_duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* DialCallAction::_internal_mutable_max_duration() {
  
  if (max_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Int32Value>(GetArena());
    max_duration_ = p;
  }
  return max_duration_;
}
inline PROTOBUF_NAMESPACE_ID::Int32Value* DialCallAction::mutable_max_duration() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DialCallAction.max_duration)
  return _internal_mutable_max_duration();
}
inline void DialCallAction::set_allocated_max_duration(PROTOBUF_NAMESPACE_ID::Int32Value* max_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_duration_);
  }
  if (max_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(max_duration)->GetArena();
    if (message_arena != submessage_arena) {
      max_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, max_duration, submessage_arena);
    }
    
  } else {
    
  }
  max_duration_ = max_duration;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.DialCallAction.max_duration)
}

// -------------------------------------------------------------------

// EnqueueCallAction

// .google.protobuf.StringValue hold_music = 1;
inline bool EnqueueCallAction::_internal_has_hold_music() const {
  return this != internal_default_instance() && hold_music_ != nullptr;
}
inline bool EnqueueCallAction::has_hold_music() const {
  return _internal_has_hold_music();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& EnqueueCallAction::_internal_hold_music() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = hold_music_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& EnqueueCallAction::hold_music() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EnqueueCallAction.hold_music)
  return _internal_hold_music();
}
inline void EnqueueCallAction::unsafe_arena_set_allocated_hold_music(
    PROTOBUF_NAMESPACE_ID::StringValue* hold_music) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hold_music_);
  }
  hold_music_ = hold_music;
  if (hold_music) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.EnqueueCallAction.hold_music)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::release_hold_music() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = hold_music_;
  hold_music_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::unsafe_arena_release_hold_music() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.EnqueueCallAction.hold_music)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = hold_music_;
  hold_music_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::_internal_mutable_hold_music() {
  
  if (hold_music_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    hold_music_ = p;
  }
  return hold_music_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::mutable_hold_music() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EnqueueCallAction.hold_music)
  return _internal_mutable_hold_music();
}
inline void EnqueueCallAction::set_allocated_hold_music(PROTOBUF_NAMESPACE_ID::StringValue* hold_music) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hold_music_);
  }
  if (hold_music) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hold_music)->GetArena();
    if (message_arena != submessage_arena) {
      hold_music = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hold_music, submessage_arena);
    }
    
  } else {
    
  }
  hold_music_ = hold_music;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.EnqueueCallAction.hold_music)
}

// .google.protobuf.StringValue queue_name = 2;
inline bool EnqueueCallAction::_internal_has_queue_name() const {
  return this != internal_default_instance() && queue_name_ != nullptr;
}
inline bool EnqueueCallAction::has_queue_name() const {
  return _internal_has_queue_name();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& EnqueueCallAction::_internal_queue_name() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = queue_name_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& EnqueueCallAction::queue_name() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.EnqueueCallAction.queue_name)
  return _internal_queue_name();
}
inline void EnqueueCallAction::unsafe_arena_set_allocated_queue_name(
    PROTOBUF_NAMESPACE_ID::StringValue* queue_name) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name_);
  }
  queue_name_ = queue_name;
  if (queue_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.EnqueueCallAction.queue_name)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::release_queue_name() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = queue_name_;
  queue_name_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::unsafe_arena_release_queue_name() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.EnqueueCallAction.queue_name)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = queue_name_;
  queue_name_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::_internal_mutable_queue_name() {
  
  if (queue_name_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    queue_name_ = p;
  }
  return queue_name_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* EnqueueCallAction::mutable_queue_name() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.EnqueueCallAction.queue_name)
  return _internal_mutable_queue_name();
}
inline void EnqueueCallAction::set_allocated_queue_name(PROTOBUF_NAMESPACE_ID::StringValue* queue_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name_);
  }
  if (queue_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name)->GetArena();
    if (message_arena != submessage_arena) {
      queue_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queue_name, submessage_arena);
    }
    
  } else {
    
  }
  queue_name_ = queue_name;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.EnqueueCallAction.queue_name)
}

// -------------------------------------------------------------------

// DequeueCallAction

// .com.elarian.hera.proto.MessagingChannelNumber channel_number = 1;
inline bool DequeueCallAction::_internal_has_channel_number() const {
  return this != internal_default_instance() && channel_number_ != nullptr;
}
inline bool DequeueCallAction::has_channel_number() const {
  return _internal_has_channel_number();
}
inline void DequeueCallAction::clear_channel_number() {
  if (GetArena() == nullptr && channel_number_ != nullptr) {
    delete channel_number_;
  }
  channel_number_ = nullptr;
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& DequeueCallAction::_internal_channel_number() const {
  const ::com::elarian::hera::proto::MessagingChannelNumber* p = channel_number_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::MessagingChannelNumber&>(
      ::com::elarian::hera::proto::_MessagingChannelNumber_default_instance_);
}
inline const ::com::elarian::hera::proto::MessagingChannelNumber& DequeueCallAction::channel_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DequeueCallAction.channel_number)
  return _internal_channel_number();
}
inline void DequeueCallAction::unsafe_arena_set_allocated_channel_number(
    ::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel_number_);
  }
  channel_number_ = channel_number;
  if (channel_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.DequeueCallAction.channel_number)
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* DequeueCallAction::release_channel_number() {
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* DequeueCallAction::unsafe_arena_release_channel_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.DequeueCallAction.channel_number)
  
  ::com::elarian::hera::proto::MessagingChannelNumber* temp = channel_number_;
  channel_number_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* DequeueCallAction::_internal_mutable_channel_number() {
  
  if (channel_number_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::MessagingChannelNumber>(GetArena());
    channel_number_ = p;
  }
  return channel_number_;
}
inline ::com::elarian::hera::proto::MessagingChannelNumber* DequeueCallAction::mutable_channel_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DequeueCallAction.channel_number)
  return _internal_mutable_channel_number();
}
inline void DequeueCallAction::set_allocated_channel_number(::com::elarian::hera::proto::MessagingChannelNumber* channel_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete channel_number_;
  }
  if (channel_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(channel_number);
    if (message_arena != submessage_arena) {
      channel_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel_number, submessage_arena);
    }
    
  } else {
    
  }
  channel_number_ = channel_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.DequeueCallAction.channel_number)
}

// bool record = 2;
inline void DequeueCallAction::clear_record() {
  record_ = false;
}
inline bool DequeueCallAction::_internal_record() const {
  return record_;
}
inline bool DequeueCallAction::record() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DequeueCallAction.record)
  return _internal_record();
}
inline void DequeueCallAction::_internal_set_record(bool value) {
  
  record_ = value;
}
inline void DequeueCallAction::set_record(bool value) {
  _internal_set_record(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.DequeueCallAction.record)
}

// .google.protobuf.StringValue queue_name = 3;
inline bool DequeueCallAction::_internal_has_queue_name() const {
  return this != internal_default_instance() && queue_name_ != nullptr;
}
inline bool DequeueCallAction::has_queue_name() const {
  return _internal_has_queue_name();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DequeueCallAction::_internal_queue_name() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = queue_name_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& DequeueCallAction::queue_name() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.DequeueCallAction.queue_name)
  return _internal_queue_name();
}
inline void DequeueCallAction::unsafe_arena_set_allocated_queue_name(
    PROTOBUF_NAMESPACE_ID::StringValue* queue_name) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name_);
  }
  queue_name_ = queue_name;
  if (queue_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.DequeueCallAction.queue_name)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DequeueCallAction::release_queue_name() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = queue_name_;
  queue_name_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DequeueCallAction::unsafe_arena_release_queue_name() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.DequeueCallAction.queue_name)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = queue_name_;
  queue_name_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DequeueCallAction::_internal_mutable_queue_name() {
  
  if (queue_name_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    queue_name_ = p;
  }
  return queue_name_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* DequeueCallAction::mutable_queue_name() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.DequeueCallAction.queue_name)
  return _internal_mutable_queue_name();
}
inline void DequeueCallAction::set_allocated_queue_name(PROTOBUF_NAMESPACE_ID::StringValue* queue_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name_);
  }
  if (queue_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_name)->GetArena();
    if (message_arena != submessage_arena) {
      queue_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queue_name, submessage_arena);
    }
    
  } else {
    
  }
  queue_name_ = queue_name;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.DequeueCallAction.queue_name)
}

// -------------------------------------------------------------------

// RejectCallAction

// -------------------------------------------------------------------

// RedirectCallAction

// string url = 1;
inline void RedirectCallAction::clear_url() {
  url_.ClearToEmpty();
}
inline const std::string& RedirectCallAction::url() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.RedirectCallAction.url)
  return _internal_url();
}
inline void RedirectCallAction::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.RedirectCallAction.url)
}
inline std::string* RedirectCallAction::mutable_url() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.RedirectCallAction.url)
  return _internal_mutable_url();
}
inline const std::string& RedirectCallAction::_internal_url() const {
  return url_.Get();
}
inline void RedirectCallAction::_internal_set_url(const std::string& value) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void RedirectCallAction::set_url(std::string&& value) {
  
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.RedirectCallAction.url)
}
inline void RedirectCallAction::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.RedirectCallAction.url)
}
inline void RedirectCallAction::set_url(const char* value,
    size_t size) {
  
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.RedirectCallAction.url)
}
inline std::string* RedirectCallAction::_internal_mutable_url() {
  
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* RedirectCallAction::release_url() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.RedirectCallAction.url)
  return url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void RedirectCallAction::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    
  } else {
    
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.RedirectCallAction.url)
}

// -------------------------------------------------------------------

// VoiceCallAction

// .com.elarian.hera.proto.SayCallAction say = 1;
inline bool VoiceCallAction::_internal_has_say() const {
  return entry_case() == kSay;
}
inline bool VoiceCallAction::has_say() const {
  return _internal_has_say();
}
inline void VoiceCallAction::set_has_say() {
  _oneof_case_[0] = kSay;
}
inline void VoiceCallAction::clear_say() {
  if (_internal_has_say()) {
    if (GetArena() == nullptr) {
      delete entry_.say_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::SayCallAction* VoiceCallAction::release_say() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.say)
  if (_internal_has_say()) {
    clear_has_entry();
      ::com::elarian::hera::proto::SayCallAction* temp = entry_.say_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::SayCallAction& VoiceCallAction::_internal_say() const {
  return _internal_has_say()
      ? *entry_.say_
      : reinterpret_cast< ::com::elarian::hera::proto::SayCallAction&>(::com::elarian::hera::proto::_SayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::SayCallAction& VoiceCallAction::say() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.say)
  return _internal_say();
}
inline ::com::elarian::hera::proto::SayCallAction* VoiceCallAction::unsafe_arena_release_say() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.say)
  if (_internal_has_say()) {
    clear_has_entry();
    ::com::elarian::hera::proto::SayCallAction* temp = entry_.say_;
    entry_.say_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_say(::com::elarian::hera::proto::SayCallAction* say) {
  clear_entry();
  if (say) {
    set_has_say();
    entry_.say_ = say;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.say)
}
inline ::com::elarian::hera::proto::SayCallAction* VoiceCallAction::_internal_mutable_say() {
  if (!_internal_has_say()) {
    clear_entry();
    set_has_say();
    entry_.say_ = CreateMaybeMessage< ::com::elarian::hera::proto::SayCallAction >(GetArena());
  }
  return entry_.say_;
}
inline ::com::elarian::hera::proto::SayCallAction* VoiceCallAction::mutable_say() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.say)
  return _internal_mutable_say();
}

// .com.elarian.hera.proto.PlayCallAction play = 2;
inline bool VoiceCallAction::_internal_has_play() const {
  return entry_case() == kPlay;
}
inline bool VoiceCallAction::has_play() const {
  return _internal_has_play();
}
inline void VoiceCallAction::set_has_play() {
  _oneof_case_[0] = kPlay;
}
inline void VoiceCallAction::clear_play() {
  if (_internal_has_play()) {
    if (GetArena() == nullptr) {
      delete entry_.play_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::PlayCallAction* VoiceCallAction::release_play() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.play)
  if (_internal_has_play()) {
    clear_has_entry();
      ::com::elarian::hera::proto::PlayCallAction* temp = entry_.play_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::PlayCallAction& VoiceCallAction::_internal_play() const {
  return _internal_has_play()
      ? *entry_.play_
      : reinterpret_cast< ::com::elarian::hera::proto::PlayCallAction&>(::com::elarian::hera::proto::_PlayCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::PlayCallAction& VoiceCallAction::play() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.play)
  return _internal_play();
}
inline ::com::elarian::hera::proto::PlayCallAction* VoiceCallAction::unsafe_arena_release_play() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.play)
  if (_internal_has_play()) {
    clear_has_entry();
    ::com::elarian::hera::proto::PlayCallAction* temp = entry_.play_;
    entry_.play_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_play(::com::elarian::hera::proto::PlayCallAction* play) {
  clear_entry();
  if (play) {
    set_has_play();
    entry_.play_ = play;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.play)
}
inline ::com::elarian::hera::proto::PlayCallAction* VoiceCallAction::_internal_mutable_play() {
  if (!_internal_has_play()) {
    clear_entry();
    set_has_play();
    entry_.play_ = CreateMaybeMessage< ::com::elarian::hera::proto::PlayCallAction >(GetArena());
  }
  return entry_.play_;
}
inline ::com::elarian::hera::proto::PlayCallAction* VoiceCallAction::mutable_play() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.play)
  return _internal_mutable_play();
}

// .com.elarian.hera.proto.GetDigitsCallAction get_digits = 3;
inline bool VoiceCallAction::_internal_has_get_digits() const {
  return entry_case() == kGetDigits;
}
inline bool VoiceCallAction::has_get_digits() const {
  return _internal_has_get_digits();
}
inline void VoiceCallAction::set_has_get_digits() {
  _oneof_case_[0] = kGetDigits;
}
inline void VoiceCallAction::clear_get_digits() {
  if (_internal_has_get_digits()) {
    if (GetArena() == nullptr) {
      delete entry_.get_digits_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::GetDigitsCallAction* VoiceCallAction::release_get_digits() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.get_digits)
  if (_internal_has_get_digits()) {
    clear_has_entry();
      ::com::elarian::hera::proto::GetDigitsCallAction* temp = entry_.get_digits_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.get_digits_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::GetDigitsCallAction& VoiceCallAction::_internal_get_digits() const {
  return _internal_has_get_digits()
      ? *entry_.get_digits_
      : reinterpret_cast< ::com::elarian::hera::proto::GetDigitsCallAction&>(::com::elarian::hera::proto::_GetDigitsCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::GetDigitsCallAction& VoiceCallAction::get_digits() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.get_digits)
  return _internal_get_digits();
}
inline ::com::elarian::hera::proto::GetDigitsCallAction* VoiceCallAction::unsafe_arena_release_get_digits() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.get_digits)
  if (_internal_has_get_digits()) {
    clear_has_entry();
    ::com::elarian::hera::proto::GetDigitsCallAction* temp = entry_.get_digits_;
    entry_.get_digits_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_get_digits(::com::elarian::hera::proto::GetDigitsCallAction* get_digits) {
  clear_entry();
  if (get_digits) {
    set_has_get_digits();
    entry_.get_digits_ = get_digits;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.get_digits)
}
inline ::com::elarian::hera::proto::GetDigitsCallAction* VoiceCallAction::_internal_mutable_get_digits() {
  if (!_internal_has_get_digits()) {
    clear_entry();
    set_has_get_digits();
    entry_.get_digits_ = CreateMaybeMessage< ::com::elarian::hera::proto::GetDigitsCallAction >(GetArena());
  }
  return entry_.get_digits_;
}
inline ::com::elarian::hera::proto::GetDigitsCallAction* VoiceCallAction::mutable_get_digits() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.get_digits)
  return _internal_mutable_get_digits();
}

// .com.elarian.hera.proto.DialCallAction dial = 4;
inline bool VoiceCallAction::_internal_has_dial() const {
  return entry_case() == kDial;
}
inline bool VoiceCallAction::has_dial() const {
  return _internal_has_dial();
}
inline void VoiceCallAction::set_has_dial() {
  _oneof_case_[0] = kDial;
}
inline void VoiceCallAction::clear_dial() {
  if (_internal_has_dial()) {
    if (GetArena() == nullptr) {
      delete entry_.dial_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::DialCallAction* VoiceCallAction::release_dial() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.dial)
  if (_internal_has_dial()) {
    clear_has_entry();
      ::com::elarian::hera::proto::DialCallAction* temp = entry_.dial_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.dial_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::DialCallAction& VoiceCallAction::_internal_dial() const {
  return _internal_has_dial()
      ? *entry_.dial_
      : reinterpret_cast< ::com::elarian::hera::proto::DialCallAction&>(::com::elarian::hera::proto::_DialCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::DialCallAction& VoiceCallAction::dial() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.dial)
  return _internal_dial();
}
inline ::com::elarian::hera::proto::DialCallAction* VoiceCallAction::unsafe_arena_release_dial() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.dial)
  if (_internal_has_dial()) {
    clear_has_entry();
    ::com::elarian::hera::proto::DialCallAction* temp = entry_.dial_;
    entry_.dial_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_dial(::com::elarian::hera::proto::DialCallAction* dial) {
  clear_entry();
  if (dial) {
    set_has_dial();
    entry_.dial_ = dial;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.dial)
}
inline ::com::elarian::hera::proto::DialCallAction* VoiceCallAction::_internal_mutable_dial() {
  if (!_internal_has_dial()) {
    clear_entry();
    set_has_dial();
    entry_.dial_ = CreateMaybeMessage< ::com::elarian::hera::proto::DialCallAction >(GetArena());
  }
  return entry_.dial_;
}
inline ::com::elarian::hera::proto::DialCallAction* VoiceCallAction::mutable_dial() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.dial)
  return _internal_mutable_dial();
}

// .com.elarian.hera.proto.RecordSessionCallAction record_session = 5;
inline bool VoiceCallAction::_internal_has_record_session() const {
  return entry_case() == kRecordSession;
}
inline bool VoiceCallAction::has_record_session() const {
  return _internal_has_record_session();
}
inline void VoiceCallAction::set_has_record_session() {
  _oneof_case_[0] = kRecordSession;
}
inline void VoiceCallAction::clear_record_session() {
  if (_internal_has_record_session()) {
    if (GetArena() == nullptr) {
      delete entry_.record_session_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::RecordSessionCallAction* VoiceCallAction::release_record_session() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.record_session)
  if (_internal_has_record_session()) {
    clear_has_entry();
      ::com::elarian::hera::proto::RecordSessionCallAction* temp = entry_.record_session_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.record_session_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::RecordSessionCallAction& VoiceCallAction::_internal_record_session() const {
  return _internal_has_record_session()
      ? *entry_.record_session_
      : reinterpret_cast< ::com::elarian::hera::proto::RecordSessionCallAction&>(::com::elarian::hera::proto::_RecordSessionCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::RecordSessionCallAction& VoiceCallAction::record_session() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.record_session)
  return _internal_record_session();
}
inline ::com::elarian::hera::proto::RecordSessionCallAction* VoiceCallAction::unsafe_arena_release_record_session() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.record_session)
  if (_internal_has_record_session()) {
    clear_has_entry();
    ::com::elarian::hera::proto::RecordSessionCallAction* temp = entry_.record_session_;
    entry_.record_session_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_record_session(::com::elarian::hera::proto::RecordSessionCallAction* record_session) {
  clear_entry();
  if (record_session) {
    set_has_record_session();
    entry_.record_session_ = record_session;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.record_session)
}
inline ::com::elarian::hera::proto::RecordSessionCallAction* VoiceCallAction::_internal_mutable_record_session() {
  if (!_internal_has_record_session()) {
    clear_entry();
    set_has_record_session();
    entry_.record_session_ = CreateMaybeMessage< ::com::elarian::hera::proto::RecordSessionCallAction >(GetArena());
  }
  return entry_.record_session_;
}
inline ::com::elarian::hera::proto::RecordSessionCallAction* VoiceCallAction::mutable_record_session() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.record_session)
  return _internal_mutable_record_session();
}

// .com.elarian.hera.proto.GetRecordingCallAction get_recording = 6;
inline bool VoiceCallAction::_internal_has_get_recording() const {
  return entry_case() == kGetRecording;
}
inline bool VoiceCallAction::has_get_recording() const {
  return _internal_has_get_recording();
}
inline void VoiceCallAction::set_has_get_recording() {
  _oneof_case_[0] = kGetRecording;
}
inline void VoiceCallAction::clear_get_recording() {
  if (_internal_has_get_recording()) {
    if (GetArena() == nullptr) {
      delete entry_.get_recording_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::GetRecordingCallAction* VoiceCallAction::release_get_recording() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.get_recording)
  if (_internal_has_get_recording()) {
    clear_has_entry();
      ::com::elarian::hera::proto::GetRecordingCallAction* temp = entry_.get_recording_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.get_recording_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::GetRecordingCallAction& VoiceCallAction::_internal_get_recording() const {
  return _internal_has_get_recording()
      ? *entry_.get_recording_
      : reinterpret_cast< ::com::elarian::hera::proto::GetRecordingCallAction&>(::com::elarian::hera::proto::_GetRecordingCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::GetRecordingCallAction& VoiceCallAction::get_recording() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.get_recording)
  return _internal_get_recording();
}
inline ::com::elarian::hera::proto::GetRecordingCallAction* VoiceCallAction::unsafe_arena_release_get_recording() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.get_recording)
  if (_internal_has_get_recording()) {
    clear_has_entry();
    ::com::elarian::hera::proto::GetRecordingCallAction* temp = entry_.get_recording_;
    entry_.get_recording_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_get_recording(::com::elarian::hera::proto::GetRecordingCallAction* get_recording) {
  clear_entry();
  if (get_recording) {
    set_has_get_recording();
    entry_.get_recording_ = get_recording;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.get_recording)
}
inline ::com::elarian::hera::proto::GetRecordingCallAction* VoiceCallAction::_internal_mutable_get_recording() {
  if (!_internal_has_get_recording()) {
    clear_entry();
    set_has_get_recording();
    entry_.get_recording_ = CreateMaybeMessage< ::com::elarian::hera::proto::GetRecordingCallAction >(GetArena());
  }
  return entry_.get_recording_;
}
inline ::com::elarian::hera::proto::GetRecordingCallAction* VoiceCallAction::mutable_get_recording() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.get_recording)
  return _internal_mutable_get_recording();
}

// .com.elarian.hera.proto.EnqueueCallAction enqueue = 7;
inline bool VoiceCallAction::_internal_has_enqueue() const {
  return entry_case() == kEnqueue;
}
inline bool VoiceCallAction::has_enqueue() const {
  return _internal_has_enqueue();
}
inline void VoiceCallAction::set_has_enqueue() {
  _oneof_case_[0] = kEnqueue;
}
inline void VoiceCallAction::clear_enqueue() {
  if (_internal_has_enqueue()) {
    if (GetArena() == nullptr) {
      delete entry_.enqueue_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::EnqueueCallAction* VoiceCallAction::release_enqueue() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.enqueue)
  if (_internal_has_enqueue()) {
    clear_has_entry();
      ::com::elarian::hera::proto::EnqueueCallAction* temp = entry_.enqueue_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.enqueue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::EnqueueCallAction& VoiceCallAction::_internal_enqueue() const {
  return _internal_has_enqueue()
      ? *entry_.enqueue_
      : reinterpret_cast< ::com::elarian::hera::proto::EnqueueCallAction&>(::com::elarian::hera::proto::_EnqueueCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::EnqueueCallAction& VoiceCallAction::enqueue() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.enqueue)
  return _internal_enqueue();
}
inline ::com::elarian::hera::proto::EnqueueCallAction* VoiceCallAction::unsafe_arena_release_enqueue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.enqueue)
  if (_internal_has_enqueue()) {
    clear_has_entry();
    ::com::elarian::hera::proto::EnqueueCallAction* temp = entry_.enqueue_;
    entry_.enqueue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_enqueue(::com::elarian::hera::proto::EnqueueCallAction* enqueue) {
  clear_entry();
  if (enqueue) {
    set_has_enqueue();
    entry_.enqueue_ = enqueue;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.enqueue)
}
inline ::com::elarian::hera::proto::EnqueueCallAction* VoiceCallAction::_internal_mutable_enqueue() {
  if (!_internal_has_enqueue()) {
    clear_entry();
    set_has_enqueue();
    entry_.enqueue_ = CreateMaybeMessage< ::com::elarian::hera::proto::EnqueueCallAction >(GetArena());
  }
  return entry_.enqueue_;
}
inline ::com::elarian::hera::proto::EnqueueCallAction* VoiceCallAction::mutable_enqueue() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.enqueue)
  return _internal_mutable_enqueue();
}

// .com.elarian.hera.proto.DequeueCallAction dequeue = 8;
inline bool VoiceCallAction::_internal_has_dequeue() const {
  return entry_case() == kDequeue;
}
inline bool VoiceCallAction::has_dequeue() const {
  return _internal_has_dequeue();
}
inline void VoiceCallAction::set_has_dequeue() {
  _oneof_case_[0] = kDequeue;
}
inline void VoiceCallAction::clear_dequeue() {
  if (_internal_has_dequeue()) {
    if (GetArena() == nullptr) {
      delete entry_.dequeue_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::DequeueCallAction* VoiceCallAction::release_dequeue() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.dequeue)
  if (_internal_has_dequeue()) {
    clear_has_entry();
      ::com::elarian::hera::proto::DequeueCallAction* temp = entry_.dequeue_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.dequeue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::DequeueCallAction& VoiceCallAction::_internal_dequeue() const {
  return _internal_has_dequeue()
      ? *entry_.dequeue_
      : reinterpret_cast< ::com::elarian::hera::proto::DequeueCallAction&>(::com::elarian::hera::proto::_DequeueCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::DequeueCallAction& VoiceCallAction::dequeue() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.dequeue)
  return _internal_dequeue();
}
inline ::com::elarian::hera::proto::DequeueCallAction* VoiceCallAction::unsafe_arena_release_dequeue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.dequeue)
  if (_internal_has_dequeue()) {
    clear_has_entry();
    ::com::elarian::hera::proto::DequeueCallAction* temp = entry_.dequeue_;
    entry_.dequeue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_dequeue(::com::elarian::hera::proto::DequeueCallAction* dequeue) {
  clear_entry();
  if (dequeue) {
    set_has_dequeue();
    entry_.dequeue_ = dequeue;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.dequeue)
}
inline ::com::elarian::hera::proto::DequeueCallAction* VoiceCallAction::_internal_mutable_dequeue() {
  if (!_internal_has_dequeue()) {
    clear_entry();
    set_has_dequeue();
    entry_.dequeue_ = CreateMaybeMessage< ::com::elarian::hera::proto::DequeueCallAction >(GetArena());
  }
  return entry_.dequeue_;
}
inline ::com::elarian::hera::proto::DequeueCallAction* VoiceCallAction::mutable_dequeue() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.dequeue)
  return _internal_mutable_dequeue();
}

// .com.elarian.hera.proto.RejectCallAction reject = 9;
inline bool VoiceCallAction::_internal_has_reject() const {
  return entry_case() == kReject;
}
inline bool VoiceCallAction::has_reject() const {
  return _internal_has_reject();
}
inline void VoiceCallAction::set_has_reject() {
  _oneof_case_[0] = kReject;
}
inline void VoiceCallAction::clear_reject() {
  if (_internal_has_reject()) {
    if (GetArena() == nullptr) {
      delete entry_.reject_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::RejectCallAction* VoiceCallAction::release_reject() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.reject)
  if (_internal_has_reject()) {
    clear_has_entry();
      ::com::elarian::hera::proto::RejectCallAction* temp = entry_.reject_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.reject_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::RejectCallAction& VoiceCallAction::_internal_reject() const {
  return _internal_has_reject()
      ? *entry_.reject_
      : reinterpret_cast< ::com::elarian::hera::proto::RejectCallAction&>(::com::elarian::hera::proto::_RejectCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::RejectCallAction& VoiceCallAction::reject() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.reject)
  return _internal_reject();
}
inline ::com::elarian::hera::proto::RejectCallAction* VoiceCallAction::unsafe_arena_release_reject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.reject)
  if (_internal_has_reject()) {
    clear_has_entry();
    ::com::elarian::hera::proto::RejectCallAction* temp = entry_.reject_;
    entry_.reject_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_reject(::com::elarian::hera::proto::RejectCallAction* reject) {
  clear_entry();
  if (reject) {
    set_has_reject();
    entry_.reject_ = reject;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.reject)
}
inline ::com::elarian::hera::proto::RejectCallAction* VoiceCallAction::_internal_mutable_reject() {
  if (!_internal_has_reject()) {
    clear_entry();
    set_has_reject();
    entry_.reject_ = CreateMaybeMessage< ::com::elarian::hera::proto::RejectCallAction >(GetArena());
  }
  return entry_.reject_;
}
inline ::com::elarian::hera::proto::RejectCallAction* VoiceCallAction::mutable_reject() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.reject)
  return _internal_mutable_reject();
}

// .com.elarian.hera.proto.RedirectCallAction redirect = 10;
inline bool VoiceCallAction::_internal_has_redirect() const {
  return entry_case() == kRedirect;
}
inline bool VoiceCallAction::has_redirect() const {
  return _internal_has_redirect();
}
inline void VoiceCallAction::set_has_redirect() {
  _oneof_case_[0] = kRedirect;
}
inline void VoiceCallAction::clear_redirect() {
  if (_internal_has_redirect()) {
    if (GetArena() == nullptr) {
      delete entry_.redirect_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::RedirectCallAction* VoiceCallAction::release_redirect() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallAction.redirect)
  if (_internal_has_redirect()) {
    clear_has_entry();
      ::com::elarian::hera::proto::RedirectCallAction* temp = entry_.redirect_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.redirect_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::RedirectCallAction& VoiceCallAction::_internal_redirect() const {
  return _internal_has_redirect()
      ? *entry_.redirect_
      : reinterpret_cast< ::com::elarian::hera::proto::RedirectCallAction&>(::com::elarian::hera::proto::_RedirectCallAction_default_instance_);
}
inline const ::com::elarian::hera::proto::RedirectCallAction& VoiceCallAction::redirect() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallAction.redirect)
  return _internal_redirect();
}
inline ::com::elarian::hera::proto::RedirectCallAction* VoiceCallAction::unsafe_arena_release_redirect() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.VoiceCallAction.redirect)
  if (_internal_has_redirect()) {
    clear_has_entry();
    ::com::elarian::hera::proto::RedirectCallAction* temp = entry_.redirect_;
    entry_.redirect_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void VoiceCallAction::unsafe_arena_set_allocated_redirect(::com::elarian::hera::proto::RedirectCallAction* redirect) {
  clear_entry();
  if (redirect) {
    set_has_redirect();
    entry_.redirect_ = redirect;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallAction.redirect)
}
inline ::com::elarian::hera::proto::RedirectCallAction* VoiceCallAction::_internal_mutable_redirect() {
  if (!_internal_has_redirect()) {
    clear_entry();
    set_has_redirect();
    entry_.redirect_ = CreateMaybeMessage< ::com::elarian::hera::proto::RedirectCallAction >(GetArena());
  }
  return entry_.redirect_;
}
inline ::com::elarian::hera::proto::RedirectCallAction* VoiceCallAction::mutable_redirect() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallAction.redirect)
  return _internal_mutable_redirect();
}

inline bool VoiceCallAction::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void VoiceCallAction::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline VoiceCallAction::EntryCase VoiceCallAction::entry_case() const {
  return VoiceCallAction::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// VoiceCallDialplanMessageBody

// repeated .com.elarian.hera.proto.VoiceCallAction actions = 1;
inline int VoiceCallDialplanMessageBody::_internal_actions_size() const {
  return actions_.size();
}
inline int VoiceCallDialplanMessageBody::actions_size() const {
  return _internal_actions_size();
}
inline void VoiceCallDialplanMessageBody::clear_actions() {
  actions_.Clear();
}
inline ::com::elarian::hera::proto::VoiceCallAction* VoiceCallDialplanMessageBody::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallDialplanMessageBody.actions)
  return actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::VoiceCallAction >*
VoiceCallDialplanMessageBody::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.VoiceCallDialplanMessageBody.actions)
  return &actions_;
}
inline const ::com::elarian::hera::proto::VoiceCallAction& VoiceCallDialplanMessageBody::_internal_actions(int index) const {
  return actions_.Get(index);
}
inline const ::com::elarian::hera::proto::VoiceCallAction& VoiceCallDialplanMessageBody::actions(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallDialplanMessageBody.actions)
  return _internal_actions(index);
}
inline ::com::elarian::hera::proto::VoiceCallAction* VoiceCallDialplanMessageBody::_internal_add_actions() {
  return actions_.Add();
}
inline ::com::elarian::hera::proto::VoiceCallAction* VoiceCallDialplanMessageBody::add_actions() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.VoiceCallDialplanMessageBody.actions)
  return _internal_add_actions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::VoiceCallAction >&
VoiceCallDialplanMessageBody::actions() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.VoiceCallDialplanMessageBody.actions)
  return actions_;
}

// -------------------------------------------------------------------

// VoiceCallDialInput

// string destination_number = 1;
inline void VoiceCallDialInput::clear_destination_number() {
  destination_number_.ClearToEmpty();
}
inline const std::string& VoiceCallDialInput::destination_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
  return _internal_destination_number();
}
inline void VoiceCallDialInput::set_destination_number(const std::string& value) {
  _internal_set_destination_number(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
}
inline std::string* VoiceCallDialInput::mutable_destination_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
  return _internal_mutable_destination_number();
}
inline const std::string& VoiceCallDialInput::_internal_destination_number() const {
  return destination_number_.Get();
}
inline void VoiceCallDialInput::_internal_set_destination_number(const std::string& value) {
  
  destination_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void VoiceCallDialInput::set_destination_number(std::string&& value) {
  
  destination_number_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
}
inline void VoiceCallDialInput::set_destination_number(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  destination_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
}
inline void VoiceCallDialInput::set_destination_number(const char* value,
    size_t size) {
  
  destination_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
}
inline std::string* VoiceCallDialInput::_internal_mutable_destination_number() {
  
  return destination_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* VoiceCallDialInput::release_destination_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
  return destination_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void VoiceCallDialInput::set_allocated_destination_number(std::string* destination_number) {
  if (destination_number != nullptr) {
    
  } else {
    
  }
  destination_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), destination_number,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallDialInput.destination_number)
}

// .google.protobuf.Timestamp started_at = 2;
inline bool VoiceCallDialInput::_internal_has_started_at() const {
  return this != internal_default_instance() && started_at_ != nullptr;
}
inline bool VoiceCallDialInput::has_started_at() const {
  return _internal_has_started_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallDialInput::_internal_started_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = started_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallDialInput::started_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallDialInput.started_at)
  return _internal_started_at();
}
inline void VoiceCallDialInput::unsafe_arena_set_allocated_started_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* started_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at_);
  }
  started_at_ = started_at;
  if (started_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallDialInput.started_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallDialInput::release_started_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = started_at_;
  started_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallDialInput::unsafe_arena_release_started_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallDialInput.started_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = started_at_;
  started_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallDialInput::_internal_mutable_started_at() {
  
  if (started_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    started_at_ = p;
  }
  return started_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallDialInput::mutable_started_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallDialInput.started_at)
  return _internal_mutable_started_at();
}
inline void VoiceCallDialInput::set_allocated_started_at(PROTOBUF_NAMESPACE_ID::Timestamp* started_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at_);
  }
  if (started_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at)->GetArena();
    if (message_arena != submessage_arena) {
      started_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, started_at, submessage_arena);
    }
    
  } else {
    
  }
  started_at_ = started_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallDialInput.started_at)
}

// .google.protobuf.Duration duration = 3;
inline bool VoiceCallDialInput::_internal_has_duration() const {
  return this != internal_default_instance() && duration_ != nullptr;
}
inline bool VoiceCallDialInput::has_duration() const {
  return _internal_has_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& VoiceCallDialInput::_internal_duration() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = duration_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& VoiceCallDialInput::duration() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallDialInput.duration)
  return _internal_duration();
}
inline void VoiceCallDialInput::unsafe_arena_set_allocated_duration(
    PROTOBUF_NAMESPACE_ID::Duration* duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_);
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallDialInput.duration)
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallDialInput::release_duration() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = duration_;
  duration_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallDialInput::unsafe_arena_release_duration() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallDialInput.duration)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = duration_;
  duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallDialInput::_internal_mutable_duration() {
  
  if (duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    duration_ = p;
  }
  return duration_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallDialInput::mutable_duration() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallDialInput.duration)
  return _internal_mutable_duration();
}
inline void VoiceCallDialInput::set_allocated_duration(PROTOBUF_NAMESPACE_ID::Duration* duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_);
  }
  if (duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration)->GetArena();
    if (message_arena != submessage_arena) {
      duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    
  } else {
    
  }
  duration_ = duration;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallDialInput.duration)
}

// -------------------------------------------------------------------

// VoiceCallQueueInput

// .google.protobuf.Timestamp enqueued_at = 1;
inline bool VoiceCallQueueInput::_internal_has_enqueued_at() const {
  return this != internal_default_instance() && enqueued_at_ != nullptr;
}
inline bool VoiceCallQueueInput::has_enqueued_at() const {
  return _internal_has_enqueued_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallQueueInput::_internal_enqueued_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = enqueued_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallQueueInput::enqueued_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallQueueInput.enqueued_at)
  return _internal_enqueued_at();
}
inline void VoiceCallQueueInput::unsafe_arena_set_allocated_enqueued_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* enqueued_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enqueued_at_);
  }
  enqueued_at_ = enqueued_at;
  if (enqueued_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.enqueued_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::release_enqueued_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = enqueued_at_;
  enqueued_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::unsafe_arena_release_enqueued_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallQueueInput.enqueued_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = enqueued_at_;
  enqueued_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::_internal_mutable_enqueued_at() {
  
  if (enqueued_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    enqueued_at_ = p;
  }
  return enqueued_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::mutable_enqueued_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallQueueInput.enqueued_at)
  return _internal_mutable_enqueued_at();
}
inline void VoiceCallQueueInput::set_allocated_enqueued_at(PROTOBUF_NAMESPACE_ID::Timestamp* enqueued_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enqueued_at_);
  }
  if (enqueued_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enqueued_at)->GetArena();
    if (message_arena != submessage_arena) {
      enqueued_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enqueued_at, submessage_arena);
    }
    
  } else {
    
  }
  enqueued_at_ = enqueued_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.enqueued_at)
}

// .google.protobuf.Timestamp dequeued_at = 2;
inline bool VoiceCallQueueInput::_internal_has_dequeued_at() const {
  return this != internal_default_instance() && dequeued_at_ != nullptr;
}
inline bool VoiceCallQueueInput::has_dequeued_at() const {
  return _internal_has_dequeued_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallQueueInput::_internal_dequeued_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = dequeued_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallQueueInput::dequeued_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_at)
  return _internal_dequeued_at();
}
inline void VoiceCallQueueInput::unsafe_arena_set_allocated_dequeued_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* dequeued_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_at_);
  }
  dequeued_at_ = dequeued_at;
  if (dequeued_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::release_dequeued_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = dequeued_at_;
  dequeued_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::unsafe_arena_release_dequeued_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = dequeued_at_;
  dequeued_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::_internal_mutable_dequeued_at() {
  
  if (dequeued_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    dequeued_at_ = p;
  }
  return dequeued_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallQueueInput::mutable_dequeued_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_at)
  return _internal_mutable_dequeued_at();
}
inline void VoiceCallQueueInput::set_allocated_dequeued_at(PROTOBUF_NAMESPACE_ID::Timestamp* dequeued_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_at_);
  }
  if (dequeued_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_at)->GetArena();
    if (message_arena != submessage_arena) {
      dequeued_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dequeued_at, submessage_arena);
    }
    
  } else {
    
  }
  dequeued_at_ = dequeued_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_at)
}

// .google.protobuf.StringValue dequeued_to_number = 3;
inline bool VoiceCallQueueInput::_internal_has_dequeued_to_number() const {
  return this != internal_default_instance() && dequeued_to_number_ != nullptr;
}
inline bool VoiceCallQueueInput::has_dequeued_to_number() const {
  return _internal_has_dequeued_to_number();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallQueueInput::_internal_dequeued_to_number() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = dequeued_to_number_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallQueueInput::dequeued_to_number() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_number)
  return _internal_dequeued_to_number();
}
inline void VoiceCallQueueInput::unsafe_arena_set_allocated_dequeued_to_number(
    PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_number_);
  }
  dequeued_to_number_ = dequeued_to_number;
  if (dequeued_to_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_number)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::release_dequeued_to_number() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dequeued_to_number_;
  dequeued_to_number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::unsafe_arena_release_dequeued_to_number() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_number)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dequeued_to_number_;
  dequeued_to_number_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::_internal_mutable_dequeued_to_number() {
  
  if (dequeued_to_number_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    dequeued_to_number_ = p;
  }
  return dequeued_to_number_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::mutable_dequeued_to_number() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_number)
  return _internal_mutable_dequeued_to_number();
}
inline void VoiceCallQueueInput::set_allocated_dequeued_to_number(PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_number_);
  }
  if (dequeued_to_number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_number)->GetArena();
    if (message_arena != submessage_arena) {
      dequeued_to_number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dequeued_to_number, submessage_arena);
    }
    
  } else {
    
  }
  dequeued_to_number_ = dequeued_to_number;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_number)
}

// .google.protobuf.StringValue dequeued_to_sessionId = 4;
inline bool VoiceCallQueueInput::_internal_has_dequeued_to_sessionid() const {
  return this != internal_default_instance() && dequeued_to_sessionid_ != nullptr;
}
inline bool VoiceCallQueueInput::has_dequeued_to_sessionid() const {
  return _internal_has_dequeued_to_sessionid();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallQueueInput::_internal_dequeued_to_sessionid() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = dequeued_to_sessionid_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallQueueInput::dequeued_to_sessionid() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_sessionId)
  return _internal_dequeued_to_sessionid();
}
inline void VoiceCallQueueInput::unsafe_arena_set_allocated_dequeued_to_sessionid(
    PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_sessionid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_sessionid_);
  }
  dequeued_to_sessionid_ = dequeued_to_sessionid;
  if (dequeued_to_sessionid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_sessionId)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::release_dequeued_to_sessionid() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dequeued_to_sessionid_;
  dequeued_to_sessionid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::unsafe_arena_release_dequeued_to_sessionid() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_sessionId)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dequeued_to_sessionid_;
  dequeued_to_sessionid_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::_internal_mutable_dequeued_to_sessionid() {
  
  if (dequeued_to_sessionid_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    dequeued_to_sessionid_ = p;
  }
  return dequeued_to_sessionid_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallQueueInput::mutable_dequeued_to_sessionid() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_sessionId)
  return _internal_mutable_dequeued_to_sessionid();
}
inline void VoiceCallQueueInput::set_allocated_dequeued_to_sessionid(PROTOBUF_NAMESPACE_ID::StringValue* dequeued_to_sessionid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_sessionid_);
  }
  if (dequeued_to_sessionid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dequeued_to_sessionid)->GetArena();
    if (message_arena != submessage_arena) {
      dequeued_to_sessionid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dequeued_to_sessionid, submessage_arena);
    }
    
  } else {
    
  }
  dequeued_to_sessionid_ = dequeued_to_sessionid;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.dequeued_to_sessionId)
}

// .google.protobuf.Duration queue_duration = 5;
inline bool VoiceCallQueueInput::_internal_has_queue_duration() const {
  return this != internal_default_instance() && queue_duration_ != nullptr;
}
inline bool VoiceCallQueueInput::has_queue_duration() const {
  return _internal_has_queue_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& VoiceCallQueueInput::_internal_queue_duration() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = queue_duration_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& VoiceCallQueueInput::queue_duration() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallQueueInput.queue_duration)
  return _internal_queue_duration();
}
inline void VoiceCallQueueInput::unsafe_arena_set_allocated_queue_duration(
    PROTOBUF_NAMESPACE_ID::Duration* queue_duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_duration_);
  }
  queue_duration_ = queue_duration;
  if (queue_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.queue_duration)
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallQueueInput::release_queue_duration() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = queue_duration_;
  queue_duration_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallQueueInput::unsafe_arena_release_queue_duration() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallQueueInput.queue_duration)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = queue_duration_;
  queue_duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallQueueInput::_internal_mutable_queue_duration() {
  
  if (queue_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    queue_duration_ = p;
  }
  return queue_duration_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* VoiceCallQueueInput::mutable_queue_duration() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallQueueInput.queue_duration)
  return _internal_mutable_queue_duration();
}
inline void VoiceCallQueueInput::set_allocated_queue_duration(PROTOBUF_NAMESPACE_ID::Duration* queue_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_duration_);
  }
  if (queue_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_duration)->GetArena();
    if (message_arena != submessage_arena) {
      queue_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queue_duration, submessage_arena);
    }
    
  } else {
    
  }
  queue_duration_ = queue_duration;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallQueueInput.queue_duration)
}

// -------------------------------------------------------------------

// VoiceCallInputMessageBody

// .com.elarian.hera.proto.CustomerEventDirection direction = 1;
inline void VoiceCallInputMessageBody::clear_direction() {
  direction_ = 0;
}
inline ::com::elarian::hera::proto::CustomerEventDirection VoiceCallInputMessageBody::_internal_direction() const {
  return static_cast< ::com::elarian::hera::proto::CustomerEventDirection >(direction_);
}
inline ::com::elarian::hera::proto::CustomerEventDirection VoiceCallInputMessageBody::direction() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.direction)
  return _internal_direction();
}
inline void VoiceCallInputMessageBody::_internal_set_direction(::com::elarian::hera::proto::CustomerEventDirection value) {
  
  direction_ = value;
}
inline void VoiceCallInputMessageBody::set_direction(::com::elarian::hera::proto::CustomerEventDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.VoiceCallInputMessageBody.direction)
}

// .com.elarian.hera.proto.VoiceCallStatus status = 2;
inline void VoiceCallInputMessageBody::clear_status() {
  status_ = 0;
}
inline ::com::elarian::hera::proto::VoiceCallStatus VoiceCallInputMessageBody::_internal_status() const {
  return static_cast< ::com::elarian::hera::proto::VoiceCallStatus >(status_);
}
inline ::com::elarian::hera::proto::VoiceCallStatus VoiceCallInputMessageBody::status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.status)
  return _internal_status();
}
inline void VoiceCallInputMessageBody::_internal_set_status(::com::elarian::hera::proto::VoiceCallStatus value) {
  
  status_ = value;
}
inline void VoiceCallInputMessageBody::set_status(::com::elarian::hera::proto::VoiceCallStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.VoiceCallInputMessageBody.status)
}

// .google.protobuf.Timestamp started_at = 3;
inline bool VoiceCallInputMessageBody::_internal_has_started_at() const {
  return this != internal_default_instance() && started_at_ != nullptr;
}
inline bool VoiceCallInputMessageBody::has_started_at() const {
  return _internal_has_started_at();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallInputMessageBody::_internal_started_at() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = started_at_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp&>(
      PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& VoiceCallInputMessageBody::started_at() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.started_at)
  return _internal_started_at();
}
inline void VoiceCallInputMessageBody::unsafe_arena_set_allocated_started_at(
    PROTOBUF_NAMESPACE_ID::Timestamp* started_at) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at_);
  }
  started_at_ = started_at;
  if (started_at) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.started_at)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallInputMessageBody::release_started_at() {
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = started_at_;
  started_at_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallInputMessageBody::unsafe_arena_release_started_at() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallInputMessageBody.started_at)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = started_at_;
  started_at_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallInputMessageBody::_internal_mutable_started_at() {
  
  if (started_at_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    started_at_ = p;
  }
  return started_at_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* VoiceCallInputMessageBody::mutable_started_at() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallInputMessageBody.started_at)
  return _internal_mutable_started_at();
}
inline void VoiceCallInputMessageBody::set_allocated_started_at(PROTOBUF_NAMESPACE_ID::Timestamp* started_at) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at_);
  }
  if (started_at) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(started_at)->GetArena();
    if (message_arena != submessage_arena) {
      started_at = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, started_at, submessage_arena);
    }
    
  } else {
    
  }
  started_at_ = started_at;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.started_at)
}

// .com.elarian.hera.proto.VoiceCallHangupCause hangup_cause = 4;
inline void VoiceCallInputMessageBody::clear_hangup_cause() {
  hangup_cause_ = 0;
}
inline ::com::elarian::hera::proto::VoiceCallHangupCause VoiceCallInputMessageBody::_internal_hangup_cause() const {
  return static_cast< ::com::elarian::hera::proto::VoiceCallHangupCause >(hangup_cause_);
}
inline ::com::elarian::hera::proto::VoiceCallHangupCause VoiceCallInputMessageBody::hangup_cause() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.hangup_cause)
  return _internal_hangup_cause();
}
inline void VoiceCallInputMessageBody::_internal_set_hangup_cause(::com::elarian::hera::proto::VoiceCallHangupCause value) {
  
  hangup_cause_ = value;
}
inline void VoiceCallInputMessageBody::set_hangup_cause(::com::elarian::hera::proto::VoiceCallHangupCause value) {
  _internal_set_hangup_cause(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.VoiceCallInputMessageBody.hangup_cause)
}

// .google.protobuf.StringValue dtmf_digits = 5;
inline bool VoiceCallInputMessageBody::_internal_has_dtmf_digits() const {
  return this != internal_default_instance() && dtmf_digits_ != nullptr;
}
inline bool VoiceCallInputMessageBody::has_dtmf_digits() const {
  return _internal_has_dtmf_digits();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallInputMessageBody::_internal_dtmf_digits() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = dtmf_digits_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallInputMessageBody::dtmf_digits() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.dtmf_digits)
  return _internal_dtmf_digits();
}
inline void VoiceCallInputMessageBody::unsafe_arena_set_allocated_dtmf_digits(
    PROTOBUF_NAMESPACE_ID::StringValue* dtmf_digits) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dtmf_digits_);
  }
  dtmf_digits_ = dtmf_digits;
  if (dtmf_digits) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.dtmf_digits)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::release_dtmf_digits() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dtmf_digits_;
  dtmf_digits_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::unsafe_arena_release_dtmf_digits() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallInputMessageBody.dtmf_digits)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = dtmf_digits_;
  dtmf_digits_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::_internal_mutable_dtmf_digits() {
  
  if (dtmf_digits_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    dtmf_digits_ = p;
  }
  return dtmf_digits_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::mutable_dtmf_digits() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallInputMessageBody.dtmf_digits)
  return _internal_mutable_dtmf_digits();
}
inline void VoiceCallInputMessageBody::set_allocated_dtmf_digits(PROTOBUF_NAMESPACE_ID::StringValue* dtmf_digits) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dtmf_digits_);
  }
  if (dtmf_digits) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dtmf_digits)->GetArena();
    if (message_arena != submessage_arena) {
      dtmf_digits = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dtmf_digits, submessage_arena);
    }
    
  } else {
    
  }
  dtmf_digits_ = dtmf_digits;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.dtmf_digits)
}

// .google.protobuf.StringValue recording_url = 6;
inline bool VoiceCallInputMessageBody::_internal_has_recording_url() const {
  return this != internal_default_instance() && recording_url_ != nullptr;
}
inline bool VoiceCallInputMessageBody::has_recording_url() const {
  return _internal_has_recording_url();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallInputMessageBody::_internal_recording_url() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = recording_url_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& VoiceCallInputMessageBody::recording_url() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.recording_url)
  return _internal_recording_url();
}
inline void VoiceCallInputMessageBody::unsafe_arena_set_allocated_recording_url(
    PROTOBUF_NAMESPACE_ID::StringValue* recording_url) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recording_url_);
  }
  recording_url_ = recording_url;
  if (recording_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.recording_url)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::release_recording_url() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = recording_url_;
  recording_url_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::unsafe_arena_release_recording_url() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallInputMessageBody.recording_url)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = recording_url_;
  recording_url_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::_internal_mutable_recording_url() {
  
  if (recording_url_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    recording_url_ = p;
  }
  return recording_url_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* VoiceCallInputMessageBody::mutable_recording_url() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallInputMessageBody.recording_url)
  return _internal_mutable_recording_url();
}
inline void VoiceCallInputMessageBody::set_allocated_recording_url(PROTOBUF_NAMESPACE_ID::StringValue* recording_url) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(recording_url_);
  }
  if (recording_url) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(recording_url)->GetArena();
    if (message_arena != submessage_arena) {
      recording_url = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, recording_url, submessage_arena);
    }
    
  } else {
    
  }
  recording_url_ = recording_url;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.recording_url)
}

// .com.elarian.hera.proto.VoiceCallDialInput dial_data = 7;
inline bool VoiceCallInputMessageBody::_internal_has_dial_data() const {
  return this != internal_default_instance() && dial_data_ != nullptr;
}
inline bool VoiceCallInputMessageBody::has_dial_data() const {
  return _internal_has_dial_data();
}
inline void VoiceCallInputMessageBody::clear_dial_data() {
  if (GetArena() == nullptr && dial_data_ != nullptr) {
    delete dial_data_;
  }
  dial_data_ = nullptr;
}
inline const ::com::elarian::hera::proto::VoiceCallDialInput& VoiceCallInputMessageBody::_internal_dial_data() const {
  const ::com::elarian::hera::proto::VoiceCallDialInput* p = dial_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::VoiceCallDialInput&>(
      ::com::elarian::hera::proto::_VoiceCallDialInput_default_instance_);
}
inline const ::com::elarian::hera::proto::VoiceCallDialInput& VoiceCallInputMessageBody::dial_data() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.dial_data)
  return _internal_dial_data();
}
inline void VoiceCallInputMessageBody::unsafe_arena_set_allocated_dial_data(
    ::com::elarian::hera::proto::VoiceCallDialInput* dial_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dial_data_);
  }
  dial_data_ = dial_data;
  if (dial_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.dial_data)
}
inline ::com::elarian::hera::proto::VoiceCallDialInput* VoiceCallInputMessageBody::release_dial_data() {
  
  ::com::elarian::hera::proto::VoiceCallDialInput* temp = dial_data_;
  dial_data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::VoiceCallDialInput* VoiceCallInputMessageBody::unsafe_arena_release_dial_data() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallInputMessageBody.dial_data)
  
  ::com::elarian::hera::proto::VoiceCallDialInput* temp = dial_data_;
  dial_data_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::VoiceCallDialInput* VoiceCallInputMessageBody::_internal_mutable_dial_data() {
  
  if (dial_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallDialInput>(GetArena());
    dial_data_ = p;
  }
  return dial_data_;
}
inline ::com::elarian::hera::proto::VoiceCallDialInput* VoiceCallInputMessageBody::mutable_dial_data() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallInputMessageBody.dial_data)
  return _internal_mutable_dial_data();
}
inline void VoiceCallInputMessageBody::set_allocated_dial_data(::com::elarian::hera::proto::VoiceCallDialInput* dial_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dial_data_;
  }
  if (dial_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dial_data);
    if (message_arena != submessage_arena) {
      dial_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dial_data, submessage_arena);
    }
    
  } else {
    
  }
  dial_data_ = dial_data;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.dial_data)
}

// .com.elarian.hera.proto.VoiceCallQueueInput queue_data = 8;
inline bool VoiceCallInputMessageBody::_internal_has_queue_data() const {
  return this != internal_default_instance() && queue_data_ != nullptr;
}
inline bool VoiceCallInputMessageBody::has_queue_data() const {
  return _internal_has_queue_data();
}
inline void VoiceCallInputMessageBody::clear_queue_data() {
  if (GetArena() == nullptr && queue_data_ != nullptr) {
    delete queue_data_;
  }
  queue_data_ = nullptr;
}
inline const ::com::elarian::hera::proto::VoiceCallQueueInput& VoiceCallInputMessageBody::_internal_queue_data() const {
  const ::com::elarian::hera::proto::VoiceCallQueueInput* p = queue_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::VoiceCallQueueInput&>(
      ::com::elarian::hera::proto::_VoiceCallQueueInput_default_instance_);
}
inline const ::com::elarian::hera::proto::VoiceCallQueueInput& VoiceCallInputMessageBody::queue_data() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.VoiceCallInputMessageBody.queue_data)
  return _internal_queue_data();
}
inline void VoiceCallInputMessageBody::unsafe_arena_set_allocated_queue_data(
    ::com::elarian::hera::proto::VoiceCallQueueInput* queue_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(queue_data_);
  }
  queue_data_ = queue_data;
  if (queue_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.queue_data)
}
inline ::com::elarian::hera::proto::VoiceCallQueueInput* VoiceCallInputMessageBody::release_queue_data() {
  
  ::com::elarian::hera::proto::VoiceCallQueueInput* temp = queue_data_;
  queue_data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::VoiceCallQueueInput* VoiceCallInputMessageBody::unsafe_arena_release_queue_data() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.VoiceCallInputMessageBody.queue_data)
  
  ::com::elarian::hera::proto::VoiceCallQueueInput* temp = queue_data_;
  queue_data_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::VoiceCallQueueInput* VoiceCallInputMessageBody::_internal_mutable_queue_data() {
  
  if (queue_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::VoiceCallQueueInput>(GetArena());
    queue_data_ = p;
  }
  return queue_data_;
}
inline ::com::elarian::hera::proto::VoiceCallQueueInput* VoiceCallInputMessageBody::mutable_queue_data() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.VoiceCallInputMessageBody.queue_data)
  return _internal_mutable_queue_data();
}
inline void VoiceCallInputMessageBody::set_allocated_queue_data(::com::elarian::hera::proto::VoiceCallQueueInput* queue_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete queue_data_;
  }
  if (queue_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(queue_data);
    if (message_arena != submessage_arena) {
      queue_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, queue_data, submessage_arena);
    }
    
  } else {
    
  }
  queue_data_ = queue_data;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.VoiceCallInputMessageBody.queue_data)
}

// -------------------------------------------------------------------

// UssdInputMessageBody

// .com.elarian.hera.proto.UssdSessionStatus status = 1;
inline void UssdInputMessageBody::clear_status() {
  status_ = 0;
}
inline ::com::elarian::hera::proto::UssdSessionStatus UssdInputMessageBody::_internal_status() const {
  return static_cast< ::com::elarian::hera::proto::UssdSessionStatus >(status_);
}
inline ::com::elarian::hera::proto::UssdSessionStatus UssdInputMessageBody::status() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UssdInputMessageBody.status)
  return _internal_status();
}
inline void UssdInputMessageBody::_internal_set_status(::com::elarian::hera::proto::UssdSessionStatus value) {
  
  status_ = value;
}
inline void UssdInputMessageBody::set_status(::com::elarian::hera::proto::UssdSessionStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.UssdInputMessageBody.status)
}

// .google.protobuf.StringValue text = 2;
inline bool UssdInputMessageBody::_internal_has_text() const {
  return this != internal_default_instance() && text_ != nullptr;
}
inline bool UssdInputMessageBody::has_text() const {
  return _internal_has_text();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& UssdInputMessageBody::_internal_text() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = text_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& UssdInputMessageBody::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UssdInputMessageBody.text)
  return _internal_text();
}
inline void UssdInputMessageBody::unsafe_arena_set_allocated_text(
    PROTOBUF_NAMESPACE_ID::StringValue* text) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text_);
  }
  text_ = text;
  if (text) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.UssdInputMessageBody.text)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* UssdInputMessageBody::release_text() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = text_;
  text_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* UssdInputMessageBody::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.UssdInputMessageBody.text)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = text_;
  text_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* UssdInputMessageBody::_internal_mutable_text() {
  
  if (text_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    text_ = p;
  }
  return text_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* UssdInputMessageBody::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.UssdInputMessageBody.text)
  return _internal_mutable_text();
}
inline void UssdInputMessageBody::set_allocated_text(PROTOBUF_NAMESPACE_ID::StringValue* text) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(text_);
  }
  if (text) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(text)->GetArena();
    if (message_arena != submessage_arena) {
      text = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.UssdInputMessageBody.text)
}

// -------------------------------------------------------------------

// UssdMenuMessageBody

// string text = 1;
inline void UssdMenuMessageBody::clear_text() {
  text_.ClearToEmpty();
}
inline const std::string& UssdMenuMessageBody::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UssdMenuMessageBody.text)
  return _internal_text();
}
inline void UssdMenuMessageBody::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.UssdMenuMessageBody.text)
}
inline std::string* UssdMenuMessageBody::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.UssdMenuMessageBody.text)
  return _internal_mutable_text();
}
inline const std::string& UssdMenuMessageBody::_internal_text() const {
  return text_.Get();
}
inline void UssdMenuMessageBody::_internal_set_text(const std::string& value) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UssdMenuMessageBody::set_text(std::string&& value) {
  
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.UssdMenuMessageBody.text)
}
inline void UssdMenuMessageBody::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.UssdMenuMessageBody.text)
}
inline void UssdMenuMessageBody::set_text(const char* value,
    size_t size) {
  
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.UssdMenuMessageBody.text)
}
inline std::string* UssdMenuMessageBody::_internal_mutable_text() {
  
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UssdMenuMessageBody::release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.UssdMenuMessageBody.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UssdMenuMessageBody::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.UssdMenuMessageBody.text)
}

// bool is_terminal = 2;
inline void UssdMenuMessageBody::clear_is_terminal() {
  is_terminal_ = false;
}
inline bool UssdMenuMessageBody::_internal_is_terminal() const {
  return is_terminal_;
}
inline bool UssdMenuMessageBody::is_terminal() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.UssdMenuMessageBody.is_terminal)
  return _internal_is_terminal();
}
inline void UssdMenuMessageBody::_internal_set_is_terminal(bool value) {
  
  is_terminal_ = value;
}
inline void UssdMenuMessageBody::set_is_terminal(bool value) {
  _internal_set_is_terminal(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.UssdMenuMessageBody.is_terminal)
}

// -------------------------------------------------------------------

// OutboundMessageBody

// string text = 1;
inline bool OutboundMessageBody::_internal_has_text() const {
  return entry_case() == kText;
}
inline void OutboundMessageBody::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void OutboundMessageBody::clear_text() {
  if (_internal_has_text()) {
    entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_entry();
  }
}
inline const std::string& OutboundMessageBody::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.text)
  return _internal_text();
}
inline void OutboundMessageBody::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessageBody.text)
}
inline std::string* OutboundMessageBody::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.text)
  return _internal_mutable_text();
}
inline const std::string& OutboundMessageBody::_internal_text() const {
  if (_internal_has_text()) {
    return entry_.text_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void OutboundMessageBody::_internal_set_text(const std::string& value) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OutboundMessageBody::set_text(std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessageBody.text)
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.OutboundMessageBody.text)
}
inline void OutboundMessageBody::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.OutboundMessageBody.text)
}
inline void OutboundMessageBody::set_text(const char* value,
                             size_t size) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.OutboundMessageBody.text)
}
inline std::string* OutboundMessageBody::_internal_mutable_text() {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return entry_.text_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OutboundMessageBody::release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.text)
  if (_internal_has_text()) {
    clear_has_entry();
    return entry_.text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::set_allocated_text(std::string* text) {
  if (has_entry()) {
    clear_entry();
  }
  if (text != nullptr) {
    set_has_text();
    entry_.text_.UnsafeSetDefault(text);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(text);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.text)
}

// .com.elarian.hera.proto.MediaMessageBody media = 2;
inline bool OutboundMessageBody::_internal_has_media() const {
  return entry_case() == kMedia;
}
inline bool OutboundMessageBody::has_media() const {
  return _internal_has_media();
}
inline void OutboundMessageBody::set_has_media() {
  _oneof_case_[0] = kMedia;
}
inline void OutboundMessageBody::clear_media() {
  if (_internal_has_media()) {
    if (GetArena() == nullptr) {
      delete entry_.media_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::MediaMessageBody* OutboundMessageBody::release_media() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
      ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::MediaMessageBody& OutboundMessageBody::_internal_media() const {
  return _internal_has_media()
      ? *entry_.media_
      : reinterpret_cast< ::com::elarian::hera::proto::MediaMessageBody&>(::com::elarian::hera::proto::_MediaMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::MediaMessageBody& OutboundMessageBody::media() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.media)
  return _internal_media();
}
inline ::com::elarian::hera::proto::MediaMessageBody* OutboundMessageBody::unsafe_arena_release_media() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
    ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  clear_entry();
  if (media) {
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.media)
}
inline ::com::elarian::hera::proto::MediaMessageBody* OutboundMessageBody::_internal_mutable_media() {
  if (!_internal_has_media()) {
    clear_entry();
    set_has_media();
    entry_.media_ = CreateMaybeMessage< ::com::elarian::hera::proto::MediaMessageBody >(GetArena());
  }
  return entry_.media_;
}
inline ::com::elarian::hera::proto::MediaMessageBody* OutboundMessageBody::mutable_media() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.media)
  return _internal_mutable_media();
}

// .com.elarian.hera.proto.LocationMessageBody location = 3;
inline bool OutboundMessageBody::_internal_has_location() const {
  return entry_case() == kLocation;
}
inline bool OutboundMessageBody::has_location() const {
  return _internal_has_location();
}
inline void OutboundMessageBody::set_has_location() {
  _oneof_case_[0] = kLocation;
}
inline void OutboundMessageBody::clear_location() {
  if (_internal_has_location()) {
    if (GetArena() == nullptr) {
      delete entry_.location_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::LocationMessageBody* OutboundMessageBody::release_location() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.location)
  if (_internal_has_location()) {
    clear_has_entry();
      ::com::elarian::hera::proto::LocationMessageBody* temp = entry_.location_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.location_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::LocationMessageBody& OutboundMessageBody::_internal_location() const {
  return _internal_has_location()
      ? *entry_.location_
      : reinterpret_cast< ::com::elarian::hera::proto::LocationMessageBody&>(::com::elarian::hera::proto::_LocationMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::LocationMessageBody& OutboundMessageBody::location() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.location)
  return _internal_location();
}
inline ::com::elarian::hera::proto::LocationMessageBody* OutboundMessageBody::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.location)
  if (_internal_has_location()) {
    clear_has_entry();
    ::com::elarian::hera::proto::LocationMessageBody* temp = entry_.location_;
    entry_.location_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location) {
  clear_entry();
  if (location) {
    set_has_location();
    entry_.location_ = location;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.location)
}
inline ::com::elarian::hera::proto::LocationMessageBody* OutboundMessageBody::_internal_mutable_location() {
  if (!_internal_has_location()) {
    clear_entry();
    set_has_location();
    entry_.location_ = CreateMaybeMessage< ::com::elarian::hera::proto::LocationMessageBody >(GetArena());
  }
  return entry_.location_;
}
inline ::com::elarian::hera::proto::LocationMessageBody* OutboundMessageBody::mutable_location() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.location)
  return _internal_mutable_location();
}

// .com.elarian.hera.proto.EmailMessageBody email = 4;
inline bool OutboundMessageBody::_internal_has_email() const {
  return entry_case() == kEmail;
}
inline bool OutboundMessageBody::has_email() const {
  return _internal_has_email();
}
inline void OutboundMessageBody::set_has_email() {
  _oneof_case_[0] = kEmail;
}
inline void OutboundMessageBody::clear_email() {
  if (_internal_has_email()) {
    if (GetArena() == nullptr) {
      delete entry_.email_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::EmailMessageBody* OutboundMessageBody::release_email() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.email)
  if (_internal_has_email()) {
    clear_has_entry();
      ::com::elarian::hera::proto::EmailMessageBody* temp = entry_.email_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.email_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::EmailMessageBody& OutboundMessageBody::_internal_email() const {
  return _internal_has_email()
      ? *entry_.email_
      : reinterpret_cast< ::com::elarian::hera::proto::EmailMessageBody&>(::com::elarian::hera::proto::_EmailMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::EmailMessageBody& OutboundMessageBody::email() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.email)
  return _internal_email();
}
inline ::com::elarian::hera::proto::EmailMessageBody* OutboundMessageBody::unsafe_arena_release_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.email)
  if (_internal_has_email()) {
    clear_has_entry();
    ::com::elarian::hera::proto::EmailMessageBody* temp = entry_.email_;
    entry_.email_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email) {
  clear_entry();
  if (email) {
    set_has_email();
    entry_.email_ = email;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.email)
}
inline ::com::elarian::hera::proto::EmailMessageBody* OutboundMessageBody::_internal_mutable_email() {
  if (!_internal_has_email()) {
    clear_entry();
    set_has_email();
    entry_.email_ = CreateMaybeMessage< ::com::elarian::hera::proto::EmailMessageBody >(GetArena());
  }
  return entry_.email_;
}
inline ::com::elarian::hera::proto::EmailMessageBody* OutboundMessageBody::mutable_email() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.email)
  return _internal_mutable_email();
}

// .com.elarian.hera.proto.TemplateMessageBody template = 5;
inline bool OutboundMessageBody::_internal_has_template_() const {
  return entry_case() == kTemplate;
}
inline bool OutboundMessageBody::has_template_() const {
  return _internal_has_template_();
}
inline void OutboundMessageBody::set_has_template_() {
  _oneof_case_[0] = kTemplate;
}
inline void OutboundMessageBody::clear_template_() {
  if (_internal_has_template_()) {
    if (GetArena() == nullptr) {
      delete entry_.template__;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::TemplateMessageBody* OutboundMessageBody::release_template_() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.template)
  if (_internal_has_template_()) {
    clear_has_entry();
      ::com::elarian::hera::proto::TemplateMessageBody* temp = entry_.template__;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.template__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::TemplateMessageBody& OutboundMessageBody::_internal_template_() const {
  return _internal_has_template_()
      ? *entry_.template__
      : reinterpret_cast< ::com::elarian::hera::proto::TemplateMessageBody&>(::com::elarian::hera::proto::_TemplateMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::TemplateMessageBody& OutboundMessageBody::template_() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.template)
  return _internal_template_();
}
inline ::com::elarian::hera::proto::TemplateMessageBody* OutboundMessageBody::unsafe_arena_release_template_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.template)
  if (_internal_has_template_()) {
    clear_has_entry();
    ::com::elarian::hera::proto::TemplateMessageBody* temp = entry_.template__;
    entry_.template__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_template_(::com::elarian::hera::proto::TemplateMessageBody* template_) {
  clear_entry();
  if (template_) {
    set_has_template_();
    entry_.template__ = template_;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.template)
}
inline ::com::elarian::hera::proto::TemplateMessageBody* OutboundMessageBody::_internal_mutable_template_() {
  if (!_internal_has_template_()) {
    clear_entry();
    set_has_template_();
    entry_.template__ = CreateMaybeMessage< ::com::elarian::hera::proto::TemplateMessageBody >(GetArena());
  }
  return entry_.template__;
}
inline ::com::elarian::hera::proto::TemplateMessageBody* OutboundMessageBody::mutable_template_() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.template)
  return _internal_mutable_template_();
}

// string url = 6;
inline bool OutboundMessageBody::_internal_has_url() const {
  return entry_case() == kUrl;
}
inline void OutboundMessageBody::set_has_url() {
  _oneof_case_[0] = kUrl;
}
inline void OutboundMessageBody::clear_url() {
  if (_internal_has_url()) {
    entry_.url_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_entry();
  }
}
inline const std::string& OutboundMessageBody::url() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.url)
  return _internal_url();
}
inline void OutboundMessageBody::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessageBody.url)
}
inline std::string* OutboundMessageBody::mutable_url() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.url)
  return _internal_mutable_url();
}
inline const std::string& OutboundMessageBody::_internal_url() const {
  if (_internal_has_url()) {
    return entry_.url_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void OutboundMessageBody::_internal_set_url(const std::string& value) {
  if (!_internal_has_url()) {
    clear_entry();
    set_has_url();
    entry_.url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OutboundMessageBody::set_url(std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessageBody.url)
  if (!_internal_has_url()) {
    clear_entry();
    set_has_url();
    entry_.url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.OutboundMessageBody.url)
}
inline void OutboundMessageBody::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_url()) {
    clear_entry();
    set_has_url();
    entry_.url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.OutboundMessageBody.url)
}
inline void OutboundMessageBody::set_url(const char* value,
                             size_t size) {
  if (!_internal_has_url()) {
    clear_entry();
    set_has_url();
    entry_.url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.url_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.OutboundMessageBody.url)
}
inline std::string* OutboundMessageBody::_internal_mutable_url() {
  if (!_internal_has_url()) {
    clear_entry();
    set_has_url();
    entry_.url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return entry_.url_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OutboundMessageBody::release_url() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.url)
  if (_internal_has_url()) {
    clear_has_entry();
    return entry_.url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::set_allocated_url(std::string* url) {
  if (has_entry()) {
    clear_entry();
  }
  if (url != nullptr) {
    set_has_url();
    entry_.url_.UnsafeSetDefault(url);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(url);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessageBody.url)
}

// .com.elarian.hera.proto.VoiceCallDialplanMessageBody voice = 7;
inline bool OutboundMessageBody::_internal_has_voice() const {
  return entry_case() == kVoice;
}
inline bool OutboundMessageBody::has_voice() const {
  return _internal_has_voice();
}
inline void OutboundMessageBody::set_has_voice() {
  _oneof_case_[0] = kVoice;
}
inline void OutboundMessageBody::clear_voice() {
  if (_internal_has_voice()) {
    if (GetArena() == nullptr) {
      delete entry_.voice_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* OutboundMessageBody::release_voice() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.voice)
  if (_internal_has_voice()) {
    clear_has_entry();
      ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* temp = entry_.voice_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.voice_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody& OutboundMessageBody::_internal_voice() const {
  return _internal_has_voice()
      ? *entry_.voice_
      : reinterpret_cast< ::com::elarian::hera::proto::VoiceCallDialplanMessageBody&>(::com::elarian::hera::proto::_VoiceCallDialplanMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::VoiceCallDialplanMessageBody& OutboundMessageBody::voice() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.voice)
  return _internal_voice();
}
inline ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* OutboundMessageBody::unsafe_arena_release_voice() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.voice)
  if (_internal_has_voice()) {
    clear_has_entry();
    ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* temp = entry_.voice_;
    entry_.voice_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_voice(::com::elarian::hera::proto::VoiceCallDialplanMessageBody* voice) {
  clear_entry();
  if (voice) {
    set_has_voice();
    entry_.voice_ = voice;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.voice)
}
inline ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* OutboundMessageBody::_internal_mutable_voice() {
  if (!_internal_has_voice()) {
    clear_entry();
    set_has_voice();
    entry_.voice_ = CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallDialplanMessageBody >(GetArena());
  }
  return entry_.voice_;
}
inline ::com::elarian::hera::proto::VoiceCallDialplanMessageBody* OutboundMessageBody::mutable_voice() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.voice)
  return _internal_mutable_voice();
}

// .com.elarian.hera.proto.UssdMenuMessageBody ussd = 8;
inline bool OutboundMessageBody::_internal_has_ussd() const {
  return entry_case() == kUssd;
}
inline bool OutboundMessageBody::has_ussd() const {
  return _internal_has_ussd();
}
inline void OutboundMessageBody::set_has_ussd() {
  _oneof_case_[0] = kUssd;
}
inline void OutboundMessageBody::clear_ussd() {
  if (_internal_has_ussd()) {
    if (GetArena() == nullptr) {
      delete entry_.ussd_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::UssdMenuMessageBody* OutboundMessageBody::release_ussd() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessageBody.ussd)
  if (_internal_has_ussd()) {
    clear_has_entry();
      ::com::elarian::hera::proto::UssdMenuMessageBody* temp = entry_.ussd_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.ussd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::UssdMenuMessageBody& OutboundMessageBody::_internal_ussd() const {
  return _internal_has_ussd()
      ? *entry_.ussd_
      : reinterpret_cast< ::com::elarian::hera::proto::UssdMenuMessageBody&>(::com::elarian::hera::proto::_UssdMenuMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::UssdMenuMessageBody& OutboundMessageBody::ussd() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageBody.ussd)
  return _internal_ussd();
}
inline ::com::elarian::hera::proto::UssdMenuMessageBody* OutboundMessageBody::unsafe_arena_release_ussd() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.OutboundMessageBody.ussd)
  if (_internal_has_ussd()) {
    clear_has_entry();
    ::com::elarian::hera::proto::UssdMenuMessageBody* temp = entry_.ussd_;
    entry_.ussd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OutboundMessageBody::unsafe_arena_set_allocated_ussd(::com::elarian::hera::proto::UssdMenuMessageBody* ussd) {
  clear_entry();
  if (ussd) {
    set_has_ussd();
    entry_.ussd_ = ussd;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessageBody.ussd)
}
inline ::com::elarian::hera::proto::UssdMenuMessageBody* OutboundMessageBody::_internal_mutable_ussd() {
  if (!_internal_has_ussd()) {
    clear_entry();
    set_has_ussd();
    entry_.ussd_ = CreateMaybeMessage< ::com::elarian::hera::proto::UssdMenuMessageBody >(GetArena());
  }
  return entry_.ussd_;
}
inline ::com::elarian::hera::proto::UssdMenuMessageBody* OutboundMessageBody::mutable_ussd() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageBody.ussd)
  return _internal_mutable_ussd();
}

inline bool OutboundMessageBody::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void OutboundMessageBody::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline OutboundMessageBody::EntryCase OutboundMessageBody::entry_case() const {
  return OutboundMessageBody::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PromptMessageMenuItemBody

// string text = 2;
inline bool PromptMessageMenuItemBody::_internal_has_text() const {
  return entry_case() == kText;
}
inline void PromptMessageMenuItemBody::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void PromptMessageMenuItemBody::clear_text() {
  if (_internal_has_text()) {
    entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_entry();
  }
}
inline const std::string& PromptMessageMenuItemBody::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
  return _internal_text();
}
inline void PromptMessageMenuItemBody::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
}
inline std::string* PromptMessageMenuItemBody::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
  return _internal_mutable_text();
}
inline const std::string& PromptMessageMenuItemBody::_internal_text() const {
  if (_internal_has_text()) {
    return entry_.text_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void PromptMessageMenuItemBody::_internal_set_text(const std::string& value) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void PromptMessageMenuItemBody::set_text(std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
}
inline void PromptMessageMenuItemBody::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
}
inline void PromptMessageMenuItemBody::set_text(const char* value,
                             size_t size) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
}
inline std::string* PromptMessageMenuItemBody::_internal_mutable_text() {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return entry_.text_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* PromptMessageMenuItemBody::release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
  if (_internal_has_text()) {
    clear_has_entry();
    return entry_.text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void PromptMessageMenuItemBody::set_allocated_text(std::string* text) {
  if (has_entry()) {
    clear_entry();
  }
  if (text != nullptr) {
    set_has_text();
    entry_.text_.UnsafeSetDefault(text);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(text);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.PromptMessageMenuItemBody.text)
}

// .com.elarian.hera.proto.MediaMessageBody media = 3;
inline bool PromptMessageMenuItemBody::_internal_has_media() const {
  return entry_case() == kMedia;
}
inline bool PromptMessageMenuItemBody::has_media() const {
  return _internal_has_media();
}
inline void PromptMessageMenuItemBody::set_has_media() {
  _oneof_case_[0] = kMedia;
}
inline void PromptMessageMenuItemBody::clear_media() {
  if (_internal_has_media()) {
    if (GetArena() == nullptr) {
      delete entry_.media_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::MediaMessageBody* PromptMessageMenuItemBody::release_media() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
      ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::MediaMessageBody& PromptMessageMenuItemBody::_internal_media() const {
  return _internal_has_media()
      ? *entry_.media_
      : reinterpret_cast< ::com::elarian::hera::proto::MediaMessageBody&>(::com::elarian::hera::proto::_MediaMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::MediaMessageBody& PromptMessageMenuItemBody::media() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
  return _internal_media();
}
inline ::com::elarian::hera::proto::MediaMessageBody* PromptMessageMenuItemBody::unsafe_arena_release_media() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
    ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PromptMessageMenuItemBody::unsafe_arena_set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  clear_entry();
  if (media) {
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
}
inline ::com::elarian::hera::proto::MediaMessageBody* PromptMessageMenuItemBody::_internal_mutable_media() {
  if (!_internal_has_media()) {
    clear_entry();
    set_has_media();
    entry_.media_ = CreateMaybeMessage< ::com::elarian::hera::proto::MediaMessageBody >(GetArena());
  }
  return entry_.media_;
}
inline ::com::elarian::hera::proto::MediaMessageBody* PromptMessageMenuItemBody::mutable_media() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.PromptMessageMenuItemBody.media)
  return _internal_mutable_media();
}

inline bool PromptMessageMenuItemBody::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void PromptMessageMenuItemBody::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline PromptMessageMenuItemBody::EntryCase PromptMessageMenuItemBody::entry_case() const {
  return PromptMessageMenuItemBody::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// InboundMessageBody

// string text = 1;
inline bool InboundMessageBody::_internal_has_text() const {
  return entry_case() == kText;
}
inline void InboundMessageBody::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void InboundMessageBody::clear_text() {
  if (_internal_has_text()) {
    entry_.text_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_entry();
  }
}
inline const std::string& InboundMessageBody::text() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.text)
  return _internal_text();
}
inline void InboundMessageBody::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.InboundMessageBody.text)
}
inline std::string* InboundMessageBody::mutable_text() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.text)
  return _internal_mutable_text();
}
inline const std::string& InboundMessageBody::_internal_text() const {
  if (_internal_has_text()) {
    return entry_.text_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void InboundMessageBody::_internal_set_text(const std::string& value) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void InboundMessageBody::set_text(std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.InboundMessageBody.text)
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.elarian.hera.proto.InboundMessageBody.text)
}
inline void InboundMessageBody::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.InboundMessageBody.text)
}
inline void InboundMessageBody::set_text(const char* value,
                             size_t size) {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  entry_.text_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.InboundMessageBody.text)
}
inline std::string* InboundMessageBody::_internal_mutable_text() {
  if (!_internal_has_text()) {
    clear_entry();
    set_has_text();
    entry_.text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return entry_.text_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* InboundMessageBody::release_text() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.text)
  if (_internal_has_text()) {
    clear_has_entry();
    return entry_.text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::set_allocated_text(std::string* text) {
  if (has_entry()) {
    clear_entry();
  }
  if (text != nullptr) {
    set_has_text();
    entry_.text_.UnsafeSetDefault(text);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(text);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.InboundMessageBody.text)
}

// .com.elarian.hera.proto.MediaMessageBody media = 2;
inline bool InboundMessageBody::_internal_has_media() const {
  return entry_case() == kMedia;
}
inline bool InboundMessageBody::has_media() const {
  return _internal_has_media();
}
inline void InboundMessageBody::set_has_media() {
  _oneof_case_[0] = kMedia;
}
inline void InboundMessageBody::clear_media() {
  if (_internal_has_media()) {
    if (GetArena() == nullptr) {
      delete entry_.media_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::MediaMessageBody* InboundMessageBody::release_media() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
      ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::MediaMessageBody& InboundMessageBody::_internal_media() const {
  return _internal_has_media()
      ? *entry_.media_
      : reinterpret_cast< ::com::elarian::hera::proto::MediaMessageBody&>(::com::elarian::hera::proto::_MediaMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::MediaMessageBody& InboundMessageBody::media() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.media)
  return _internal_media();
}
inline ::com::elarian::hera::proto::MediaMessageBody* InboundMessageBody::unsafe_arena_release_media() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.InboundMessageBody.media)
  if (_internal_has_media()) {
    clear_has_entry();
    ::com::elarian::hera::proto::MediaMessageBody* temp = entry_.media_;
    entry_.media_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::unsafe_arena_set_allocated_media(::com::elarian::hera::proto::MediaMessageBody* media) {
  clear_entry();
  if (media) {
    set_has_media();
    entry_.media_ = media;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.InboundMessageBody.media)
}
inline ::com::elarian::hera::proto::MediaMessageBody* InboundMessageBody::_internal_mutable_media() {
  if (!_internal_has_media()) {
    clear_entry();
    set_has_media();
    entry_.media_ = CreateMaybeMessage< ::com::elarian::hera::proto::MediaMessageBody >(GetArena());
  }
  return entry_.media_;
}
inline ::com::elarian::hera::proto::MediaMessageBody* InboundMessageBody::mutable_media() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.media)
  return _internal_mutable_media();
}

// .com.elarian.hera.proto.LocationMessageBody location = 3;
inline bool InboundMessageBody::_internal_has_location() const {
  return entry_case() == kLocation;
}
inline bool InboundMessageBody::has_location() const {
  return _internal_has_location();
}
inline void InboundMessageBody::set_has_location() {
  _oneof_case_[0] = kLocation;
}
inline void InboundMessageBody::clear_location() {
  if (_internal_has_location()) {
    if (GetArena() == nullptr) {
      delete entry_.location_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::LocationMessageBody* InboundMessageBody::release_location() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.location)
  if (_internal_has_location()) {
    clear_has_entry();
      ::com::elarian::hera::proto::LocationMessageBody* temp = entry_.location_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.location_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::LocationMessageBody& InboundMessageBody::_internal_location() const {
  return _internal_has_location()
      ? *entry_.location_
      : reinterpret_cast< ::com::elarian::hera::proto::LocationMessageBody&>(::com::elarian::hera::proto::_LocationMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::LocationMessageBody& InboundMessageBody::location() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.location)
  return _internal_location();
}
inline ::com::elarian::hera::proto::LocationMessageBody* InboundMessageBody::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.InboundMessageBody.location)
  if (_internal_has_location()) {
    clear_has_entry();
    ::com::elarian::hera::proto::LocationMessageBody* temp = entry_.location_;
    entry_.location_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::unsafe_arena_set_allocated_location(::com::elarian::hera::proto::LocationMessageBody* location) {
  clear_entry();
  if (location) {
    set_has_location();
    entry_.location_ = location;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.InboundMessageBody.location)
}
inline ::com::elarian::hera::proto::LocationMessageBody* InboundMessageBody::_internal_mutable_location() {
  if (!_internal_has_location()) {
    clear_entry();
    set_has_location();
    entry_.location_ = CreateMaybeMessage< ::com::elarian::hera::proto::LocationMessageBody >(GetArena());
  }
  return entry_.location_;
}
inline ::com::elarian::hera::proto::LocationMessageBody* InboundMessageBody::mutable_location() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.location)
  return _internal_mutable_location();
}

// .com.elarian.hera.proto.EmailMessageBody email = 4;
inline bool InboundMessageBody::_internal_has_email() const {
  return entry_case() == kEmail;
}
inline bool InboundMessageBody::has_email() const {
  return _internal_has_email();
}
inline void InboundMessageBody::set_has_email() {
  _oneof_case_[0] = kEmail;
}
inline void InboundMessageBody::clear_email() {
  if (_internal_has_email()) {
    if (GetArena() == nullptr) {
      delete entry_.email_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::EmailMessageBody* InboundMessageBody::release_email() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.email)
  if (_internal_has_email()) {
    clear_has_entry();
      ::com::elarian::hera::proto::EmailMessageBody* temp = entry_.email_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.email_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::EmailMessageBody& InboundMessageBody::_internal_email() const {
  return _internal_has_email()
      ? *entry_.email_
      : reinterpret_cast< ::com::elarian::hera::proto::EmailMessageBody&>(::com::elarian::hera::proto::_EmailMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::EmailMessageBody& InboundMessageBody::email() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.email)
  return _internal_email();
}
inline ::com::elarian::hera::proto::EmailMessageBody* InboundMessageBody::unsafe_arena_release_email() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.InboundMessageBody.email)
  if (_internal_has_email()) {
    clear_has_entry();
    ::com::elarian::hera::proto::EmailMessageBody* temp = entry_.email_;
    entry_.email_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::unsafe_arena_set_allocated_email(::com::elarian::hera::proto::EmailMessageBody* email) {
  clear_entry();
  if (email) {
    set_has_email();
    entry_.email_ = email;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.InboundMessageBody.email)
}
inline ::com::elarian::hera::proto::EmailMessageBody* InboundMessageBody::_internal_mutable_email() {
  if (!_internal_has_email()) {
    clear_entry();
    set_has_email();
    entry_.email_ = CreateMaybeMessage< ::com::elarian::hera::proto::EmailMessageBody >(GetArena());
  }
  return entry_.email_;
}
inline ::com::elarian::hera::proto::EmailMessageBody* InboundMessageBody::mutable_email() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.email)
  return _internal_mutable_email();
}

// .com.elarian.hera.proto.VoiceCallInputMessageBody voice = 5;
inline bool InboundMessageBody::_internal_has_voice() const {
  return entry_case() == kVoice;
}
inline bool InboundMessageBody::has_voice() const {
  return _internal_has_voice();
}
inline void InboundMessageBody::set_has_voice() {
  _oneof_case_[0] = kVoice;
}
inline void InboundMessageBody::clear_voice() {
  if (_internal_has_voice()) {
    if (GetArena() == nullptr) {
      delete entry_.voice_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::VoiceCallInputMessageBody* InboundMessageBody::release_voice() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.voice)
  if (_internal_has_voice()) {
    clear_has_entry();
      ::com::elarian::hera::proto::VoiceCallInputMessageBody* temp = entry_.voice_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.voice_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::VoiceCallInputMessageBody& InboundMessageBody::_internal_voice() const {
  return _internal_has_voice()
      ? *entry_.voice_
      : reinterpret_cast< ::com::elarian::hera::proto::VoiceCallInputMessageBody&>(::com::elarian::hera::proto::_VoiceCallInputMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::VoiceCallInputMessageBody& InboundMessageBody::voice() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.voice)
  return _internal_voice();
}
inline ::com::elarian::hera::proto::VoiceCallInputMessageBody* InboundMessageBody::unsafe_arena_release_voice() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.InboundMessageBody.voice)
  if (_internal_has_voice()) {
    clear_has_entry();
    ::com::elarian::hera::proto::VoiceCallInputMessageBody* temp = entry_.voice_;
    entry_.voice_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::unsafe_arena_set_allocated_voice(::com::elarian::hera::proto::VoiceCallInputMessageBody* voice) {
  clear_entry();
  if (voice) {
    set_has_voice();
    entry_.voice_ = voice;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.InboundMessageBody.voice)
}
inline ::com::elarian::hera::proto::VoiceCallInputMessageBody* InboundMessageBody::_internal_mutable_voice() {
  if (!_internal_has_voice()) {
    clear_entry();
    set_has_voice();
    entry_.voice_ = CreateMaybeMessage< ::com::elarian::hera::proto::VoiceCallInputMessageBody >(GetArena());
  }
  return entry_.voice_;
}
inline ::com::elarian::hera::proto::VoiceCallInputMessageBody* InboundMessageBody::mutable_voice() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.voice)
  return _internal_mutable_voice();
}

// .com.elarian.hera.proto.UssdInputMessageBody ussd = 6;
inline bool InboundMessageBody::_internal_has_ussd() const {
  return entry_case() == kUssd;
}
inline bool InboundMessageBody::has_ussd() const {
  return _internal_has_ussd();
}
inline void InboundMessageBody::set_has_ussd() {
  _oneof_case_[0] = kUssd;
}
inline void InboundMessageBody::clear_ussd() {
  if (_internal_has_ussd()) {
    if (GetArena() == nullptr) {
      delete entry_.ussd_;
    }
    clear_has_entry();
  }
}
inline ::com::elarian::hera::proto::UssdInputMessageBody* InboundMessageBody::release_ussd() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.InboundMessageBody.ussd)
  if (_internal_has_ussd()) {
    clear_has_entry();
      ::com::elarian::hera::proto::UssdInputMessageBody* temp = entry_.ussd_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    entry_.ussd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::com::elarian::hera::proto::UssdInputMessageBody& InboundMessageBody::_internal_ussd() const {
  return _internal_has_ussd()
      ? *entry_.ussd_
      : reinterpret_cast< ::com::elarian::hera::proto::UssdInputMessageBody&>(::com::elarian::hera::proto::_UssdInputMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::UssdInputMessageBody& InboundMessageBody::ussd() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.InboundMessageBody.ussd)
  return _internal_ussd();
}
inline ::com::elarian::hera::proto::UssdInputMessageBody* InboundMessageBody::unsafe_arena_release_ussd() {
  // @@protoc_insertion_point(field_unsafe_arena_release:com.elarian.hera.proto.InboundMessageBody.ussd)
  if (_internal_has_ussd()) {
    clear_has_entry();
    ::com::elarian::hera::proto::UssdInputMessageBody* temp = entry_.ussd_;
    entry_.ussd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InboundMessageBody::unsafe_arena_set_allocated_ussd(::com::elarian::hera::proto::UssdInputMessageBody* ussd) {
  clear_entry();
  if (ussd) {
    set_has_ussd();
    entry_.ussd_ = ussd;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.InboundMessageBody.ussd)
}
inline ::com::elarian::hera::proto::UssdInputMessageBody* InboundMessageBody::_internal_mutable_ussd() {
  if (!_internal_has_ussd()) {
    clear_entry();
    set_has_ussd();
    entry_.ussd_ = CreateMaybeMessage< ::com::elarian::hera::proto::UssdInputMessageBody >(GetArena());
  }
  return entry_.ussd_;
}
inline ::com::elarian::hera::proto::UssdInputMessageBody* InboundMessageBody::mutable_ussd() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.InboundMessageBody.ussd)
  return _internal_mutable_ussd();
}

inline bool InboundMessageBody::has_entry() const {
  return entry_case() != ENTRY_NOT_SET;
}
inline void InboundMessageBody::clear_has_entry() {
  _oneof_case_[0] = ENTRY_NOT_SET;
}
inline InboundMessageBody::EntryCase InboundMessageBody::entry_case() const {
  return InboundMessageBody::EntryCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// OutboundMessageReplyPrompt

// .com.elarian.hera.proto.PromptMessageReplyAction action = 1;
inline void OutboundMessageReplyPrompt::clear_action() {
  action_ = 0;
}
inline ::com::elarian::hera::proto::PromptMessageReplyAction OutboundMessageReplyPrompt::_internal_action() const {
  return static_cast< ::com::elarian::hera::proto::PromptMessageReplyAction >(action_);
}
inline ::com::elarian::hera::proto::PromptMessageReplyAction OutboundMessageReplyPrompt::action() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageReplyPrompt.action)
  return _internal_action();
}
inline void OutboundMessageReplyPrompt::_internal_set_action(::com::elarian::hera::proto::PromptMessageReplyAction value) {
  
  action_ = value;
}
inline void OutboundMessageReplyPrompt::set_action(::com::elarian::hera::proto::PromptMessageReplyAction value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessageReplyPrompt.action)
}

// repeated .com.elarian.hera.proto.PromptMessageMenuItemBody menu = 2;
inline int OutboundMessageReplyPrompt::_internal_menu_size() const {
  return menu_.size();
}
inline int OutboundMessageReplyPrompt::menu_size() const {
  return _internal_menu_size();
}
inline void OutboundMessageReplyPrompt::clear_menu() {
  menu_.Clear();
}
inline ::com::elarian::hera::proto::PromptMessageMenuItemBody* OutboundMessageReplyPrompt::mutable_menu(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessageReplyPrompt.menu)
  return menu_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::PromptMessageMenuItemBody >*
OutboundMessageReplyPrompt::mutable_menu() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.OutboundMessageReplyPrompt.menu)
  return &menu_;
}
inline const ::com::elarian::hera::proto::PromptMessageMenuItemBody& OutboundMessageReplyPrompt::_internal_menu(int index) const {
  return menu_.Get(index);
}
inline const ::com::elarian::hera::proto::PromptMessageMenuItemBody& OutboundMessageReplyPrompt::menu(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessageReplyPrompt.menu)
  return _internal_menu(index);
}
inline ::com::elarian::hera::proto::PromptMessageMenuItemBody* OutboundMessageReplyPrompt::_internal_add_menu() {
  return menu_.Add();
}
inline ::com::elarian::hera::proto::PromptMessageMenuItemBody* OutboundMessageReplyPrompt::add_menu() {
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.OutboundMessageReplyPrompt.menu)
  return _internal_add_menu();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::elarian::hera::proto::PromptMessageMenuItemBody >&
OutboundMessageReplyPrompt::menu() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.OutboundMessageReplyPrompt.menu)
  return menu_;
}

// -------------------------------------------------------------------

// OutboundMessage

// .com.elarian.hera.proto.OutboundMessageBody body = 1;
inline bool OutboundMessage::_internal_has_body() const {
  return this != internal_default_instance() && body_ != nullptr;
}
inline bool OutboundMessage::has_body() const {
  return _internal_has_body();
}
inline void OutboundMessage::clear_body() {
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
}
inline const ::com::elarian::hera::proto::OutboundMessageBody& OutboundMessage::_internal_body() const {
  const ::com::elarian::hera::proto::OutboundMessageBody* p = body_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::OutboundMessageBody&>(
      ::com::elarian::hera::proto::_OutboundMessageBody_default_instance_);
}
inline const ::com::elarian::hera::proto::OutboundMessageBody& OutboundMessage::body() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessage.body)
  return _internal_body();
}
inline void OutboundMessage::unsafe_arena_set_allocated_body(
    ::com::elarian::hera::proto::OutboundMessageBody* body) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(body_);
  }
  body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessage.body)
}
inline ::com::elarian::hera::proto::OutboundMessageBody* OutboundMessage::release_body() {
  
  ::com::elarian::hera::proto::OutboundMessageBody* temp = body_;
  body_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessageBody* OutboundMessage::unsafe_arena_release_body() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessage.body)
  
  ::com::elarian::hera::proto::OutboundMessageBody* temp = body_;
  body_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessageBody* OutboundMessage::_internal_mutable_body() {
  
  if (body_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessageBody>(GetArena());
    body_ = p;
  }
  return body_;
}
inline ::com::elarian::hera::proto::OutboundMessageBody* OutboundMessage::mutable_body() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessage.body)
  return _internal_mutable_body();
}
inline void OutboundMessage::set_allocated_body(::com::elarian::hera::proto::OutboundMessageBody* body) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete body_;
  }
  if (body) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(body);
    if (message_arena != submessage_arena) {
      body = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessage.body)
}

// repeated string labels = 2;
inline int OutboundMessage::_internal_labels_size() const {
  return labels_.size();
}
inline int OutboundMessage::labels_size() const {
  return _internal_labels_size();
}
inline void OutboundMessage::clear_labels() {
  labels_.Clear();
}
inline std::string* OutboundMessage::add_labels() {
  // @@protoc_insertion_point(field_add_mutable:com.elarian.hera.proto.OutboundMessage.labels)
  return _internal_add_labels();
}
inline const std::string& OutboundMessage::_internal_labels(int index) const {
  return labels_.Get(index);
}
inline const std::string& OutboundMessage::labels(int index) const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessage.labels)
  return _internal_labels(index);
}
inline std::string* OutboundMessage::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessage.labels)
  return labels_.Mutable(index);
}
inline void OutboundMessage::set_labels(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessage.labels)
  labels_.Mutable(index)->assign(value);
}
inline void OutboundMessage::set_labels(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:com.elarian.hera.proto.OutboundMessage.labels)
  labels_.Mutable(index)->assign(std::move(value));
}
inline void OutboundMessage::set_labels(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  labels_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.elarian.hera.proto.OutboundMessage.labels)
}
inline void OutboundMessage::set_labels(int index, const char* value, size_t size) {
  labels_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.elarian.hera.proto.OutboundMessage.labels)
}
inline std::string* OutboundMessage::_internal_add_labels() {
  return labels_.Add();
}
inline void OutboundMessage::add_labels(const std::string& value) {
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.OutboundMessage.labels)
}
inline void OutboundMessage::add_labels(std::string&& value) {
  labels_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.elarian.hera.proto.OutboundMessage.labels)
}
inline void OutboundMessage::add_labels(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  labels_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.elarian.hera.proto.OutboundMessage.labels)
}
inline void OutboundMessage::add_labels(const char* value, size_t size) {
  labels_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.elarian.hera.proto.OutboundMessage.labels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
OutboundMessage::labels() const {
  // @@protoc_insertion_point(field_list:com.elarian.hera.proto.OutboundMessage.labels)
  return labels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
OutboundMessage::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:com.elarian.hera.proto.OutboundMessage.labels)
  return &labels_;
}

// .google.protobuf.StringValue provider_tag = 3;
inline bool OutboundMessage::_internal_has_provider_tag() const {
  return this != internal_default_instance() && provider_tag_ != nullptr;
}
inline bool OutboundMessage::has_provider_tag() const {
  return _internal_has_provider_tag();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& OutboundMessage::_internal_provider_tag() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = provider_tag_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& OutboundMessage::provider_tag() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessage.provider_tag)
  return _internal_provider_tag();
}
inline void OutboundMessage::unsafe_arena_set_allocated_provider_tag(
    PROTOBUF_NAMESPACE_ID::StringValue* provider_tag) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(provider_tag_);
  }
  provider_tag_ = provider_tag;
  if (provider_tag) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessage.provider_tag)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::release_provider_tag() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = provider_tag_;
  provider_tag_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::unsafe_arena_release_provider_tag() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessage.provider_tag)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = provider_tag_;
  provider_tag_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::_internal_mutable_provider_tag() {
  
  if (provider_tag_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    provider_tag_ = p;
  }
  return provider_tag_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::mutable_provider_tag() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessage.provider_tag)
  return _internal_mutable_provider_tag();
}
inline void OutboundMessage::set_allocated_provider_tag(PROTOBUF_NAMESPACE_ID::StringValue* provider_tag) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(provider_tag_);
  }
  if (provider_tag) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(provider_tag)->GetArena();
    if (message_arena != submessage_arena) {
      provider_tag = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, provider_tag, submessage_arena);
    }
    
  } else {
    
  }
  provider_tag_ = provider_tag;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessage.provider_tag)
}

// .google.protobuf.StringValue reply_token = 4;
inline bool OutboundMessage::_internal_has_reply_token() const {
  return this != internal_default_instance() && reply_token_ != nullptr;
}
inline bool OutboundMessage::has_reply_token() const {
  return _internal_has_reply_token();
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& OutboundMessage::_internal_reply_token() const {
  const PROTOBUF_NAMESPACE_ID::StringValue* p = reply_token_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::StringValue&>(
      PROTOBUF_NAMESPACE_ID::_StringValue_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::StringValue& OutboundMessage::reply_token() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessage.reply_token)
  return _internal_reply_token();
}
inline void OutboundMessage::unsafe_arena_set_allocated_reply_token(
    PROTOBUF_NAMESPACE_ID::StringValue* reply_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_token_);
  }
  reply_token_ = reply_token;
  if (reply_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessage.reply_token)
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::release_reply_token() {
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = reply_token_;
  reply_token_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::unsafe_arena_release_reply_token() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessage.reply_token)
  
  PROTOBUF_NAMESPACE_ID::StringValue* temp = reply_token_;
  reply_token_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::_internal_mutable_reply_token() {
  
  if (reply_token_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::StringValue>(GetArena());
    reply_token_ = p;
  }
  return reply_token_;
}
inline PROTOBUF_NAMESPACE_ID::StringValue* OutboundMessage::mutable_reply_token() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessage.reply_token)
  return _internal_mutable_reply_token();
}
inline void OutboundMessage::set_allocated_reply_token(PROTOBUF_NAMESPACE_ID::StringValue* reply_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_token_);
  }
  if (reply_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_token)->GetArena();
    if (message_arena != submessage_arena) {
      reply_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_token, submessage_arena);
    }
    
  } else {
    
  }
  reply_token_ = reply_token;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessage.reply_token)
}

// .com.elarian.hera.proto.OutboundMessageReplyPrompt reply_prompt = 5;
inline bool OutboundMessage::_internal_has_reply_prompt() const {
  return this != internal_default_instance() && reply_prompt_ != nullptr;
}
inline bool OutboundMessage::has_reply_prompt() const {
  return _internal_has_reply_prompt();
}
inline void OutboundMessage::clear_reply_prompt() {
  if (GetArena() == nullptr && reply_prompt_ != nullptr) {
    delete reply_prompt_;
  }
  reply_prompt_ = nullptr;
}
inline const ::com::elarian::hera::proto::OutboundMessageReplyPrompt& OutboundMessage::_internal_reply_prompt() const {
  const ::com::elarian::hera::proto::OutboundMessageReplyPrompt* p = reply_prompt_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::elarian::hera::proto::OutboundMessageReplyPrompt&>(
      ::com::elarian::hera::proto::_OutboundMessageReplyPrompt_default_instance_);
}
inline const ::com::elarian::hera::proto::OutboundMessageReplyPrompt& OutboundMessage::reply_prompt() const {
  // @@protoc_insertion_point(field_get:com.elarian.hera.proto.OutboundMessage.reply_prompt)
  return _internal_reply_prompt();
}
inline void OutboundMessage::unsafe_arena_set_allocated_reply_prompt(
    ::com::elarian::hera::proto::OutboundMessageReplyPrompt* reply_prompt) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reply_prompt_);
  }
  reply_prompt_ = reply_prompt;
  if (reply_prompt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.elarian.hera.proto.OutboundMessage.reply_prompt)
}
inline ::com::elarian::hera::proto::OutboundMessageReplyPrompt* OutboundMessage::release_reply_prompt() {
  
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* temp = reply_prompt_;
  reply_prompt_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessageReplyPrompt* OutboundMessage::unsafe_arena_release_reply_prompt() {
  // @@protoc_insertion_point(field_release:com.elarian.hera.proto.OutboundMessage.reply_prompt)
  
  ::com::elarian::hera::proto::OutboundMessageReplyPrompt* temp = reply_prompt_;
  reply_prompt_ = nullptr;
  return temp;
}
inline ::com::elarian::hera::proto::OutboundMessageReplyPrompt* OutboundMessage::_internal_mutable_reply_prompt() {
  
  if (reply_prompt_ == nullptr) {
    auto* p = CreateMaybeMessage<::com::elarian::hera::proto::OutboundMessageReplyPrompt>(GetArena());
    reply_prompt_ = p;
  }
  return reply_prompt_;
}
inline ::com::elarian::hera::proto::OutboundMessageReplyPrompt* OutboundMessage::mutable_reply_prompt() {
  // @@protoc_insertion_point(field_mutable:com.elarian.hera.proto.OutboundMessage.reply_prompt)
  return _internal_mutable_reply_prompt();
}
inline void OutboundMessage::set_allocated_reply_prompt(::com::elarian::hera::proto::OutboundMessageReplyPrompt* reply_prompt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reply_prompt_;
  }
  if (reply_prompt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reply_prompt);
    if (message_arena != submessage_arena) {
      reply_prompt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reply_prompt, submessage_arena);
    }
    
  } else {
    
  }
  reply_prompt_ = reply_prompt;
  // @@protoc_insertion_point(field_set_allocated:com.elarian.hera.proto.OutboundMessage.reply_prompt)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::com::elarian::hera::proto::MessagingChannel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessagingChannel>() {
  return ::com::elarian::hera::proto::MessagingChannel_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::MessagingConsentUpdate> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessagingConsentUpdate>() {
  return ::com::elarian::hera::proto::MessagingConsentUpdate_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::MessagingConsentUpdateStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessagingConsentUpdateStatus>() {
  return ::com::elarian::hera::proto::MessagingConsentUpdateStatus_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::MessagingSessionEndReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessagingSessionEndReason>() {
  return ::com::elarian::hera::proto::MessagingSessionEndReason_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::MessageReaction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessageReaction>() {
  return ::com::elarian::hera::proto::MessageReaction_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::PromptMessageReplyAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::PromptMessageReplyAction>() {
  return ::com::elarian::hera::proto::PromptMessageReplyAction_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::MessageDeliveryStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::MessageDeliveryStatus>() {
  return ::com::elarian::hera::proto::MessageDeliveryStatus_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::VoiceCallStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::VoiceCallStatus>() {
  return ::com::elarian::hera::proto::VoiceCallStatus_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::VoiceCallHangupCause> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::VoiceCallHangupCause>() {
  return ::com::elarian::hera::proto::VoiceCallHangupCause_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::UssdSessionStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::UssdSessionStatus>() {
  return ::com::elarian::hera::proto::UssdSessionStatus_descriptor();
}
template <> struct is_proto_enum< ::com::elarian::hera::proto::TextToSpeechVoice> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::elarian::hera::proto::TextToSpeechVoice>() {
  return ::com::elarian::hera::proto::TextToSpeechVoice_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messaging_5fmodel_2eproto
