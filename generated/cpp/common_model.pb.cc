// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_model.proto

#include "common_model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_5fmodel_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IndexMapping_common_5fmodel_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace com {
namespace elarian {
namespace hera {
namespace proto {
class DataMapValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataMapValue> _instance;
} _DataMapValue_default_instance_;
class CashDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Cash> _instance;
} _Cash_default_instance_;
class IndexMappingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexMapping> _instance;
} _IndexMapping_default_instance_;
class CustomerIndexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomerIndex> _instance;
} _CustomerIndex_default_instance_;
class AppConnectionPropsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AppConnectionProps> _instance;
} _AppConnectionProps_default_instance_;
class CustomerNumberDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CustomerNumber> _instance;
} _CustomerNumber_default_instance_;
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
static void InitDefaultsscc_info_AppConnectionProps_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_AppConnectionProps_default_instance_;
    new (ptr) ::com::elarian::hera::proto::AppConnectionProps();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AppConnectionProps_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AppConnectionProps_common_5fmodel_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Cash_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_Cash_default_instance_;
    new (ptr) ::com::elarian::hera::proto::Cash();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Cash_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Cash_common_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_CustomerIndex_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CustomerIndex_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CustomerIndex();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CustomerIndex_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CustomerIndex_common_5fmodel_2eproto}, {
      &scc_info_IndexMapping_common_5fmodel_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_CustomerNumber_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_CustomerNumber_default_instance_;
    new (ptr) ::com::elarian::hera::proto::CustomerNumber();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CustomerNumber_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CustomerNumber_common_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_DataMapValue_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_DataMapValue_default_instance_;
    new (ptr) ::com::elarian::hera::proto::DataMapValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataMapValue_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataMapValue_common_5fmodel_2eproto}, {}};

static void InitDefaultsscc_info_IndexMapping_common_5fmodel_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::elarian::hera::proto::_IndexMapping_default_instance_;
    new (ptr) ::com::elarian::hera::proto::IndexMapping();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IndexMapping_common_5fmodel_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IndexMapping_common_5fmodel_2eproto}, {
      &scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_common_5fmodel_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_common_5fmodel_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_common_5fmodel_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_common_5fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DataMapValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DataMapValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::DataMapValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::Cash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::Cash, currency_code_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::Cash, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::IndexMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::IndexMapping, key_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::IndexMapping, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerIndex, mapping_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerIndex, expires_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppConnectionProps, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppConnectionProps, connection_id_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppConnectionProps, connection_time_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppConnectionProps, ip_address_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::AppConnectionProps, simplex_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerNumber, provider_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerNumber, number_),
  PROTOBUF_FIELD_OFFSET(::com::elarian::hera::proto::CustomerNumber, partition_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::elarian::hera::proto::DataMapValue)},
  { 8, -1, sizeof(::com::elarian::hera::proto::Cash)},
  { 15, -1, sizeof(::com::elarian::hera::proto::IndexMapping)},
  { 22, -1, sizeof(::com::elarian::hera::proto::CustomerIndex)},
  { 29, -1, sizeof(::com::elarian::hera::proto::AppConnectionProps)},
  { 38, -1, sizeof(::com::elarian::hera::proto::CustomerNumber)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_DataMapValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_Cash_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_IndexMapping_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CustomerIndex_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_AppConnectionProps_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::elarian::hera::proto::_CustomerNumber_default_instance_),
};

const char descriptor_table_protodef_common_5fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022common_model.proto\022\026com.elarian.hera.p"
  "roto\032\036google/protobuf/wrappers.proto\032\037go"
  "ogle/protobuf/timestamp.proto\"B\n\014DataMap"
  "Value\022\024\n\nstring_val\030\002 \001(\tH\000\022\023\n\tbytes_val"
  "\030\003 \001(\014H\000B\007\n\005value\"-\n\004Cash\022\025\n\rcurrency_co"
  "de\030\001 \001(\t\022\016\n\006amount\030\002 \001(\001\"H\n\014IndexMapping"
  "\022\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.google.pr"
  "otobuf.StringValue\"v\n\rCustomerIndex\0225\n\007m"
  "apping\030\001 \001(\0132$.com.elarian.hera.proto.In"
  "dexMapping\022.\n\nexpires_at\030\002 \001(\0132\032.google."
  "protobuf.Timestamp\"\250\001\n\022AppConnectionProp"
  "s\022\025\n\rconnection_id\030\001 \001(\t\0223\n\017connection_t"
  "ime\030\002 \001(\0132\032.google.protobuf.Timestamp\0220\n"
  "\nip_address\030\003 \001(\0132\034.google.protobuf.Stri"
  "ngValue\022\024\n\014simplex_mode\030\004 \001(\010\"\223\001\n\016Custom"
  "erNumber\022@\n\010provider\030\001 \001(\0162..com.elarian"
  ".hera.proto.CustomerNumberProvider\022\016\n\006nu"
  "mber\030\002 \001(\t\022/\n\tpartition\030\003 \001(\0132\034.google.p"
  "rotobuf.StringValue*\375\001\n\026CustomerNumberPr"
  "ovider\022(\n$CUSTOMER_NUMBER_PROVIDER_UNSPE"
  "CIFIED\020\000\022%\n!CUSTOMER_NUMBER_PROVIDER_FAC"
  "EBOOK\020\001\022%\n!CUSTOMER_NUMBER_PROVIDER_CELL"
  "ULAR\020\002\022%\n!CUSTOMER_NUMBER_PROVIDER_TELEG"
  "RAM\020\003\022 \n\034CUSTOMER_NUMBER_PROVIDER_APP\020\004\022"
  "\"\n\036CUSTOMER_NUMBER_PROVIDER_EMAIL\020\005*\230\002\n\025"
  "ChannelNumberProvider\022\'\n#CHANNEL_NUMBER_"
  "PROVIDER_UNSPECIFIED\020\000\022\036\n\032CHANNEL_NUMBER"
  "_PROVIDER_AT\020\001\022\"\n\036CHANNEL_NUMBER_PROVIDE"
  "R_TWILIO\020\002\022#\n\037CHANNEL_NUMBER_PROVIDER_MA"
  "ILGUN\020\003\022$\n CHANNEL_NUMBER_PROVIDER_FACEB"
  "OOK\020\004\022$\n CHANNEL_NUMBER_PROVIDER_TELEGRA"
  "M\020\005\022!\n\035CHANNEL_NUMBER_PROVIDER_MPESA\020\006*\310"
  "\001\n\tMediaType\022\032\n\026MEDIA_TYPE_UNSPECIFIED\020\000"
  "\022\024\n\020MEDIA_TYPE_IMAGE\020\001\022\024\n\020MEDIA_TYPE_AUD"
  "IO\020\002\022\024\n\020MEDIA_TYPE_VIDEO\020\003\022\027\n\023MEDIA_TYPE"
  "_DOCUMENT\020\004\022\024\n\020MEDIA_TYPE_VOICE\020\005\022\026\n\022MED"
  "IA_TYPE_STICKER\020\006\022\026\n\022MEDIA_TYPE_CONTACT\020"
  "\007*\217\001\n\026CustomerEventDirection\022(\n$CUSTOMER"
  "_EVENT_DIRECTION_UNSPECIFIED\020\000\022$\n CUSTOM"
  "ER_EVENT_DIRECTION_INBOUND\020\001\022%\n!CUSTOMER"
  "_EVENT_DIRECTION_OUTBOUND\020\002*\267\001\n\025Customer"
  "RequestOrigin\022\'\n#CUSTOMER_REQUEST_ORIGIN"
  "_UNSPECIFIED\020\000\022\'\n#CUSTOMER_REQUEST_ORIGI"
  "N_API_REQUEST\020\001\022(\n$CUSTOMER_REQUEST_ORIG"
  "IN_CUSTOMER_TAG\020\002\022\"\n\036CUSTOMER_REQUEST_OR"
  "IGIN_REPLAY\020\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_common_5fmodel_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_common_5fmodel_2eproto_sccs[6] = {
  &scc_info_AppConnectionProps_common_5fmodel_2eproto.base,
  &scc_info_Cash_common_5fmodel_2eproto.base,
  &scc_info_CustomerIndex_common_5fmodel_2eproto.base,
  &scc_info_CustomerNumber_common_5fmodel_2eproto.base,
  &scc_info_DataMapValue_common_5fmodel_2eproto.base,
  &scc_info_IndexMapping_common_5fmodel_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_common_5fmodel_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_common_5fmodel_2eproto = {
  false, false, descriptor_table_protodef_common_5fmodel_2eproto, "common_model.proto", 1821,
  &descriptor_table_common_5fmodel_2eproto_once, descriptor_table_common_5fmodel_2eproto_sccs, descriptor_table_common_5fmodel_2eproto_deps, 6, 2,
  schemas, file_default_instances, TableStruct_common_5fmodel_2eproto::offsets,
  file_level_metadata_common_5fmodel_2eproto, 6, file_level_enum_descriptors_common_5fmodel_2eproto, file_level_service_descriptors_common_5fmodel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_common_5fmodel_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_common_5fmodel_2eproto)), true);
namespace com {
namespace elarian {
namespace hera {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CustomerNumberProvider_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_common_5fmodel_2eproto);
  return file_level_enum_descriptors_common_5fmodel_2eproto[0];
}
bool CustomerNumberProvider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChannelNumberProvider_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_common_5fmodel_2eproto);
  return file_level_enum_descriptors_common_5fmodel_2eproto[1];
}
bool ChannelNumberProvider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MediaType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_common_5fmodel_2eproto);
  return file_level_enum_descriptors_common_5fmodel_2eproto[2];
}
bool MediaType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CustomerEventDirection_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_common_5fmodel_2eproto);
  return file_level_enum_descriptors_common_5fmodel_2eproto[3];
}
bool CustomerEventDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CustomerRequestOrigin_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_common_5fmodel_2eproto);
  return file_level_enum_descriptors_common_5fmodel_2eproto[4];
}
bool CustomerRequestOrigin_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class DataMapValue::_Internal {
 public:
};

DataMapValue::DataMapValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.DataMapValue)
}
DataMapValue::DataMapValue(const DataMapValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStringVal: {
      _internal_set_string_val(from._internal_string_val());
      break;
    }
    case kBytesVal: {
      _internal_set_bytes_val(from._internal_bytes_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.DataMapValue)
}

void DataMapValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataMapValue_common_5fmodel_2eproto.base);
  clear_has_value();
}

DataMapValue::~DataMapValue() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.DataMapValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataMapValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void DataMapValue::ArenaDtor(void* object) {
  DataMapValue* _this = reinterpret_cast< DataMapValue* >(object);
  (void)_this;
}
void DataMapValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataMapValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataMapValue& DataMapValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataMapValue_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void DataMapValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:com.elarian.hera.proto.DataMapValue)
  switch (value_case()) {
    case kStringVal: {
      value_.string_val_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kBytesVal: {
      value_.bytes_val_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void DataMapValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.DataMapValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataMapValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string string_val = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_string_val();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.DataMapValue.string_val"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes_val = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_bytes_val();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataMapValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.DataMapValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 2;
  if (_internal_has_string_val()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_val().data(), static_cast<int>(this->_internal_string_val().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.DataMapValue.string_val");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_string_val(), target);
  }

  // bytes bytes_val = 3;
  if (_internal_has_bytes_val()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_bytes_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.DataMapValue)
  return target;
}

size_t DataMapValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.DataMapValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // string string_val = 2;
    case kStringVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_val());
      break;
    }
    // bytes bytes_val = 3;
    case kBytesVal: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataMapValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.DataMapValue)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMapValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataMapValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.DataMapValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.DataMapValue)
    MergeFrom(*source);
  }
}

void DataMapValue::MergeFrom(const DataMapValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.DataMapValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStringVal: {
      _internal_set_string_val(from._internal_string_val());
      break;
    }
    case kBytesVal: {
      _internal_set_bytes_val(from._internal_bytes_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void DataMapValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.DataMapValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMapValue::CopyFrom(const DataMapValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.DataMapValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMapValue::IsInitialized() const {
  return true;
}

void DataMapValue::InternalSwap(DataMapValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataMapValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Cash::_Internal {
 public:
};

Cash::Cash(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.Cash)
}
Cash::Cash(const Cash& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency_code().empty()) {
    currency_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currency_code(), 
      GetArena());
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.Cash)
}

void Cash::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Cash_common_5fmodel_2eproto.base);
  currency_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
}

Cash::~Cash() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.Cash)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Cash::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currency_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cash::ArenaDtor(void* object) {
  Cash* _this = reinterpret_cast< Cash* >(object);
  (void)_this;
}
void Cash::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Cash& Cash::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Cash_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void Cash::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.Cash)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_code_.ClearToEmpty();
  amount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cash::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string currency_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_currency_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.Cash.currency_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Cash::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.Cash)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency_code().data(), static_cast<int>(this->_internal_currency_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.Cash.currency_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_currency_code(), target);
  }

  // double amount = 2;
  if (!(this->amount() <= 0 && this->amount() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.Cash)
  return target;
}

size_t Cash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.Cash)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency_code = 1;
  if (this->currency_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency_code());
  }

  // double amount = 2;
  if (!(this->amount() <= 0 && this->amount() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Cash::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.Cash)
  GOOGLE_DCHECK_NE(&from, this);
  const Cash* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Cash>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.Cash)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.Cash)
    MergeFrom(*source);
  }
}

void Cash::MergeFrom(const Cash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.Cash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currency_code().size() > 0) {
    _internal_set_currency_code(from._internal_currency_code());
  }
  if (!(from.amount() <= 0 && from.amount() >= 0)) {
    _internal_set_amount(from._internal_amount());
  }
}

void Cash::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.Cash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cash::CopyFrom(const Cash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.Cash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cash::IsInitialized() const {
  return true;
}

void Cash::InternalSwap(Cash* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currency_code_.Swap(&other->currency_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Cash::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IndexMapping::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& value(const IndexMapping* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
IndexMapping::_Internal::value(const IndexMapping* msg) {
  return *msg->value_;
}
void IndexMapping::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
IndexMapping::IndexMapping(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.IndexMapping)
}
IndexMapping::IndexMapping(const IndexMapping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.IndexMapping)
}

void IndexMapping::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexMapping_common_5fmodel_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

IndexMapping::~IndexMapping() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.IndexMapping)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IndexMapping::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void IndexMapping::ArenaDtor(void* object) {
  IndexMapping* _this = reinterpret_cast< IndexMapping* >(object);
  (void)_this;
}
void IndexMapping::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IndexMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexMapping& IndexMapping::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexMapping_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void IndexMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.IndexMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IndexMapping::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.IndexMapping.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexMapping::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.IndexMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.IndexMapping.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.IndexMapping)
  return target;
}

size_t IndexMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.IndexMapping)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .google.protobuf.StringValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexMapping::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.IndexMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexMapping* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexMapping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.IndexMapping)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.IndexMapping)
    MergeFrom(*source);
  }
}

void IndexMapping::MergeFrom(const IndexMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.IndexMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.has_value()) {
    _internal_mutable_value()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_value());
  }
}

void IndexMapping::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.IndexMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexMapping::CopyFrom(const IndexMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.IndexMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexMapping::IsInitialized() const {
  return true;
}

void IndexMapping::InternalSwap(IndexMapping* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexMapping::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CustomerIndex::_Internal {
 public:
  static const ::com::elarian::hera::proto::IndexMapping& mapping(const CustomerIndex* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expires_at(const CustomerIndex* msg);
};

const ::com::elarian::hera::proto::IndexMapping&
CustomerIndex::_Internal::mapping(const CustomerIndex* msg) {
  return *msg->mapping_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CustomerIndex::_Internal::expires_at(const CustomerIndex* msg) {
  return *msg->expires_at_;
}
void CustomerIndex::clear_expires_at() {
  if (GetArena() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
}
CustomerIndex::CustomerIndex(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.CustomerIndex)
}
CustomerIndex::CustomerIndex(const CustomerIndex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mapping()) {
    mapping_ = new ::com::elarian::hera::proto::IndexMapping(*from.mapping_);
  } else {
    mapping_ = nullptr;
  }
  if (from._internal_has_expires_at()) {
    expires_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expires_at_);
  } else {
    expires_at_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.CustomerIndex)
}

void CustomerIndex::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomerIndex_common_5fmodel_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&mapping_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&expires_at_) -
      reinterpret_cast<char*>(&mapping_)) + sizeof(expires_at_));
}

CustomerIndex::~CustomerIndex() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.CustomerIndex)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomerIndex::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mapping_;
  if (this != internal_default_instance()) delete expires_at_;
}

void CustomerIndex::ArenaDtor(void* object) {
  CustomerIndex* _this = reinterpret_cast< CustomerIndex* >(object);
  (void)_this;
}
void CustomerIndex::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomerIndex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomerIndex& CustomerIndex::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomerIndex_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void CustomerIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.CustomerIndex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && mapping_ != nullptr) {
    delete mapping_;
  }
  mapping_ = nullptr;
  if (GetArena() == nullptr && expires_at_ != nullptr) {
    delete expires_at_;
  }
  expires_at_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomerIndex::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.IndexMapping mapping = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mapping(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expires_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expires_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomerIndex::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.CustomerIndex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.IndexMapping mapping = 1;
  if (this->has_mapping()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mapping(this), target, stream);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::expires_at(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.CustomerIndex)
  return target;
}

size_t CustomerIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.CustomerIndex)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.elarian.hera.proto.IndexMapping mapping = 1;
  if (this->has_mapping()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mapping_);
  }

  // .google.protobuf.Timestamp expires_at = 2;
  if (this->has_expires_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expires_at_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomerIndex::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.CustomerIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomerIndex* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomerIndex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.CustomerIndex)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.CustomerIndex)
    MergeFrom(*source);
  }
}

void CustomerIndex::MergeFrom(const CustomerIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.CustomerIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mapping()) {
    _internal_mutable_mapping()->::com::elarian::hera::proto::IndexMapping::MergeFrom(from._internal_mapping());
  }
  if (from.has_expires_at()) {
    _internal_mutable_expires_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expires_at());
  }
}

void CustomerIndex::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.CustomerIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomerIndex::CopyFrom(const CustomerIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.CustomerIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomerIndex::IsInitialized() const {
  return true;
}

void CustomerIndex::InternalSwap(CustomerIndex* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomerIndex, expires_at_)
      + sizeof(CustomerIndex::expires_at_)
      - PROTOBUF_FIELD_OFFSET(CustomerIndex, mapping_)>(
          reinterpret_cast<char*>(&mapping_),
          reinterpret_cast<char*>(&other->mapping_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomerIndex::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AppConnectionProps::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& connection_time(const AppConnectionProps* msg);
  static const PROTOBUF_NAMESPACE_ID::StringValue& ip_address(const AppConnectionProps* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
AppConnectionProps::_Internal::connection_time(const AppConnectionProps* msg) {
  return *msg->connection_time_;
}
const PROTOBUF_NAMESPACE_ID::StringValue&
AppConnectionProps::_Internal::ip_address(const AppConnectionProps* msg) {
  return *msg->ip_address_;
}
void AppConnectionProps::clear_connection_time() {
  if (GetArena() == nullptr && connection_time_ != nullptr) {
    delete connection_time_;
  }
  connection_time_ = nullptr;
}
void AppConnectionProps::clear_ip_address() {
  if (GetArena() == nullptr && ip_address_ != nullptr) {
    delete ip_address_;
  }
  ip_address_ = nullptr;
}
AppConnectionProps::AppConnectionProps(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.AppConnectionProps)
}
AppConnectionProps::AppConnectionProps(const AppConnectionProps& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_connection_id(), 
      GetArena());
  }
  if (from._internal_has_connection_time()) {
    connection_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.connection_time_);
  } else {
    connection_time_ = nullptr;
  }
  if (from._internal_has_ip_address()) {
    ip_address_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.ip_address_);
  } else {
    ip_address_ = nullptr;
  }
  simplex_mode_ = from.simplex_mode_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.AppConnectionProps)
}

void AppConnectionProps::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AppConnectionProps_common_5fmodel_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&connection_time_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&simplex_mode_) -
      reinterpret_cast<char*>(&connection_time_)) + sizeof(simplex_mode_));
}

AppConnectionProps::~AppConnectionProps() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.AppConnectionProps)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AppConnectionProps::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete connection_time_;
  if (this != internal_default_instance()) delete ip_address_;
}

void AppConnectionProps::ArenaDtor(void* object) {
  AppConnectionProps* _this = reinterpret_cast< AppConnectionProps* >(object);
  (void)_this;
}
void AppConnectionProps::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AppConnectionProps::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AppConnectionProps& AppConnectionProps::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AppConnectionProps_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void AppConnectionProps::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.AppConnectionProps)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmpty();
  if (GetArena() == nullptr && connection_time_ != nullptr) {
    delete connection_time_;
  }
  connection_time_ = nullptr;
  if (GetArena() == nullptr && ip_address_ != nullptr) {
    delete ip_address_;
  }
  ip_address_ = nullptr;
  simplex_mode_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppConnectionProps::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string connection_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.AppConnectionProps.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp connection_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue ip_address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ip_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool simplex_mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          simplex_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AppConnectionProps::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.AppConnectionProps)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_id = 1;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.AppConnectionProps.connection_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_connection_id(), target);
  }

  // .google.protobuf.Timestamp connection_time = 2;
  if (this->has_connection_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::connection_time(this), target, stream);
  }

  // .google.protobuf.StringValue ip_address = 3;
  if (this->has_ip_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::ip_address(this), target, stream);
  }

  // bool simplex_mode = 4;
  if (this->simplex_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_simplex_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.AppConnectionProps)
  return target;
}

size_t AppConnectionProps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.AppConnectionProps)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 1;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // .google.protobuf.Timestamp connection_time = 2;
  if (this->has_connection_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *connection_time_);
  }

  // .google.protobuf.StringValue ip_address = 3;
  if (this->has_ip_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ip_address_);
  }

  // bool simplex_mode = 4;
  if (this->simplex_mode() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppConnectionProps::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.AppConnectionProps)
  GOOGLE_DCHECK_NE(&from, this);
  const AppConnectionProps* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AppConnectionProps>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.AppConnectionProps)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.AppConnectionProps)
    MergeFrom(*source);
  }
}

void AppConnectionProps::MergeFrom(const AppConnectionProps& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.AppConnectionProps)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {
    _internal_set_connection_id(from._internal_connection_id());
  }
  if (from.has_connection_time()) {
    _internal_mutable_connection_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_connection_time());
  }
  if (from.has_ip_address()) {
    _internal_mutable_ip_address()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_ip_address());
  }
  if (from.simplex_mode() != 0) {
    _internal_set_simplex_mode(from._internal_simplex_mode());
  }
}

void AppConnectionProps::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.AppConnectionProps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppConnectionProps::CopyFrom(const AppConnectionProps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.AppConnectionProps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppConnectionProps::IsInitialized() const {
  return true;
}

void AppConnectionProps::InternalSwap(AppConnectionProps* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppConnectionProps, simplex_mode_)
      + sizeof(AppConnectionProps::simplex_mode_)
      - PROTOBUF_FIELD_OFFSET(AppConnectionProps, connection_time_)>(
          reinterpret_cast<char*>(&connection_time_),
          reinterpret_cast<char*>(&other->connection_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppConnectionProps::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CustomerNumber::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::StringValue& partition(const CustomerNumber* msg);
};

const PROTOBUF_NAMESPACE_ID::StringValue&
CustomerNumber::_Internal::partition(const CustomerNumber* msg) {
  return *msg->partition_;
}
void CustomerNumber::clear_partition() {
  if (GetArena() == nullptr && partition_ != nullptr) {
    delete partition_;
  }
  partition_ = nullptr;
}
CustomerNumber::CustomerNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.elarian.hera.proto.CustomerNumber)
}
CustomerNumber::CustomerNumber(const CustomerNumber& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_number().empty()) {
    number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_number(), 
      GetArena());
  }
  if (from._internal_has_partition()) {
    partition_ = new PROTOBUF_NAMESPACE_ID::StringValue(*from.partition_);
  } else {
    partition_ = nullptr;
  }
  provider_ = from.provider_;
  // @@protoc_insertion_point(copy_constructor:com.elarian.hera.proto.CustomerNumber)
}

void CustomerNumber::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CustomerNumber_common_5fmodel_2eproto.base);
  number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&partition_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&provider_) -
      reinterpret_cast<char*>(&partition_)) + sizeof(provider_));
}

CustomerNumber::~CustomerNumber() {
  // @@protoc_insertion_point(destructor:com.elarian.hera.proto.CustomerNumber)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CustomerNumber::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete partition_;
}

void CustomerNumber::ArenaDtor(void* object) {
  CustomerNumber* _this = reinterpret_cast< CustomerNumber* >(object);
  (void)_this;
}
void CustomerNumber::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CustomerNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomerNumber& CustomerNumber::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CustomerNumber_common_5fmodel_2eproto.base);
  return *internal_default_instance();
}


void CustomerNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.elarian.hera.proto.CustomerNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_.ClearToEmpty();
  if (GetArena() == nullptr && partition_ != nullptr) {
    delete partition_;
  }
  partition_ = nullptr;
  provider_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomerNumber::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .com.elarian.hera.proto.CustomerNumberProvider provider = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_provider(static_cast<::com::elarian::hera::proto::CustomerNumberProvider>(val));
        } else goto handle_unusual;
        continue;
      // string number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com.elarian.hera.proto.CustomerNumber.number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.StringValue partition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_partition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CustomerNumber::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.elarian.hera.proto.CustomerNumber)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.elarian.hera.proto.CustomerNumberProvider provider = 1;
  if (this->provider() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_provider(), target);
  }

  // string number = 2;
  if (this->number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.elarian.hera.proto.CustomerNumber.number");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_number(), target);
  }

  // .google.protobuf.StringValue partition = 3;
  if (this->has_partition()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::partition(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.elarian.hera.proto.CustomerNumber)
  return target;
}

size_t CustomerNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.elarian.hera.proto.CustomerNumber)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string number = 2;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_number());
  }

  // .google.protobuf.StringValue partition = 3;
  if (this->has_partition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *partition_);
  }

  // .com.elarian.hera.proto.CustomerNumberProvider provider = 1;
  if (this->provider() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_provider());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomerNumber::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.elarian.hera.proto.CustomerNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomerNumber* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CustomerNumber>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.elarian.hera.proto.CustomerNumber)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.elarian.hera.proto.CustomerNumber)
    MergeFrom(*source);
  }
}

void CustomerNumber::MergeFrom(const CustomerNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.elarian.hera.proto.CustomerNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number().size() > 0) {
    _internal_set_number(from._internal_number());
  }
  if (from.has_partition()) {
    _internal_mutable_partition()->PROTOBUF_NAMESPACE_ID::StringValue::MergeFrom(from._internal_partition());
  }
  if (from.provider() != 0) {
    _internal_set_provider(from._internal_provider());
  }
}

void CustomerNumber::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.elarian.hera.proto.CustomerNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomerNumber::CopyFrom(const CustomerNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.elarian.hera.proto.CustomerNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomerNumber::IsInitialized() const {
  return true;
}

void CustomerNumber::InternalSwap(CustomerNumber* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  number_.Swap(&other->number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomerNumber, provider_)
      + sizeof(CustomerNumber::provider_)
      - PROTOBUF_FIELD_OFFSET(CustomerNumber, partition_)>(
          reinterpret_cast<char*>(&partition_),
          reinterpret_cast<char*>(&other->partition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomerNumber::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace hera
}  // namespace elarian
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::DataMapValue* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::DataMapValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::DataMapValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::Cash* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::Cash >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::Cash >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::IndexMapping* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::IndexMapping >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::IndexMapping >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CustomerIndex* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CustomerIndex >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CustomerIndex >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::AppConnectionProps* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::AppConnectionProps >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::AppConnectionProps >(arena);
}
template<> PROTOBUF_NOINLINE ::com::elarian::hera::proto::CustomerNumber* Arena::CreateMaybeMessage< ::com::elarian::hera::proto::CustomerNumber >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::elarian::hera::proto::CustomerNumber >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
